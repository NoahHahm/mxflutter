/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./lib/app_demo/animation.js":
/*!***********************************!*\
  !*** ./lib/app_demo/animation.js ***!
  \***********************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 107:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

//  MXFlutterFramework
//  Copyright 2019 The MXFlutter Authors. All rights reserved.
//
//  Use of this source code is governed by a MIT-style license that can be
//  found in the LICENSE file.
Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const mx_dart_sdk_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/mx-dart-sdk */ "@tencent/mxflutter-widgets/mx-dart-sdk");
const animation_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/animation */ "@tencent/mxflutter-widgets/animation");
//业务代码
class JSAnimationPage extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super('JSAnimationPage');
    }
    createState() {
        return new JSAnimationPageState(this);
    }
}
class JSAnimationPageState extends mxflutter_1.MXJSWidgetState {
    constructor() {
        super();
        this.tween = new animation_1.Tween({
            begin: 50.0,
            end: 300.0
        });
        this.animationController = new animation_1.AnimationController({
            duration: new mx_dart_sdk_1.Duration({
                seconds: 3
            })
        });
        this.animation = new animation_1.Animation({
            tween: this.tween,
            controller: this.animationController
        });
        this.animation.addStatusListener(this.animationLoopFunc.bind(this));
        this.count = 0;
    }
    animationLoopFunc(status) {
        mxflutter_1.MXJSLog.log('callback from flutter ....  ' + status);
        if (status == animation_1.AnimationStatus.completed) {
            this.animationController.reverse();
            this.count++;
        }
        else if (status == animation_1.AnimationStatus.dismissed) {
            this.animationController.forward();
        }
        if (this.count > 5) {
            this.animation.removeStatusListener(this.animationLoopFunc);
        }
    }
    beginAnimation() {
        this.animationController.forward();
    }
    build(context) {
        var imageRatio = 1.455;
        let w = new material_1.Scaffold({
            appBar: new material_1.AppBar({
                title: new widgets_1.Text("Animation Demo")
            }),
            floatingActionButton: new material_1.FloatingActionButton({
                child: new widgets_1.Icon(new widgets_1.IconData(0xe145, {
                    fontFamily: 'MaterialIcons',
                    semanticLabel: 'Action'
                })),
                onPressed: function () {
                    this.beginAnimation();
                }.bind(this)
            }),
            body: new ScaleAnimation({
                child: widgets_1.Image.network('https://pic2.zhimg.com/50/v2-6416ef6d3181117a0177275286fac8f3_hd.jpg'),
                animation: this.animation
            })
        });
        return w;
    }
}
class ScaleAnimation extends mxflutter_1.MXSingleTickerMixinWidget {
    constructor({ child, animation } = {}) {
        super('ScaleAnimation');
        this.child = child;
        this.animation = animation;
    }
    createState() {
        return new ScaleAnimationState(this);
    }
}
class ScaleAnimationState extends mxflutter_1.MXSingleTickerMixinWidgetState {
    build(context) {
        var imageRatio = 1.455;
        let widget = new widgets_1.Center({
            child: new widgets_1.AnimatedBuilder({
                animation: this.widget.animation,
                widget: new widgets_1.Container({
                    // height: this.animation.value() * imageRatio + 2 - 5,
                    width: "$value",
                    child: this.widget.child
                })
                // child: this.child,
            })
        });
        return widget;
    }
}
module.exports = {
    JSAnimationPage
};


/***/ }),

/***/ "./lib/app_demo/component/section_title.js":
/*!*************************************************!*\
  !*** ./lib/app_demo/component/section_title.js ***!
  \*************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 43:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const mx_dart_sdk_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/mx-dart-sdk */ "@tencent/mxflutter-widgets/mx-dart-sdk");
const painting_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/painting */ "@tencent/mxflutter-widgets/painting");
class SectionTitle extends mxflutter_1.MXJSStatelessWidget {
    constructor(title, { key } = {}) {
        super("SectionTitle", {
            key: key
        });
        this.title = title;
    }
    build(context) {
        return new widgets_1.Container({
            padding: painting_1.EdgeInsets.all(10.0),
            color: material_1.Theme.of(context).primaryColor,
            child: new widgets_1.Row({
                children: [
                    new widgets_1.Icon(new widgets_1.IconData(0xe80e, {
                        fontFamily: 'MaterialIcons'
                    }), {
                        size: 20,
                        color: new mx_dart_sdk_1.Color(0xFFFFFFFF)
                    }),
                    new widgets_1.Padding({
                        padding: painting_1.EdgeInsets.fromLTRB(10.0, 0.0, 0.0, 0.0)
                    }),
                    new widgets_1.Text(this.title, {
                        textAlign: mx_dart_sdk_1.TextAlign.start,
                        style: new mx_dart_sdk_1.TextStyle({
                            fontSize: 16,
                            fontWeight: material_1.Theme.of(context).textTheme.subtitle1.fontWeight,
                            color: material_1.Colors.white
                        })
                    })
                ]
            })
        });
    }
}
module.exports = {
    SectionTitle,
};


/***/ }),

/***/ "./lib/app_demo/contact.js":
/*!*********************************!*\
  !*** ./lib/app_demo/contact.js ***!
  \*********************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 435:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

//  MXFlutterFramework
//  Copyright 2019 The MXFlutter Authors. All rights reserved.
//
//  Use of this source code is governed by a MIT-style license that can be
//  found in the LICENSE file.
Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
// import {
//     Container,
//     Text,
//     Icon,
//     IconData,
//     Row,
//     Padding,
//     Image,
//     CustomScrollView,
//     SliverChildListDelegate,
//     Expanded,
//     Column,
//     MergeSemantics,
//     SizedBox,
//     Stack,
//     AnnotatedRegion,
//     DecoratedBox,
//     SliverList,
//     DefaultTextStyle,
//     SafeArea,
// } from '@tencent/mxflutter-widgets/widgets';
// import {
//     Color,
//     Brightness
// } from '@tencent/mxflutter-widgets/mx-dart-sdk';
// import {
//     EdgeInsets,
//     BoxFit,
//     BorderSide,
//     BoxDecoration,
//     Border,
//     LinearGradient,
//     Alignment
// } from '@tencent/mxflutter-widgets/painting';
// import {
//     StackFit,
//     CrossAxisAlignment,
//     MainAxisAlignment
// } from '@tencent/mxflutter-widgets/rendering';
const services_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/services */ "@tencent/mxflutter-widgets/services");
class ContactCategory extends mxflutter_1.MXJSStatelessWidget {
    constructor({ icon, children } = {}) {
        super('ContactCategory');
        this.icon = icon;
        this.children = children;
    }
    build(context) {
        let themeData = material_1.Theme.of(context);
        let widget = new material_1.Container({
            padding: material_1.EdgeInsets.symmetric({
                vertical: 16.0
            }),
            decoration: new material_1.BoxDecoration({
                border: new material_1.Border({
                    bottom: new material_1.BorderSide({
                        color: themeData.dividerColor
                    })
                })
            }),
            child: new material_1.DefaultTextStyle({
                style: themeData.textTheme.subhead,
                child: new material_1.SafeArea({
                    top: false,
                    bottom: false,
                    child: new material_1.Row({
                        crossAxisAlignment: material_1.CrossAxisAlignment.start,
                        children: [
                            new material_1.Container({
                                padding: material_1.EdgeInsets.symmetric({
                                    vertical: 24.0
                                }),
                                width: 72.0,
                                child: new material_1.Icon(this.icon, {
                                    color: themeData.primaryColor
                                })
                            }),
                            new material_1.Expanded({
                                child: new material_1.Column({
                                    children: this.children
                                })
                            })
                        ]
                    })
                })
            })
        });
        return widget;
    }
}
class ContactItem extends mxflutter_1.MXJSStatelessWidget {
    constructor({ icon, lines, tooltip, onPressed } = {}) {
        super('ContactItem');
        this.icon = icon;
        this.lines = lines;
        this.tooltip = tooltip;
        this.onPressed = onPressed;
    }
    build(context) {
        let themeData = material_1.Theme.of(context);
        let columnChildren = [];
        let rowChildren = [];
        let length = this.lines.length;
        for (let i = 0; i < length; i++) {
            if (i != length - 1) {
                columnChildren.push(new material_1.Text(this.lines[i]));
            }
            else {
                columnChildren.push(new material_1.Text(this.lines[i], {
                    style: themeData.textTheme.caption
                }));
            }
        }
        rowChildren = [
            new material_1.Expanded({
                child: new material_1.Column({
                    crossAxisAlignment: material_1.CrossAxisAlignment.start,
                    children: columnChildren,
                }),
            }),
        ];
        if (this.icon != null) {
            rowChildren.push(new material_1.SizedBox({
                width: 72.0,
                child: new material_1.IconButton({
                    icon: new material_1.Icon(this.icon),
                    color: themeData.primaryColor,
                    onPressed: this.onPressed,
                }),
            }));
        }
        let widget = new material_1.MergeSemantics({
            child: new material_1.Padding({
                padding: material_1.EdgeInsets.symmetric({
                    vertical: 16.0,
                }),
                child: new material_1.Row({
                    mainAxisAlignment: material_1.MainAxisAlignment.spaceBetween,
                    children: rowChildren,
                }),
            }),
        });
        return widget;
    }
}
const AppBarBehavior = {
    normal: 0,
    pinned: 1,
    floating: 2,
    snapping: 3,
};
class JSContactPage extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super('JSContactPage');
    }
    createState() {
        return new JSContactPageState(this);
    }
}
class JSContactPageState extends mxflutter_1.MXJSWidgetState {
    build(context) {
        let widget = new material_1.Theme({
            data: new material_1.ThemeData({
                brightness: material_1.Brightness.light,
                primarySwatch: material_1.Colors.indigo,
                platform: material_1.Theme.of(context).platform
            }),
            child: new material_1.Scaffold({
                body: new material_1.CustomScrollView({
                    slivers: this.buildBody(context)
                })
            })
        });
        return widget;
    }
    buildBody(context) {
        let appBarHeight = 256.0;
        let appBarBehavior = AppBarBehavior.pinned;
        let themeData = material_1.Theme.of(context);
        let widget = [
            new material_1.SliverAppBar({
                backgroundColor: themeData.primaryColor,
                expandedHeight: appBarHeight,
                pinned: appBarBehavior == AppBarBehavior.pinned,
                floating: appBarBehavior == AppBarBehavior.floating || appBarBehavior == AppBarBehavior.snapping,
                snap: appBarBehavior == AppBarBehavior.snapping,
                actions: [
                    new material_1.IconButton({
                        icon: new material_1.Icon(new material_1.IconData(0xe150, {
                            fontFamily: 'MaterialIcons'
                        })),
                        tooltip: 'Edit',
                        onPressed: function () {
                            mxflutter_1.MXJSLog.log('edit button pressed');
                        }
                    }),
                    new material_1.PopupMenuButton({
                        onSelected: function (args) {
                            mxflutter_1.MXJSLog.log('more button pressed, index ' + args);
                        },
                        itemBuilder: function (context) {
                            let list = [
                                new material_1.PopupMenuItem({
                                    value: AppBarBehavior.normal,
                                    child: new material_1.Text('App bar scrolls away'),
                                }),
                                new material_1.PopupMenuItem({
                                    value: AppBarBehavior.pinned,
                                    child: new material_1.Text('App bar stays away'),
                                }),
                                new material_1.PopupMenuItem({
                                    value: AppBarBehavior.floating,
                                    child: new material_1.Text('App bar floats'),
                                }),
                                new material_1.PopupMenuItem({
                                    value: AppBarBehavior.snapping,
                                    child: new material_1.Text('App bar snaps'),
                                }),
                            ];
                            return list;
                        }
                    })
                ],
                flexibleSpace: new material_1.FlexibleSpaceBar({
                    title: new material_1.Text('Ali Connors'),
                    background: new material_1.Stack({
                        fit: material_1.StackFit.expand,
                        children: [
                            material_1.Image.asset('people/ali_landscape.png', {
                                __mx_package: 'flutter_gallery_assets',
                                fit: material_1.BoxFit.cover,
                                height: appBarHeight
                            }),
                            new material_1.DecoratedBox({
                                decoration: new material_1.BoxDecoration({
                                    gradient: new material_1.LinearGradient({
                                        begin: new material_1.Alignment(0.0, -1.0),
                                        end: new material_1.Alignment(0.0, -0.4),
                                        colors: [
                                            new material_1.Color(0x60000000),
                                            new material_1.Color(0x00000000),
                                        ]
                                    })
                                })
                            })
                        ]
                    })
                })
            }),
            new material_1.SliverList({
                delegate: new material_1.SliverChildListDelegate([
                    new material_1.AnnotatedRegion({
                        value: new services_1.SystemUiOverlayStyle({
                            systemNavigationBarColor: new material_1.Color(0xFF000000),
                            systemNavigationBarDividerColor: null,
                            statusBarColor: null,
                            systemNavigationBarIconBrightness: material_1.Brightness.light,
                            statusBarIconBrightness: material_1.Brightness.light,
                            statusBarBrightness: material_1.Brightness.dark
                        }),
                        child: new ContactCategory({
                            icon: new material_1.IconData(0xe0b0, {
                                fontFamily: 'MaterialIcons'
                            }),
                            children: [
                                new ContactItem({
                                    icon: new material_1.IconData(0xe0c9, {
                                        fontFamily: 'MaterialIcons'
                                    }),
                                    tooltip: 'Send message',
                                    onPressed: function () {
                                        mxflutter_1.MXJSLog.log('Send message');
                                    },
                                    lines: [
                                        '(650) 555-1234',
                                        'Mobile'
                                    ]
                                }),
                                new ContactItem({
                                    icon: new material_1.IconData(0xe0c9, {
                                        fontFamily: 'MaterialIcons'
                                    }),
                                    tooltip: 'Send message',
                                    onPressed: function () {
                                        mxflutter_1.MXJSLog.log('Send message');
                                    },
                                    lines: [
                                        '(323) 555-6789',
                                        'Work'
                                    ]
                                }),
                                new ContactItem({
                                    icon: new material_1.IconData(0xe0c9, {
                                        fontFamily: 'MaterialIcons'
                                    }),
                                    tooltip: 'Send message',
                                    onPressed: function () {
                                        mxflutter_1.MXJSLog.log('Send message');
                                    },
                                    lines: [
                                        '(650) 555-6789',
                                        'Home'
                                    ]
                                })
                            ]
                        })
                    }),
                    new ContactCategory({
                        icon: new material_1.IconData(0xe0d0, {
                            fontFamily: 'MaterialIcons'
                        }),
                        children: [
                            new ContactItem({
                                icon: new material_1.IconData(0xe0be, {
                                    fontFamily: 'MaterialIcons'
                                }),
                                tooltip: 'Send personal e-mail',
                                onPressed: function () {
                                    mxflutter_1.MXJSLog.log('Send personal e-mail');
                                },
                                lines: [
                                    'ali_connors@example.com',
                                    'Personal'
                                ]
                            }),
                            new ContactItem({
                                icon: new material_1.IconData(0xe0be, {
                                    fontFamily: 'MaterialIcons'
                                }),
                                tooltip: 'Send personal e-mail',
                                onPressed: function () {
                                    mxflutter_1.MXJSLog.log('Send personal e-mail');
                                },
                                lines: [
                                    'aliconnors@example.com',
                                    'Work'
                                ]
                            })
                        ]
                    }),
                    new ContactCategory({
                        icon: new material_1.IconData(0xe0c8, {
                            fontFamily: 'MaterialIcons'
                        }),
                        children: [
                            new ContactItem({
                                icon: new material_1.IconData(0xe55b, {
                                    fontFamily: 'MaterialIcons'
                                }),
                                tooltip: 'Open map',
                                onPressed: function () {
                                    mxflutter_1.MXJSLog.log('Open map');
                                },
                                lines: [
                                    '2000 Main Street',
                                    'San Francisco, CA',
                                    'Home'
                                ]
                            }),
                            new ContactItem({
                                icon: new material_1.IconData(0xe55b, {
                                    fontFamily: 'MaterialIcons'
                                }),
                                tooltip: 'Open map',
                                onPressed: function () {
                                    mxflutter_1.MXJSLog.log('Open map');
                                },
                                lines: [
                                    '1600 Amphitheater Parkway',
                                    'Mountain View, CA',
                                    'Work'
                                ]
                            }),
                            new ContactItem({
                                icon: new material_1.IconData(0xe55b, {
                                    fontFamily: 'MaterialIcons'
                                }),
                                tooltip: 'Open map',
                                onPressed: function () {
                                    mxflutter_1.MXJSLog.log('Open map');
                                },
                                lines: [
                                    '126 Severyns Ave',
                                    'Mountain View, CA',
                                    'Jet Travel'
                                ]
                            })
                        ]
                    }),
                    new ContactCategory({
                        icon: new material_1.IconData(0xe8df, {
                            fontFamily: 'MaterialIcons'
                        }),
                        children: [
                            new ContactItem({
                                lines: [
                                    'Birthday',
                                    'January 9th, 1989'
                                ]
                            }),
                            new ContactItem({
                                lines: [
                                    'Wedding anniversary',
                                    'June 21st, 2014'
                                ]
                            }),
                            new ContactItem({
                                lines: [
                                    'First day in office',
                                    'January 20th, 2015'
                                ]
                            }),
                            new ContactItem({
                                lines: [
                                    'Last day in office',
                                    'August 9th, 2018'
                                ]
                            })
                        ]
                    })
                ])
            })
        ];
        return widget;
    }
}
module.exports = {
    JSContactPage
};


/***/ }),

/***/ "./lib/app_demo/custom_js_api.js":
/*!***************************************!*\
  !*** ./lib/app_demo/custom_js_api.js ***!
  \***************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: this is used directly at 7:17-21 */
/*! CommonJS bailout: module.exports is used directly at 111:0-14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

//  MXFlutterFramework
//  Copyright 2019 The MXFlutter Authors. All rights reserved.
//
//  Use of this source code is governed by a MIT-style license that can be
//  found in the LICENSE file.
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const mx_dart_sdk_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/mx-dart-sdk */ "@tencent/mxflutter-widgets/mx-dart-sdk");
const painting_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/painting */ "@tencent/mxflutter-widgets/painting");
class MXMirrorExample extends mxflutter_1.MXLifecycleDartClass {
    constructor(baseOptions) {
        //创建对应FLutter对象
        var newDartMirrorObjArgs = new mxflutter_1.MXMirrorObjMethodCall({
            className: "MXMirrorExample",
            args: {
                "key": 123
            }
        });
        super(newDartMirrorObjArgs);
    }
    //封装getMyAppName
    getMyAppName(platform, { v } = {}) {
        let argument = new mxflutter_1.MXMirrorObjMethodCall({
            className: "MXMirrorExample",
            funcName: "getMyAppName",
            args: {
                platform: platform,
                v: v,
            }
        });
        return this.invokeMirrorObjMethodAsyc(argument);
    }
    // release dart侧实例
    release() {
        super.release();
    }
}
//使用MXMirrorExample
let g_jsApi = new MXMirrorExample();
const { SectionTitle } = __webpack_require__(/*! ./component/section_title.js */ "./lib/app_demo/component/section_title.js");
class PageExampleJSApi extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super("PageExampleJSApi");
    }
    createState() {
        return new PageExampleJSApiState(this);
    }
}
class PageExampleJSApiState extends mxflutter_1.MXJSWidgetState {
    constructor() {
        super("PageExampleJSApiState");
        this.response = "点击小人Run上面的代码";
    }
    codeText() {
        return "let result = await this.jsApi.getMyAppName('iOS', {v:'1.0'})";
    }
    build(context) {
        let widget = new material_1.Scaffold({
            appBar: new material_1.AppBar({
                title: new widgets_1.Text("MXMirrorExample Example"),
            }),
            body: new widgets_1.ListView({
                children: [
                    new SectionTitle("Code 调用Dart MXMirrorExample.getMyAppName"),
                    new material_1.ListTile({
                        trailing: new widgets_1.Icon(material_1.Icons["directions_run"]),
                        title: new widgets_1.Text(this.codeText(), {
                            style: new mx_dart_sdk_1.TextStyle({
                                color: material_1.Colors.gray,
                            })
                        }),
                        onTap: function () {
                            return __awaiter(this, void 0, void 0, function* () {
                                //call js api
                                let result = yield g_jsApi.getMyAppName("iOS", {
                                    v: "1.0"
                                });
                                this.setState(function () {
                                    this.response = result;
                                }.bind(this));
                            });
                        }.bind(this)
                    }),
                    new SectionTitle("JSApi Result"),
                    new widgets_1.Padding({
                        padding: painting_1.EdgeInsets.all(10),
                        child: new widgets_1.Text(this.response, {
                            style: new mx_dart_sdk_1.TextStyle({
                                color: material_1.Colors.gray,
                            })
                        }),
                    })
                ],
            })
        });
        return widget;
    }
}
module.exports = {
    PageExampleJSApi,
};


/***/ }),

/***/ "./lib/app_demo/listview_example.js":
/*!******************************************!*\
  !*** ./lib/app_demo/listview_example.js ***!
  \******************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: this is used directly at 7:17-21 */
/*! CommonJS bailout: module.exports is used directly at 346:0-14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

//  MXFlutterFramework
//  Copyright 2019 The MXFlutter Authors. All rights reserved.
//
//  Use of this source code is governed by a MIT-style license that can be
//  found in the LICENSE file.
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const mx_dart_sdk_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/mx-dart-sdk */ "@tencent/mxflutter-widgets/mx-dart-sdk");
const painting_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/painting */ "@tencent/mxflutter-widgets/painting");
const services_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/services */ "@tencent/mxflutter-widgets/services");
let { SmartRefresher, ClassicFooter, RefreshController } = __webpack_require__(/*! @tencent/mxflutter-pull-to-refresh */ "../mxflutter-packages/mxflutter-pull-to-refresh/index.js");
const { CachedNetworkImage } = __webpack_require__(/*! @tencent/mxflutter-cached-network-image */ "../mxflutter-packages/mxflutter-cached-network-image/index.js");
const { SectionTitle } = __webpack_require__(/*! ./component/section_title.js */ "./lib/app_demo/component/section_title.js");
const packages__dio = __webpack_require__(/*! @tencent/mxflutter-dio */ "../mxflutter-packages/mxflutter-dio/index.js");
//用于演示网络请求cgi
//let cgi = "https://c.m.163.com/nc/article/headline/T1348649580692/0-10.html";
//data
let g_newsOrder = 0;
//
class ListViewDemo extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super('ListViewDemo');
    }
    createState() {
        return new ListViewDemoState(this);
    }
    testIDE(var1, var2, list, abc) {
        return [];
    }
}
class ListViewDemoState extends mxflutter_1.MXJSWidgetState {
    constructor() {
        super();
        this.refreshController = new RefreshController();
        this.methodChannel = new services_1.MethodChannel('MXFlutter_MethodChannel_Demo');
        this.dio = packages__dio.Dio();
        this.newsArray = [];
        this.pageCount = 10;
        this.pageIndex = 0;
        this.loading = false;
        this.buildCount = 1;
    }
    initState() {
        super.initState();
        this.refresh(true);
    }
    refresh(isInit) {
        return __awaiter(this, void 0, void 0, function* () {
            let newsArray = yield this.requestHttpData(true);
            if (!isInit) {
                this.endRefreshOrLoadMore(true, newsArray == null || newsArray.length == 0);
            }
            this.setState(function () {
                this.newsArray = newsArray.concat(this.newsArray);
            }.bind(this));
            return newsArray;
        });
    }
    loadMore() {
        return __awaiter(this, void 0, void 0, function* () {
            let newsArray = yield this.requestHttpData(false);
            this.endRefreshOrLoadMore(false, newsArray == null || newsArray.length == 0);
            this.setState(function () {
                this.newsArray = this.newsArray.concat(newsArray);
            }.bind(this));
        });
    }
    requestHttpData(isRefresh) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.loading) {
                return [];
            }
            this.loading = true;
            let result = yield this.requestNews();
            this.loading = false;
            if (result) {
                if (typeof result == 'String') {
                    result = JSON.parse(result);
                }
                let respArray = result['T1348649580692'];
                return respArray;
            }
            else {
                return [];
            }
        });
    }
    endRefreshOrLoadMore(isRefresh, isNoData) {
        this.refreshController.loadComplete();
        this.refreshController.refreshCompleted();
        return;
        if (isRefresh) {
            this.refreshController.refreshCompleted();
        }
        else {
            if (isNoData) {
                this.refreshController.loadNoData();
            }
            else {
                this.refreshController.loadComplete();
            }
        }
    }
    ///dio 示例
    requestNews() {
        return __awaiter(this, void 0, void 0, function* () {
            this.pageIndex = this.pageIndex % 4;
            let startIndex = this.pageIndex * this.pageCount;
            let endIndex = startIndex + this.pageCount;
            this.pageIndex++;
            let url = 'https://c.m.163.com/nc/article/headline/T1348649580692/' + startIndex + '-' + endIndex + '.html';
            try {
                // let response = await fetch(url);
                // MXJSLog.log("requestNews:resp: " + response.text);
                let response = yield this.dio.get(url);
                mxflutter_1.MXJSLog.debug('await Dio.get(urlStr):request() :' + response);
                return response.data;
            }
            catch (e$) {
                // let e = dart.getThrown(e$);
                // MXJSLog.log('requestNews:resp:  error:' + e);
                return null;
            }
        });
    }
    build(context) {
        g_newsOrder = 0;
        this.buildCount++;
        let widget = new material_1.Scaffold({
            appBar: new material_1.AppBar({
                title: new widgets_1.Text('网易新闻 ListViewExample'),
            }),
            body: new material_1.Scrollbar({
                child: new SmartRefresher({
                    controller: this.refreshController,
                    enablePullUp: true,
                    enablePullDown: true,
                    footer: new ClassicFooter({
                        failedIcon: null,
                        canLoadingIcon: null,
                        idleIcon: null,
                        noMoreIcon: null,
                        loadingIcon: null,
                        canLoadingText: '',
                        failedText: '网络错误，请重试',
                        noDataText: '已经没有了',
                        loadingText: '加载中...',
                        idleText: '上拉加载更多',
                    }),
                    // 动态创建Item
                    child: widgets_1.ListView.builder({
                        itemCount: this.newsArray.length,
                        itemBuilder: function (context, index) {
                            return new ListViewItem(this.newsArray[index]);
                        }.bind(this),
                    }),
                    onRefresh: function () {
                        mxflutter_1.MXJSLog.log('onRefresh');
                        this.refresh();
                    }.bind(this),
                    onLoading: function () {
                        mxflutter_1.MXJSLog.log('onLoading');
                        this.loadMore();
                    }.bind(this),
                }),
            }),
        });
        return widget;
    }
}
class ListViewItem extends mxflutter_1.MXJSStatelessWidget {
    constructor(oneNewsMap) {
        super('ListViewItem');
        this.newsModel = NewsModel.fromJSON(oneNewsMap);
        this.index = Math.ceil(Math.random() * 10000);
    }
    hotCard(context, newsModel) {
        g_newsOrder++;
        return new widgets_1.Container({
            decoration: new painting_1.BoxDecoration({
                color: material_1.Colors.white,
                border: new painting_1.BorderDirectional({
                    bottom: new painting_1.BorderSide({
                        color: material_1.Colors.black12,
                        width: 1.0,
                    }),
                }),
            }),
            child: new material_1.FlatButton({
                onPressed: function () { },
                child: new widgets_1.Container({
                    padding: painting_1.EdgeInsets.only({
                        top: 8.0,
                        bottom: 8.0
                    }),
                    child: new widgets_1.Row({
                        children: [
                            new widgets_1.Expanded({
                                flex: 1,
                                child: new widgets_1.Column({
                                    children: [
                                        new widgets_1.Container({
                                            child: new widgets_1.Text(String(g_newsOrder), {
                                                style: new mx_dart_sdk_1.TextStyle({
                                                    color: material_1.Colors.red,
                                                    fontSize: 18.0,
                                                }),
                                            }),
                                            alignment: painting_1.Alignment.topLeft,
                                        }),
                                        newsModel.rise != null ?
                                            new widgets_1.Row({
                                                children: [
                                                    new widgets_1.Icon(new widgets_1.IconData(0xe5d8, {
                                                        fontFamily: 'MaterialIcons'
                                                    }), {
                                                        color: material_1.Colors.red,
                                                        size: 10.0,
                                                    }),
                                                    new widgets_1.Text(newsModel.rise, {
                                                        style: new mx_dart_sdk_1.TextStyle({
                                                            color: material_1.Colors.red,
                                                            fontSize: 10.0,
                                                        }),
                                                    }),
                                                ],
                                            }) :
                                            new widgets_1.Container(),
                                    ],
                                }),
                            }),
                            new widgets_1.Expanded({
                                flex: 6,
                                child: new widgets_1.Column({
                                    children: [
                                        new widgets_1.Container({
                                            child: new widgets_1.Text(newsModel.title, {
                                                style: new mx_dart_sdk_1.TextStyle({
                                                    fontWeight: mx_dart_sdk_1.FontWeight.bold,
                                                    fontSize: 16.0,
                                                    height: 1.1,
                                                    color: material_1.Colors.black,
                                                }),
                                            }),
                                            padding: painting_1.EdgeInsets.only({
                                                bottom: 10.0,
                                                right: 4.0
                                            }),
                                            alignment: painting_1.Alignment.topLeft,
                                        }),
                                        newsModel.mark != null ?
                                            new widgets_1.Container({
                                                child: new widgets_1.Text(newsModel.mark, {
                                                    style: new mx_dart_sdk_1.TextStyle({
                                                        color: material_1.Colors.black54
                                                    }),
                                                }),
                                                alignment: painting_1.Alignment.topLeft,
                                                padding: painting_1.EdgeInsets.only({
                                                    bottom: 8.0,
                                                    right: 4.0
                                                }),
                                            }) :
                                            new widgets_1.Container(),
                                        new widgets_1.Container({
                                            child: new widgets_1.Text(newsModel.hotNum, {
                                                style: new mx_dart_sdk_1.TextStyle({
                                                    color: material_1.Colors.black54
                                                }),
                                            }),
                                            alignment: painting_1.Alignment.topLeft,
                                        }),
                                    ],
                                }),
                            }),
                            new widgets_1.Expanded({
                                flex: 3,
                                child: new widgets_1.AspectRatio({
                                    aspectRatio: 3.0 / 2.0,
                                    child: new widgets_1.ClipRRect({
                                        borderRadius: painting_1.BorderRadius.circular(4.0),
                                        child: new CachedNetworkImage({
                                            fadeInDuration: new mx_dart_sdk_1.Duration({
                                                milliseconds: 10
                                            }),
                                            fadeOutDuration: new mx_dart_sdk_1.Duration({
                                                milliseconds: 10
                                            }),
                                            imageUrl: newsModel.imgUrl,
                                            width: 124.0,
                                            height: 69.0,
                                            fit: painting_1.BoxFit.fill,
                                        }),
                                    }),
                                }),
                            }),
                        ],
                    }),
                }),
            }),
        });
    }
    build(context) {
        try {
            return this.hotCard(context, this.newsModel);
        }
        catch (e$) {
            // let e = dart.getThrown(e$);
            // MXJSLog.log('card:build(context):  error:' + e);
            return null;
        }
    }
}
class NewsModel {
    constructor(order, title, hotNum, imgUrl, { mark, rise } = {}) {
        this.order = order;
        this.title = title;
        this.hotNum = hotNum;
        this.imgUrl = imgUrl;
        this.mark = mark;
        this.rise = rise;
    }
    static fromJSON(jsonMap) {
        let news = new NewsModel();
        news.order = String(jsonMap['order']);
        news.title = jsonMap['title'];
        news.hotNum = String(jsonMap['votecount']) + ' 人点赞';
        news.imgUrl = jsonMap['imgsrc'];
        news.mark = jsonMap['source'];
        news.rise = jsonMap['alias'];
        return news;
    }
}
module.exports = {
    ListViewDemo,
};


/***/ }),

/***/ "./lib/app_demo/material.js":
/*!**********************************!*\
  !*** ./lib/app_demo/material.js ***!
  \**********************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 117:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

//  MXFlutterFramework
//  Copyright 2019 The MXFlutter Authors. All rights reserved.
//
//  Use of this source code is governed by a MIT-style license that can be
//  found in the LICENSE file.
Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const mx_dart_sdk_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/mx-dart-sdk */ "@tencent/mxflutter-widgets/mx-dart-sdk");
const painting_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/painting */ "@tencent/mxflutter-widgets/painting");
let { JSBottomAPPBarDemo } = __webpack_require__(/*! ./material/bottom_app_bar_demo.js */ "./lib/app_demo/material/bottom_app_bar_demo.js");
let { JSBottomNavigationDemo } = __webpack_require__(/*! ./material/bottom_navigation_demo.js */ "./lib/app_demo/material/bottom_navigation_demo.js");
let { JSEasyUIDemo } = __webpack_require__(/*! ./material/easy_ui_demo.js */ "./lib/app_demo/material/easy_ui_demo.js");
let { JSTabsDemo } = __webpack_require__(/*! ./material/tabs_demo.js */ "./lib/app_demo/material/tabs_demo.js");
class JSMaterialPage extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super('JSMaterialPage');
    }
    createState() {
        return new JSMaterialPageState(this);
    }
}
class JSMaterialPageState extends mxflutter_1.MXJSWidgetState {
    build(context) {
        let w = new material_1.Scaffold({
            appBar: new material_1.AppBar({
                title: new widgets_1.Text("Material Demo")
            }),
            body: new widgets_1.ListView({
                children: [
                    new widgets_1.Padding({
                        padding: painting_1.EdgeInsets.all(1.0)
                    }),
                    new material_1.ListTile({
                        leading: new widgets_1.Icon(new widgets_1.IconData(0xe39d, {
                            fontFamily: 'MaterialIcons'
                        }), {
                            color: new mx_dart_sdk_1.Color(0xFFFF9800)
                        }),
                        trailing: new widgets_1.Icon(new widgets_1.IconData(0xe5df, {
                            fontFamily: 'MaterialIcons',
                            matchTextDirection: true
                        })),
                        title: new widgets_1.Text('Bottom app bar'),
                        subtitle: new widgets_1.Text('Optional floating action button notch'),
                        onTap: function () {
                            widgets_1.Navigator.push(context, new material_1.MaterialPageRoute({
                                builder: function (context) {
                                    return new JSBottomAPPBarDemo;
                                }
                            }));
                        }
                    }),
                    // new ListTile({
                    //     leading: new Icon(new IconData(0xe39d, { fontFamily: 'MaterialIcons' }), { color: new Color(0xFFFF9800) }),
                    //     trailing: new Icon(new IconData(0xe5df, { fontFamily: 'MaterialIcons', matchTextDirection: true })),
                    //     title: new Text('Bottom navigation——动画需完善才能出现'),
                    //     subtitle: new Text('Bottom navigation with cross-fading views'),
                    //     onTap: function () {
                    //         Navigator.push(context, new MaterialPageRoute({
                    //             builder: function (context) {
                    //                 return new JSBottomNavigationDemo;
                    //             }
                    //         }))
                    //     }
                    // }),
                    new material_1.ListTile({
                        leading: new widgets_1.Icon(new widgets_1.IconData(0xe39d, {
                            fontFamily: 'MaterialIcons'
                        }), {
                            color: new mx_dart_sdk_1.Color(0xFFFF9800)
                        }),
                        trailing: new widgets_1.Icon(new widgets_1.IconData(0xe5df, {
                            fontFamily: 'MaterialIcons',
                            matchTextDirection: true
                        })),
                        title: new widgets_1.Text('Easy UI'),
                        subtitle: new widgets_1.Text('Easy UI usage'),
                        onTap: function () {
                            widgets_1.Navigator.push(context, new material_1.MaterialPageRoute({
                                builder: function (context) {
                                    return new JSEasyUIDemo;
                                }
                            }));
                        }
                    }),
                    new material_1.ListTile({
                        leading: new widgets_1.Icon(new widgets_1.IconData(0xe39d, {
                            fontFamily: 'MaterialIcons'
                        }), {
                            color: new mx_dart_sdk_1.Color(0xFFFF9800)
                        }),
                        trailing: new widgets_1.Icon(new widgets_1.IconData(0xe5df, {
                            fontFamily: 'MaterialIcons',
                            matchTextDirection: true
                        })),
                        title: new widgets_1.Text('Tabs'),
                        subtitle: new widgets_1.Text('Tabs with independently scrollable views'),
                        onTap: function () {
                            widgets_1.Navigator.push(context, new material_1.MaterialPageRoute({
                                builder: function (context) {
                                    return new JSTabsDemo;
                                }
                            }));
                        }
                    })
                ]
            })
        });
        return w;
    }
    navigatorPush(jsWidget) {
    }
}
module.exports = {
    JSMaterialPage
};


/***/ }),

/***/ "./lib/app_demo/material/bottom_app_bar_demo.js":
/*!******************************************************!*\
  !*** ./lib/app_demo/material/bottom_app_bar_demo.js ***!
  \******************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 350:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const mx_dart_sdk_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/mx-dart-sdk */ "@tencent/mxflutter-widgets/mx-dart-sdk");
const painting_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/painting */ "@tencent/mxflutter-widgets/painting");
const rendering_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/rendering */ "@tencent/mxflutter-widgets/rendering");
class JSChoiceValue {
    constructor({ value, title, label } = {}) {
        this.value = value;
        this.title = title;
        this.label = label;
    }
}
class JSNamedColor {
    constructor({ color, name } = {}) {
        this.color = color;
        this.name = name;
    }
}
// Notch
const kShowNotchTrue = new JSChoiceValue({
    title: 'On',
    label: 'show bottom appbar notch',
    value: true
});
const kShowNotchFalse = new JSChoiceValue({
    title: 'Off',
    label: 'do not show bottom appbar notch',
    value: false
});
// FAB Position
const kFabEndDocked = new JSChoiceValue({
    title: 'Attached - End',
    label: 'floating action button is docked at the end of the bottom app bar',
    value: material_1.FloatingActionButtonLocation.endDocked
});
const kFabCenterDocked = new JSChoiceValue({
    title: 'Attached - Center',
    label: 'floating action button is docked at the center of the bottom app bar',
    value: material_1.FloatingActionButtonLocation.centerDocked
});
const kFabEndFloat = new JSChoiceValue({
    title: 'Free - End',
    label: 'floating action button floats above the end of the bottom app bar',
    value: material_1.FloatingActionButtonLocation.endFloat
});
const kFabCenterFloat = new JSChoiceValue({
    title: 'Free - Center',
    label: 'floating action button is floats above the center of the bottom app bar',
    value: material_1.FloatingActionButtonLocation.centerFloat
});
const kFabColors = [
    new JSNamedColor({
        color: new mx_dart_sdk_1.Color(0xFFFFFFFF),
        name: 'Clear'
    }),
    new JSNamedColor({
        color: new mx_dart_sdk_1.Color(0xFFFFC100),
        name: 'Orange'
    }),
    new JSNamedColor({
        color: new mx_dart_sdk_1.Color(0xFF91FAFF),
        name: 'Light Blue'
    }),
    new JSNamedColor({
        color: new mx_dart_sdk_1.Color(0xFF00D1FF),
        name: 'Cyan'
    }),
    new JSNamedColor({
        color: new mx_dart_sdk_1.Color(0xFF00BCFF),
        name: 'Cerulean'
    }),
    new JSNamedColor({
        color: new mx_dart_sdk_1.Color(0xFF009BEE),
        name: 'Blue'
    })
];
class _JSHeading extends mxflutter_1.MXJSStatelessWidget {
    constructor({ text } = {}) {
        super();
        this.text = text;
    }
    build(context) {
        return new widgets_1.Container({
            height: 56.0,
            padding: painting_1.EdgeInsetsDirectional.only({
                start: 26.0
            }),
            alignment: new painting_1.AlignmentDirectional(-1.0, 0.0),
            child: new widgets_1.Text(this.text, {
                style: new mx_dart_sdk_1.TextStyle({
                    inherit: false,
                    fontSize: 18.0,
                    decorationColor: new mx_dart_sdk_1.Color(0xFF123456),
                    decorationStyle: mx_dart_sdk_1.TextDecorationStyle.wavy,
                    color: new mx_dart_sdk_1.Color(0xFF123456)
                })
            })
        });
    }
}
class _JSRadioItem extends mxflutter_1.MXJSStatelessWidget {
    constructor({ value, groupValue, onChanged } = {}) {
        super();
        this.value = value;
        this.groupValue = groupValue;
        this.onChanged = onChanged;
        console.log("[JS]-MXJSFlutter:: require..........", value, groupValue);
    }
    build(context) {
        return new widgets_1.Container({
            height: 56.0,
            padding: painting_1.EdgeInsetsDirectional.only({
                start: 36.0
            }),
            alignment: new painting_1.AlignmentDirectional(-1.0, 0.0),
            child: new widgets_1.MergeSemantics({
                child: new widgets_1.Row({
                    children: [
                        new material_1.Radio({
                            value: this.value,
                            groupValue: this.groupValue,
                            onChanged: function () {
                                this.onChanged(this.value);
                            }.bind(this)
                        }),
                        new widgets_1.Expanded({
                            child: new widgets_1.Semantics({
                                container: true,
                                button: true,
                                label: this.value.label,
                                child: new widgets_1.GestureDetector({
                                    behavior: rendering_1.HitTestBehavior.opaque,
                                    onTap: function () {
                                        this.onChanged(this.value);
                                    }.bind(this),
                                    child: new widgets_1.Text(this.value.title)
                                })
                            })
                        })
                    ]
                })
            })
        });
    }
}
class _JSColorsItem extends mxflutter_1.MXJSStatelessWidget {
    constructor({ colors, selectedColor, onChanged } = {}) {
        super();
        this.colors = colors;
        this.selectedColor = selectedColor;
        this.onChanged = onChanged;
    }
    build(context) {
        let rowContents = [];
        this.colors.forEach(function (namedColor) {
            let widget = new material_1.RawMaterialButton({
                onPressed: function () {
                    this.onChanged(namedColor.color);
                }.bind(this),
                constraints: new rendering_1.BoxConstraints({
                    minWidth: 32,
                    maxWidth: 32,
                    minHeight: 32,
                    maxHeight: 32
                }),
                fillColor: namedColor.color,
                shape: new painting_1.CircleBorder({
                    side: new painting_1.BorderSide({
                        color: namedColor.color == this.selectedColor ? material_1.Colors.black : new mx_dart_sdk_1.Color(0xFFD5D7DA),
                        width: 2.0
                    })
                }),
                child: new widgets_1.Semantics({
                    value: namedColor.name,
                    selected: namedColor.color == this.selectedColor
                })
            });
            rowContents.push(widget);
        }.bind(this));
        return new widgets_1.Row({
            mainAxisAlignment: rendering_1.MainAxisAlignment.spaceEvenly,
            children: rowContents
        });
    }
}
class JSBottomAPPBarDemo extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super('JSBottomAPPBarDemo');
    }
    createState() {
        return new JSBottomAPPBarDemoState(this);
    }
}
class JSBottomAPPBarDemoState extends mxflutter_1.MXJSWidgetState {
    // _scaffoldKey;//new GlobalKey();
    constructor(widget) {
        super(widget);
        this._showNotch = kShowNotchTrue;
        this._fabLocation = kFabCenterDocked;
        this._babColor = kFabColors[1].color;
    }
    showSnackBar() {
        text =
            "When the Scaffold's floating action button location changes, ";
        'the floating action button animates to its new position.';
        'The BottomAppBar adapts its shape appropriately.';
        _scaffoldKey.currentState.showSnackBar(new SnackBar({
            content: widgets_1.Text(text)
        }));
    }
    onShowNotchChanged(value) {
        console.log("[JS]-MXJSFlutter:: require..........");
        this.setState(function () {
            this._showNotch = value;
        }.bind(this));
    }
    onFabLocationChanged(value) {
        this.setState(function () {
            this._fabLocation = value;
        }.bind(this));
    }
    onBabColorChange(value) {
        this.setState(function () {
            this._babColor = value;
        }.bind(this));
    }
    build(context) {
        let floatingButtonLocation = this._fabLocation.value;
        let rowContents = [
            new material_1.IconButton({
                icon: new widgets_1.Icon(new widgets_1.IconData(0xe5d2, {
                    fontFamily: 'MaterialIcons',
                    semanticLabel: 'Show bottom sheet'
                })),
                tooltip: 'Show bottom sheet',
                onPressed: function () {
                    material_1.Scaffold.of(context).showSnackBar(new SnackBar({
                        content: new widgets_1.Text('This is a dummy sheet action.')
                    }));
                }.bind(this)
            })
        ];
        if (floatingButtonLocation == material_1.FloatingActionButtonLocation.centerDocked || floatingButtonLocation == material_1.FloatingActionButtonLocation.centerFloat) {
            rowContents.push(new widgets_1.Expanded({
                child: new widgets_1.SizedBox()
            }));
        }
        rowContents.push(new material_1.IconButton({
            icon: new widgets_1.Icon(new widgets_1.IconData(0xe8b6, {
                fontFamily: 'MaterialIcons',
                semanticLabel: 'show search action'
            })),
            tooltip: 'show search action',
            onPressed: function () {
                material_1.Scaffold.of(context).showSnackBar(new SnackBar({
                    content: new widgets_1.Text('This is a dummy search action.')
                }));
            }.bind(this)
        }));
        rowContents.push(new material_1.IconButton({
            icon: new widgets_1.Icon(new widgets_1.IconData(0xe5d3, {
                fontFamily: 'MaterialIcons',
                semanticLabel: 'Show menu actions'
            })),
            tooltip: 'Show menu actions',
            onPressed: function () {
                material_1.Scaffold.of(context).showSnackBar(new SnackBar({
                    content: new widgets_1.Text('This is a dummy menu action.')
                }));
            }.bind(this)
        }));
        let widget = new material_1.Scaffold({
            // key: _scaffoldKey,
            appBar: new material_1.AppBar({
                title: new widgets_1.Text('Bottom app bar')
            }),
            body: new widgets_1.ListView({
                children: [
                    new _JSHeading({
                        text: "Notch"
                    }),
                    new _JSRadioItem({
                        value: kShowNotchTrue,
                        groupValue: this._showNotch,
                        onChanged: this.onShowNotchChanged.bind(this)
                    }),
                    new _JSRadioItem({
                        value: kShowNotchFalse,
                        groupValue: this._showNotch,
                        onChanged: this.onShowNotchChanged.bind(this)
                    }),
                    new _JSHeading({
                        text: "FAB Position"
                    }),
                    new _JSRadioItem({
                        value: kFabEndDocked,
                        groupValue: this._fabLocation,
                        onChanged: this.onFabLocationChanged.bind(this)
                    }),
                    new _JSRadioItem({
                        value: kFabCenterDocked,
                        groupValue: this._fabLocation,
                        onChanged: this.onFabLocationChanged.bind(this)
                    }),
                    new _JSRadioItem({
                        value: kFabEndFloat,
                        groupValue: this._fabLocation,
                        onChanged: this.onFabLocationChanged.bind(this)
                    }),
                    new _JSRadioItem({
                        value: kFabCenterFloat,
                        groupValue: this._fabLocation,
                        onChanged: this.onFabLocationChanged.bind(this)
                    }),
                    new _JSHeading({
                        text: "App bar color"
                    }),
                    new _JSColorsItem({
                        colors: kFabColors,
                        selectedColor: this._babColor,
                        onChanged: this.onBabColorChange.bind(this)
                    })
                ]
            }),
            bottomNavigationBar: new material_1.BottomAppBar({
                // color: Colors.red,
                child: new widgets_1.Row({
                    children: rowContents
                }),
                color: this._babColor,
                shape: this._showNotch.value == true ? new painting_1.CircularNotchedRectangle() : null
            }),
            floatingActionButton: new material_1.FloatingActionButton({
                child: new widgets_1.Icon(new widgets_1.IconData(0xe145, {
                    fontFamily: 'MaterialIcons',
                    semanticLabel: 'Action'
                })),
                onPressed: function () {
                },
                backgroundColor: material_1.Colors.orange
            }),
            floatingActionButtonLocation: floatingButtonLocation
        });
        return widget;
    }
}
module.exports = {
    JSBottomAPPBarDemo
};


/***/ }),

/***/ "./lib/app_demo/material/bottom_navigation_demo.js":
/*!*********************************************************!*\
  !*** ./lib/app_demo/material/bottom_navigation_demo.js ***!
  \*********************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 241:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const mx_dart_sdk_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/mx-dart-sdk */ "@tencent/mxflutter-widgets/mx-dart-sdk");
const painting_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/painting */ "@tencent/mxflutter-widgets/painting");
const animation_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/animation */ "@tencent/mxflutter-widgets/animation");
class NavigationIconView {
    constructor({ icon, activeIcon, title, color, vsync } = {}) {
        this._icon = icon;
        this._title = title;
        this._color = color;
        this.item = new widgets_1.BottomNavigationBarItem({
            icon: icon,
            activeIcon: activeIcon,
            title: new widgets_1.Text(title),
            backgroundColor: color
        });
        this.controller = new animation_1.AnimationController({
            duration: new mx_dart_sdk_1.Duration({
                milliseconds: 200
            })
            // vsync: vsync,
        });
        this._animation = this.controller.drive(new animation_1.CurveTween({
            curve: new animation_1.Interval(0.5, 1.0, {
                curve: animation_1.Curves.fastOutSlowIn
            })
        }));
    }
    transition(type, context) {
        var iconColor;
        if (type == material_1.BottomNavigationBarType.shifting) {
            iconColor = this._color;
        }
        else {
            let themeData = material_1.Theme.of(context);
            iconColor = themeData.brightness == mx_dart_sdk_1.Brightness.light ? themeData.primaryColor : themeData.accentColor;
        }
        return new widgets_1.FadeTransition({
            opacity: this._animation,
            child: new widgets_1.SlideTransition({
                position: this._animation.drive(new animation_1.Tween({
                    begin: new mx_dart_sdk_1.Offset(0.0, 0.2),
                    end: new mx_dart_sdk_1.Offset(0.0, 0.0)
                })),
                child: new widgets_1.IconTheme({
                    data: new widgets_1.IconThemeData({
                        color: iconColor,
                        size: 120.0
                    }),
                    child: new widgets_1.Semantics({
                        label: 'Placeholder for $this._title tab',
                        child: this._icon
                    })
                })
            })
        });
    }
}
class CustomIcon extends mxflutter_1.MXJSStatelessWidget {
    build(context) {
        /// TODO:
        let iconThemeData = widgets_1.IconTheme.of(context);
        return new widgets_1.Container({
            margin: painting_1.EdgeInsets.all(4.0),
            width: iconThemeData.size - 8.0,
            height: iconThemeData.size - 8.0,
            color: iconThemeData.color
        });
    }
}
class CustomInactiveIcon extends mxflutter_1.MXJSStatelessWidget {
    build(context) {
        /// TODO:
        let iconThemeData = widgets_1.IconTheme.of(context);
        return new widgets_1.Container({
            margin: painting_1.EdgeInsets.all(4.0),
            width: iconThemeData.size - 8.0,
            height: iconThemeData.size - 8.0,
            decoration: new painting_1.BoxDecoration({
                border: painting_1.Border.all({
                    color: iconThemeData.color,
                    width: 2.0
                })
            })
        });
    }
}
class JSBottomNavigationDemo extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super('JSBottomNavigationDemo');
    }
    createState() {
        return new JSBottomNavigationDemoState(this);
    }
}
class JSBottomNavigationDemoState extends mxflutter_1.MXJSWidgetState {
    constructor(widget) {
        super(widget);
        this._currentIndex = 0;
        this._type = material_1.BottomNavigationBarType.shifting;
        this._navigationViews = [];
    }
    initState() {
        // this._navigationViews = [
        //     new NavigationIconView({
        //         icon: new Icon(new IconData(0xe190, {fontFamily: 'MaterialIcons'})),
        //         title: 'Alarm',
        //         color: Colors.deepPurple,
        //         vsync: this,
        //     }),
        //     new NavigationIconView({
        //         activeIcon: new CustomIcon(),
        //         icon: new CustomInactiveIcon(),
        //         title: 'Box',
        //         color: Colors.deepOrange,
        //         vsync: this,
        //     }),
        //     new NavigationIconView({
        //         activeIcon: new Icon(new IconData(0xe2bd, {fontFamily: 'MaterialIcons'})),
        //         icon: new Icon(new IconData(0xe2c2, {fontFamily: 'MaterialIcons'})),
        //         title: 'Cloud',
        //         color: Colors.teal,
        //         vsync: this,
        //     }),
        //     new NavigationIconView({
        //         activeIcon: new Icon(new IconData(0xe87d, {fontFamily: 'MaterialIcons'})),
        //         icon: new Icon(new IconData(0xe87e, {fontFamily: 'MaterialIcons'})),
        //         title: 'Favorites',
        //         color: Colors.indigo,
        //         vsync: this,
        //     }),
        //     new NavigationIconView({
        //         icon: new Icon(new IconData(0xe614, {fontFamily: 'MaterialIcons'})),
        //         title: 'Event',
        //         color: Colors.pink,
        //         vsync: this,
        //     }),
        // ];
        // this._navigationViews[this._currentIndex].controller.value = 1.0;
    }
    dispose() {
        this._navigationViews.map(function (view) {
            view.controller.dispose();
        });
    }
    _buildTransitionsStack(context) {
        var transitions = [];
        for (var i = 0; i < this._navigationViews.length; i++) {
            transitions.push(this._navigationViews[i].transition(this._type, context));
        }
        transitions.sort(function (a, b) {
            let aAnimation = a.opacity;
            let bAnimation = b.opacity;
            let aValue = aAnimation.value;
            let bValue = bAnimation.value;
            return aValue < bValue;
        });
        return new widgets_1.Stack({
            children: transitions
        });
    }
    build(context) {
        this._navigationViews = [
            new NavigationIconView({
                icon: new widgets_1.Icon(new widgets_1.IconData(0xe190, {
                    fontFamily: 'MaterialIcons'
                })),
                title: 'Alarm',
                color: material_1.Colors.deepPurple
                // vsync: this,
            }),
            new NavigationIconView({
                activeIcon: new CustomIcon(),
                icon: new CustomInactiveIcon(),
                title: 'Box',
                color: material_1.Colors.deepOrange
                // vsync: this,
            }),
            new NavigationIconView({
                activeIcon: new widgets_1.Icon(new widgets_1.IconData(0xe2bd, {
                    fontFamily: 'MaterialIcons'
                })),
                icon: new widgets_1.Icon(new widgets_1.IconData(0xe2c2, {
                    fontFamily: 'MaterialIcons'
                })),
                title: 'Cloud',
                color: material_1.Colors.teal
                // vsync: this,
            }),
            new NavigationIconView({
                activeIcon: new widgets_1.Icon(new widgets_1.IconData(0xe87d, {
                    fontFamily: 'MaterialIcons'
                })),
                icon: new widgets_1.Icon(new widgets_1.IconData(0xe87e, {
                    fontFamily: 'MaterialIcons'
                })),
                title: 'Favorites',
                color: material_1.Colors.indigo
                // vsync: this,
            }),
            new NavigationIconView({
                icon: new widgets_1.Icon(new widgets_1.IconData(0xe614, {
                    fontFamily: 'MaterialIcons'
                })),
                title: 'Event',
                color: material_1.Colors.pink
                // vsync: this,
            })
        ];
        this._navigationViews[this._currentIndex].controller.value = 1.0;
        let botNavBar = new material_1.BottomNavigationBar({
            items: this._navigationViews.map(function (navigationView) {
                return navigationView.item;
            }),
            currentIndex: this._currentIndex,
            type: this._type,
            onTap: function (args) {
                this.setState(function () {
                    var index = args;
                    this._navigationViews[this._currentIndex].controller.reverse();
                    this._currentIndex = index;
                    this._navigationViews[this._currentIndex].controller.forward();
                });
            }
        });
        let widget = new material_1.Scaffold({
            appBar: new material_1.AppBar({
                title: new widgets_1.Text('Bottom Navigation'),
            }),
            body: new widgets_1.Center({
                child: this._buildTransitionsStack(context),
            }),
            bottomNavigationBar: botNavBar
        });
        return widget;
    }
}
module.exports = {
    JSBottomNavigationDemo
};


/***/ }),

/***/ "./lib/app_demo/material/easy_ui_demo.js":
/*!***********************************************!*\
  !*** ./lib/app_demo/material/easy_ui_demo.js ***!
  \***********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 550:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const mx_dart_sdk_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/mx-dart-sdk */ "@tencent/mxflutter-widgets/mx-dart-sdk");
const painting_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/painting */ "@tencent/mxflutter-widgets/painting");
const rendering_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/rendering */ "@tencent/mxflutter-widgets/rendering");
const services_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/services */ "@tencent/mxflutter-widgets/services");
class JSEasyUIDemo extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super('JSEasyUIDemo');
    }
    createState() {
        return new JSEasyUIDemoState(this);
    }
}
class JSEasyUIDemoState extends mxflutter_1.MXJSWidgetState {
    constructor() {
        super();
        this.dropdownValue = 'three';
        this.iconColorIndex = 10;
        this.sliderValue = 25.0;
        this.sliderDiscreteValue = 20.0;
    }
    // Buttons
    _buildButtons() {
        let widget = new widgets_1.Column({
            children: [
                new widgets_1.Row({
                    mainAxisAlignment: rendering_1.MainAxisAlignment.spaceBetween,
                    children: [
                        new material_1.FlatButton({
                            child: new widgets_1.Text("Flat Button", {
                                style: new mx_dart_sdk_1.TextStyle({
                                    color: new mx_dart_sdk_1.Color(0xFF000000)
                                })
                            }),
                            onPressed: function () {
                                mxflutter_1.MXJSLog.log('Flat Button Pressed');
                            },
                            onHighlightChanged: function (args) {
                                mxflutter_1.MXJSLog.log('Flat Button onHighlightChanged');
                            }
                            // color: new Color(0x60000000),
                        }),
                        new material_1.RaisedButton({
                            child: new widgets_1.Text("Raised Button"),
                            onPressed: function () {
                                mxflutter_1.MXJSLog.log('Raised Button Pressed');
                            }
                            // color: new Color(0x60000000),
                        }),
                        new material_1.FloatingActionButton({
                            child: new widgets_1.Icon(new widgets_1.IconData(0xe145, {
                                fontFamily: 'MaterialIcons'
                            })),
                            tooltip: 'Floating Action Button',
                            onPressed: function () {
                                mxflutter_1.MXJSLog.log('Floating Action Button Pressed');
                            }
                        }),
                        new material_1.IconButton({
                            icon: new widgets_1.Icon(new widgets_1.IconData(0xe815, {
                                fontFamily: 'MaterialIcons'
                            })),
                            onPressed: function () {
                                mxflutter_1.MXJSLog.log('Icon Button Pressed');
                            }
                        }),
                    ],
                }),
                new widgets_1.Row({
                    mainAxisAlignment: rendering_1.MainAxisAlignment.spaceBetween,
                    children: [
                        new material_1.DropdownButton({
                            value: this.dropdownValue,
                            items: ['one', 'two', 'three', 'four'].map(function (value) {
                                return new material_1.DropdownMenuItem({
                                    value: value,
                                    child: new widgets_1.Text(value)
                                });
                            }),
                            onChanged: function (newValue) {
                                mxflutter_1.MXJSLog.log('Icon Button Pressed');
                                this.setState(function () {
                                    this.dropdownValue = newValue;
                                });
                            }
                        }),
                        new material_1.PopupMenuButton({
                            onSelected: function (args) {
                                mxflutter_1.MXJSLog.log('more button pressed, index ' + args);
                            },
                            itemBuilder: function (context) {
                                let list = [
                                    new material_1.PopupMenuItem({
                                        value: 1,
                                        child: new widgets_1.Text('App bar scrolls away')
                                    }),
                                    new material_1.PopupMenuItem({
                                        value: 2,
                                        child: new widgets_1.Text('App bar stays away')
                                    }),
                                    new material_1.PopupMenuItem({
                                        value: 3,
                                        child: new widgets_1.Text('App bar floats')
                                    }),
                                    new material_1.PopupMenuItem({
                                        value: 4,
                                        child: new widgets_1.Text('App bar snaps')
                                    })
                                ];
                                return list;
                            },
                        }),
                        new material_1.ButtonBar({
                            mainAxisSize: rendering_1.MainAxisSize.min,
                            children: [
                                new material_1.RaisedButton({
                                    child: new widgets_1.Text('Button Bar 1'),
                                    onPressed: function () {
                                        mxflutter_1.MXJSLog.log('Button Bar 1 pressed');
                                    }
                                }),
                                new material_1.RaisedButton({
                                    child: new widgets_1.Text('Button Bar 2'),
                                    onPressed: function () {
                                        mxflutter_1.MXJSLog.log('Button Bar 2 pressed');
                                    }
                                })
                            ]
                        })
                    ]
                })
            ]
        });
        return widget;
    }
    // Texts
    _buildTexts() {
        let widget = new widgets_1.Container({
            padding: painting_1.EdgeInsets.only({
                top: 10.0
            }),
            child: new widgets_1.Column({
                children: [
                    new widgets_1.Row({
                        mainAxisAlignment: rendering_1.MainAxisAlignment.spaceBetween,
                        children: [
                            new widgets_1.Container({
                                padding: painting_1.EdgeInsets.only({
                                    right: 15.0
                                }),
                                child: new widgets_1.Text('这是一个text', {
                                    style: new mx_dart_sdk_1.TextStyle({
                                        fontWeight: mx_dart_sdk_1.FontWeight.w700,
                                        fontStyle: mx_dart_sdk_1.FontStyle.italic,
                                        color: new mx_dart_sdk_1.Color(0xFFFF00FF),
                                        fontSize: 20.0,
                                        decoration: mx_dart_sdk_1.TextDecoration.underline,
                                        decorationColor: mx_dart_sdk_1.Color.fromRGBO(0, 0, 0, 1),
                                        decorationStyle: mx_dart_sdk_1.TextDecorationStyle.double
                                    }),
                                    overflow: rendering_1.TextOverflow.ellipsis
                                })
                            }),
                            new widgets_1.Expanded({
                                child: new widgets_1.RichText({
                                    text: new painting_1.TextSpan({
                                        style: new mx_dart_sdk_1.TextStyle({
                                            color: new mx_dart_sdk_1.Color(0xFFFF8C00),
                                            fontSize: 18.0,
                                            decoration: mx_dart_sdk_1.TextDecoration.underline,
                                            decorationColor: material_1.Colors.orange,
                                            decorationStyle: mx_dart_sdk_1.TextDecorationStyle.dashed,
                                        }),
                                        text: '超长文案rich text，超长文案rich text，超长文案rich text，超长文案rich text，超长文案rich text，超长文案rich text'
                                    }),
                                    overflow: rendering_1.TextOverflow.ellipsis,
                                    maxLines: 1
                                })
                            })
                        ]
                    })
                ]
            })
        });
        return widget;
    }
    // Icons
    _buildIcons() {
        let iconColors = [
            material_1.Colors.red,
            material_1.Colors.pink,
            material_1.Colors.purple,
            material_1.Colors.deepPurple,
            material_1.Colors.indigo,
            material_1.Colors.blue,
            material_1.Colors.lightBlue,
            material_1.Colors.cyan,
            material_1.Colors.teal,
            material_1.Colors.green,
            material_1.Colors.lightGreen,
            material_1.Colors.lime,
            material_1.Colors.yellow,
            material_1.Colors.amber,
            material_1.Colors.orange,
            material_1.Colors.deepOrange,
            material_1.Colors.brown,
            material_1.Colors.grey,
            material_1.Colors.blueGrey
        ];
        let widget = new widgets_1.Container({
            padding: painting_1.EdgeInsets.only({
                top: 10.0
            }),
            child: new widgets_1.Column({
                children: [
                    new widgets_1.Row({
                        mainAxisAlignment: rendering_1.MainAxisAlignment.spaceBetween,
                        children: [
                            new material_1.IconButton({
                                color: iconColors[this.iconColorIndex],
                                icon: new widgets_1.Icon(new widgets_1.IconData(0xe87c, {
                                    fontFamily: 'MaterialIcons'
                                })),
                                onPressed: function () {
                                    this.iconColorIndex = (this.iconColorIndex + 1) % iconColors.length;
                                    this.setState(function () {
                                    });
                                },
                                iconSize: 24.0
                            }),
                            new material_1.IconButton({
                                color: iconColors[this.iconColorIndex],
                                icon: new widgets_1.Icon(new widgets_1.IconData(0xe87c, {
                                    fontFamily: 'MaterialIcons'
                                })),
                                onPressed: function () {
                                    this.iconColorIndex = (this.iconColorIndex + 1) % iconColors.length;
                                    this.setState(function () {
                                    });
                                },
                                iconSize: 36.0
                            }),
                            new material_1.IconButton({
                                color: iconColors[this.iconColorIndex],
                                icon: new widgets_1.Icon(new widgets_1.IconData(0xe87c, {
                                    fontFamily: 'MaterialIcons'
                                })),
                                onPressed: function () {
                                    this.iconColorIndex = (this.iconColorIndex + 1) % iconColors.length;
                                    this.setState(function () {
                                    });
                                },
                                iconSize: 48.0
                            })
                        ]
                    }),
                    new widgets_1.Row({
                        mainAxisAlignment: rendering_1.MainAxisAlignment.spaceBetween,
                        children: [
                            new material_1.IconButton({
                                color: iconColors[this.iconColorIndex],
                                icon: new widgets_1.Icon(new widgets_1.IconData(0xe001, {
                                    fontFamily: 'MaterialIcons'
                                })),
                                onPressed: function () {
                                    this.iconColorIndex = (this.iconColorIndex + 1) % iconColors.length;
                                    this.setState(function () {
                                    });
                                },
                                iconSize: 24.0
                            }),
                            new material_1.IconButton({
                                color: iconColors[this.iconColorIndex],
                                icon: new widgets_1.Icon(new widgets_1.IconData(0xe001, {
                                    fontFamily: 'MaterialIcons'
                                })),
                                onPressed: function () {
                                    this.iconColorIndex = (this.iconColorIndex + 1) % iconColors.length;
                                    this.setState(function () {
                                    });
                                },
                                iconSize: 36.0
                            }),
                            new material_1.IconButton({
                                color: iconColors[this.iconColorIndex],
                                icon: new widgets_1.Icon(new widgets_1.IconData(0xe001, {
                                    fontFamily: 'MaterialIcons'
                                })),
                                onPressed: function () {
                                    this.iconColorIndex = (this.iconColorIndex + 1) % iconColors.length;
                                    this.setState(function () {
                                    });
                                },
                                iconSize: 48.0
                            })
                        ]
                    })
                ]
            })
        });
        return widget;
    }
    // TextFields
    _buildTextFields() {
        let widget = new widgets_1.Container({
            padding: painting_1.EdgeInsets.only({
                top: 10.0
            }),
            child: new widgets_1.Column({
                children: [
                    new widgets_1.Container({
                        padding: painting_1.EdgeInsets.only({
                            right: 15.0
                        }),
                        child: new material_1.TextField({
                            keyboardType: services_1.TextInputType.number,
                            onSubmitted: function (args) {
                                mxflutter_1.MXJSLog.log('number onSubmitted');
                            },
                            decoration: new material_1.InputDecoration({
                                labelText: 'placeholder'
                            }),
                            onChanged: function (args) {
                                mxflutter_1.MXJSLog.log('number onChanged');
                            }
                        })
                    }),
                    new widgets_1.SizedBox({
                        height: 24.0
                    }),
                    new material_1.TextField({
                        controller: new widgets_1.TextEditingController({
                            text: 'initial text'
                        }),
                        keyboardType: services_1.TextInputType.emailAddress,
                        onSubmitted: function (args) {
                            mxflutter_1.MXJSLog.log('email onSubmitted');
                        },
                        onChanged: function (args) {
                            mxflutter_1.MXJSLog.log('email onChanged');
                        }
                    })
                ]
            })
        });
        return widget;
    }
    // TextFormFields
    _buildTextFormFields() {
        let widget = new widgets_1.Container({
            padding: painting_1.EdgeInsets.only({
                top: 10.0
            }),
            child: new widgets_1.Column({
                children: [
                    new widgets_1.Container({
                        padding: painting_1.EdgeInsets.only({
                            right: 15.0
                        }),
                        child: new material_1.TextFormField({
                            decoration: new material_1.InputDecoration({
                                border: new material_1.UnderlineInputBorder(),
                                filled: true,
                                icon: new widgets_1.Icon(new widgets_1.IconData(0xe0be, {
                                    fontFamily: 'MaterialIcons'
                                })),
                                hintText: 'Your email address',
                                labelText: 'E-mail'
                            }),
                            keyboardType: services_1.TextInputType.emailAddress,
                            onFieldSubmitted: function (args) {
                                mxflutter_1.MXJSLog.log('email onFieldSubmitted');
                            }
                        })
                    }),
                    new widgets_1.SizedBox({
                        height: 24.0
                    }),
                    new widgets_1.Container({
                        padding: painting_1.EdgeInsets.only({
                            right: 15.0
                        }),
                        child: new material_1.TextFormField({
                            decoration: new material_1.InputDecoration({
                                border: new material_1.UnderlineInputBorder(),
                                filled: true,
                                icon: new widgets_1.Icon(new widgets_1.IconData(0xe0cd, {
                                    fontFamily: 'MaterialIcons'
                                })),
                                hintText: 'Where can we reach you?',
                                labelText: 'Phone Number *',
                                prefixText: '+1'
                            }),
                            keyboardType: services_1.TextInputType.phone,
                            onFieldSubmitted: function (args) {
                                mxflutter_1.MXJSLog.log('phone onFieldSubmitted');
                            }
                        })
                    })
                ]
            })
        });
        return widget;
    }
    // TextFormFields
    _buildSlider() {
        let widget = new widgets_1.Container({
            padding: painting_1.EdgeInsets.only({
                top: 10.0
            }),
            child: new widgets_1.Column({
                children: [
                    new widgets_1.Container({
                        padding: painting_1.EdgeInsets.only({
                            right: 15.0
                        }),
                        child: new material_1.Slider({
                            value: this.sliderValue,
                            min: 0.0,
                            max: 100.0,
                            onChanged: function (args) {
                                let value = args;
                                this.setState(function () {
                                    this.sliderValue = value;
                                });
                            },
                            semanticFormatterCallback: function (args) {
                                return 'dollars';
                            },
                        }),
                    }),
                    new widgets_1.SizedBox({
                        height: 24.0,
                    }),
                    new widgets_1.Container({
                        padding: painting_1.EdgeInsets.only({
                            right: 15.0
                        }),
                        child: new material_1.Slider({
                            value: this.sliderDiscreteValue,
                            min: 0.0,
                            max: 100.0,
                            divisions: 5,
                            label: this.sliderDiscreteValue.toString(),
                            onChanged: function (args) {
                                let value = args;
                                this.setState(function () {
                                    this.sliderDiscreteValue = value;
                                });
                            }
                        })
                    })
                ]
            })
        });
        return widget;
    }
    build(context) {
        let widget = new material_1.Scaffold({
            appBar: new material_1.AppBar({
                title: new widgets_1.Text('Easy UI'),
            }),
            body: new widgets_1.ListView({
                children: [
                    new widgets_1.Container({
                        padding: painting_1.EdgeInsets.all(10.0),
                        child: new widgets_1.Column({
                            children: [
                                new widgets_1.Text('Button', {
                                    style: new mx_dart_sdk_1.TextStyle({
                                        fontSize: 20.0,
                                        color: material_1.Colors.indigo,
                                        fontWeight: mx_dart_sdk_1.FontWeight.bold
                                    })
                                }),
                                this._buildButtons(),
                                new widgets_1.Text('Text', {
                                    style: new mx_dart_sdk_1.TextStyle({
                                        fontSize: 20.0,
                                        color: material_1.Colors.indigo,
                                        fontWeight: mx_dart_sdk_1.FontWeight.bold
                                    })
                                }),
                                this._buildTexts(),
                                new widgets_1.Container({
                                    padding: painting_1.EdgeInsets.only({
                                        top: 15.0
                                    }),
                                    child: new widgets_1.Text('Icons', {
                                        style: new mx_dart_sdk_1.TextStyle({
                                            fontSize: 20.0,
                                            color: material_1.Colors.indigo,
                                            fontWeight: mx_dart_sdk_1.FontWeight.bold
                                        })
                                    })
                                }),
                                this._buildIcons(),
                                new widgets_1.Container({
                                    padding: painting_1.EdgeInsets.only({
                                        top: 15.0
                                    }),
                                    child: new widgets_1.Text('TextField', {
                                        style: new mx_dart_sdk_1.TextStyle({
                                            fontSize: 20.0,
                                            color: material_1.Colors.indigo,
                                            fontWeight: mx_dart_sdk_1.FontWeight.bold
                                        })
                                    })
                                }),
                                this._buildTextFields(),
                                new widgets_1.Container({
                                    padding: painting_1.EdgeInsets.only({
                                        top: 15.0
                                    }),
                                    child: new widgets_1.Text('TextFormField', {
                                        style: new mx_dart_sdk_1.TextStyle({
                                            fontSize: 20.0,
                                            color: material_1.Colors.indigo,
                                            fontWeight: mx_dart_sdk_1.FontWeight.bold
                                        })
                                    })
                                }),
                                this._buildTextFormFields(),
                                new widgets_1.Container({
                                    padding: painting_1.EdgeInsets.only({
                                        top: 15.0
                                    }),
                                    child: new widgets_1.Text('Slider', {
                                        style: new mx_dart_sdk_1.TextStyle({
                                            fontSize: 20.0,
                                            color: material_1.Colors.indigo,
                                            fontWeight: mx_dart_sdk_1.FontWeight.bold
                                        })
                                    })
                                }),
                                this._buildSlider()
                            ]
                        })
                    })
                ]
            })
        });
        return widget;
    }
}
module.exports = {
    JSEasyUIDemo
};


/***/ }),

/***/ "./lib/app_demo/material/tabs_demo.js":
/*!********************************************!*\
  !*** ./lib/app_demo/material/tabs_demo.js ***!
  \********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 220:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

//tabs_demo.js 正式开始，😝
Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const painting_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/painting */ "@tencent/mxflutter-widgets/painting");
const rendering_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/rendering */ "@tencent/mxflutter-widgets/rendering");
let _kGalleryAssetsPackage = 'flutter_gallery_assets';
class _Page {
    constructor({ label }) {
        this.label = label;
    }
    get id() {
        return this.label[0];
    }
    toString() {
        return '$runtimeType("$this.label")';
    }
}
class _CardData {
    constructor({ title, imageAsset, imageAssetPackage }) {
        this.title = title,
            this.imageAsset = imageAsset,
            this.imageAssetPackage = imageAssetPackage;
    }
}
// ES6的map写法比较奇怪
var _allPages = new Map();
_allPages.set(new _Page({
    label: 'HOME'
}), [
    new _CardData({
        title: 'Flatwear',
        imageAsset: 'products/flatwear.png',
        imageAssetPackage: _kGalleryAssetsPackage
    }),
    new _CardData({
        title: 'Pine Table',
        imageAsset: 'products/table.png',
        imageAssetPackage: _kGalleryAssetsPackage
    }),
    new _CardData({
        title: 'Blue Cup',
        imageAsset: 'products/cup.png',
        imageAssetPackage: _kGalleryAssetsPackage
    }),
    new _CardData({
        title: 'Tea Set',
        imageAsset: 'products/teaset.png',
        imageAssetPackage: _kGalleryAssetsPackage
    }),
    new _CardData({
        title: 'Desk Set',
        imageAsset: 'products/deskset.png',
        imageAssetPackage: _kGalleryAssetsPackage
    }),
    new _CardData({
        title: 'Blue Linen Napkins',
        imageAsset: 'products/napkins.png',
        imageAssetPackage: _kGalleryAssetsPackage
    }),
    new _CardData({
        title: 'Planters',
        imageAsset: 'products/planters.png',
        imageAssetPackage: _kGalleryAssetsPackage
    }),
    new _CardData({
        title: 'Kitchen Quattro',
        imageAsset: 'products/kitchen_quattro.png',
        imageAssetPackage: _kGalleryAssetsPackage
    }),
    new _CardData({
        title: 'Platter',
        imageAsset: 'products/platter.png',
        imageAssetPackage: _kGalleryAssetsPackage
    }),
]).set(new _Page({
    label: 'APPAREL'
}), [
    new _CardData({
        title: 'Cloud-White Dress',
        imageAsset: 'products/dress.png',
        imageAssetPackage: _kGalleryAssetsPackage
    }),
    new _CardData({
        title: 'Ginger Scarf',
        imageAsset: 'products/scarf.png',
        imageAssetPackage: _kGalleryAssetsPackage
    }),
    new _CardData({
        title: 'Blush Sweats',
        imageAsset: 'products/sweats.png',
        imageAssetPackage: _kGalleryAssetsPackage
    })
]);
class _CardDataItem extends mxflutter_1.MXJSStatelessWidget {
    constructor({ page, data }) {
        super('_CardDataItem');
        this.page = page;
        this.data = data;
    }
    static get height() {
        return 272.0;
    }
    build(context) {
        let widget = new material_1.Card({
            child: new widgets_1.Padding({
                padding: painting_1.EdgeInsets.all(16.0),
                child: new widgets_1.Column({
                    crossAxisAlignment: rendering_1.CrossAxisAlignment.stretch,
                    mainAxisAlignment: rendering_1.MainAxisAlignment.start,
                    children: [
                        new widgets_1.Align({
                            alignment: this.page.id == 'H' ? painting_1.Alignment.centerLeft : painting_1.Alignment.centerRight,
                            child: new material_1.CircleAvatar({
                                child: new widgets_1.Text(this.page.id),
                            })
                        }),
                        new widgets_1.SizedBox({
                            width: 144.0,
                            height: 144.0,
                            child: widgets_1.Image.asset(this.data.imageAsset, {
                                fit: painting_1.BoxFit.contain,
                                mxPackage: this.data.imageAssetPackage
                            })
                        }),
                        new widgets_1.Center({
                            child: new widgets_1.Text(this.data.title, {
                                style: material_1.Theme.of(context).textTheme.subtitle1,
                            })
                        })
                    ]
                })
            })
        });
        return widget;
    }
}
class JSTabsDemo extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super('JSTabsDemo');
    }
    createState() {
        return new JSTabsDemoState(this);
    }
}
class JSTabsDemoState extends mxflutter_1.MXJSWidgetState {
    build(context) {
        let widget = new material_1.DefaultTabController({
            length: _allPages.size,
            child: new material_1.Scaffold({
                body: new widgets_1.NestedScrollView({
                    headerSliverBuilder: function (context) {
                        return [
                            new widgets_1.SliverOverlapAbsorber({
                                handle: widgets_1.NestedScrollView.sliverOverlapAbsorberHandleFor(context),
                                child: new material_1.SliverAppBar({
                                    title: new widgets_1.Text('Tabs and scrolling'),
                                    pinned: true,
                                    expandedHeight: 150.0,
                                    forceElevated: false,
                                    bottom: new material_1.TabBar({
                                        tabs: [...(_allPages.keys())].map(page => new material_1.Tab({
                                            text: page.label
                                        }))
                                    })
                                })
                            })
                        ];
                    },
                    body: new material_1.TabBarView({
                        children: [...(_allPages.keys())].map(function (page) {
                            return new widgets_1.SafeArea({
                                top: false,
                                bottom: false,
                                child: new widgets_1.Builder({
                                    builder: function (context) {
                                        return new widgets_1.CustomScrollView({
                                            slivers: [
                                                new widgets_1.SliverOverlapInjector({
                                                    handle: widgets_1.NestedScrollView.sliverOverlapAbsorberHandleFor(context)
                                                }),
                                                new widgets_1.SliverPadding({
                                                    padding: painting_1.EdgeInsets.symmetric({
                                                        vertical: 8.0,
                                                        horizontal: 16.0
                                                    }),
                                                    sliver: new widgets_1.SliverFixedExtentList({
                                                        itemExtent: _CardDataItem.height,
                                                        delegate: new widgets_1.SliverChildBuilderDelegate(function (context, index) {
                                                            var data = (_allPages.get(page))[index];
                                                            return new widgets_1.Padding({
                                                                padding: painting_1.EdgeInsets.symmetric({
                                                                    vertical: 8.0
                                                                }),
                                                                child: new _CardDataItem({
                                                                    page: page,
                                                                    data: data
                                                                })
                                                            });
                                                        }, {
                                                            childCount: (_allPages.get(page)).length
                                                        })
                                                    })
                                                })
                                            ]
                                        });
                                    }
                                })
                            });
                        })
                    })
                })
            })
        });
        return widget;
    }
}
module.exports = {
    JSTabsDemo
};


/***/ }),

/***/ "./lib/app_demo/pesto.js":
/*!*******************************!*\
  !*** ./lib/app_demo/pesto.js ***!
  \*******************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 532:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

//  MXFlutterFramework
//  Copyright 2019 The MXFlutter Authors. All rights reserved.
//
//  Use of this source code is governed by a MIT-style license that can be
//  found in the LICENSE file.
Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
// import {
//   Text,
//   Icon,
//   IconData,
//   Row,
//   Padding,
//   Center,
//   Image,
//   CustomScrollView,
//   Expanded,
//   Column,
//   AspectRatio,
//   MediaQuery,
//   SliverPadding,
//   SliverGrid,
//   SliverChildBuilderDelegate,
//   GestureDetector,
//   Hero,
// } from '@tencent/mxflutter-widgets/widgets';
// import {
//   EdgeInsets,
//   BoxFit,
// } from '@tencent/mxflutter-widgets/painting';
// import {
//   Tween,
// } from '@tencent/mxflutter-widgets/animation';
// import {
//   CrossAxisAlignment,
//   MainAxisAlignment,
//   SliverGridDelegateWithMaxCrossAxisExtent
// } from '@tencent/mxflutter-widgets/rendering';
//业务代码
let _kGalleryAssetsPackage = 'flutter_gallery_assets';
let _kAppBarHeight = 128.0;
let _kFabHalfSize = 28.0; // TODO(mpcomplete): needs to adapt to screen size
let _kRecipePageMaxWidth = 500.0;
class JSPestoPage extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super('JSPestoPage');
    }
    createState() {
        return new JSPestoPageState(this);
    }
}
class JSPestoPageState extends mxflutter_1.MXJSWidgetState {
    build(context) {
        let statusBarHeight = 24;
        let mq = material_1.MediaQuery.of(context);
        if (mq) {
            statusBarHeight = mq.padding.top;
        }
        let w = new material_1.Scaffold({
            appBar: new material_1.AppBar({
                title: new material_1.Text("Pesto Demo")
            }),
            floatingActionButton: new material_1.FloatingActionButton({
                child: new material_1.Icon(new material_1.IconData(0xe3c9)),
                onPressed: function () {
                }
            }),
            body: new material_1.CustomScrollView({
                semanticChildCount: _recipeList.length,
                slivers: [
                    //this.buildAppBar(context, statusBarHeight),
                    this.buildBody(context, statusBarHeight)
                ]
            })
            //body:this.buildItems()[0]
        });
        return w;
    }
    buildAppBar(context, statusBarHeight) {
        return material_1.SliverAppBar({
            pinned: true,
            expandedHeight: _kAppBarHeight,
            actions: [
                material_1.IconButton({
                    icon: new material_1.Icon(new material_1.IconData(1)),
                    tooltip: 'Search',
                    onPressed: function () {
                    }
                })
            ],
            flexibleSpace: LayoutBuilder({
                builder: function (context, constraints) {
                    size = constraints.biggest;
                    appBarHeight = size.height - statusBarHeight;
                    t = (appBarHeight - kToolbarHeight) / (_kAppBarHeight - kToolbarHeight);
                    extraPadding = new material_1.Tween({
                        begin: 10.0,
                        end: 24.0
                    }).transform(t);
                    logoHeight = appBarHeight - 1.5 * extraPadding;
                    return material_1.Padding({
                        padding: material_1.EdgeInsets.only({
                            top: statusBarHeight + 0.5 * extraPadding,
                            bottom: extraPadding,
                        }),
                        child: material_1.Center({
                            child: new material_1.Icon(new material_1.IconData(1))
                        })
                    });
                }
            })
        });
    }
    buildBody(context, statusBarHeight) {
        let mediaPadding = material_1.EdgeInsets.all(0);
        let mq = material_1.MediaQuery.of(context);
        if (mq) {
            mediaPadding = material_1.MediaQuery.of(context).padding;
        }
        let padding = material_1.EdgeInsets.only({
            top: 8.0,
            left: 8.0 + mediaPadding.left,
            right: 8.0 + mediaPadding.right,
            bottom: 8.0
        });
        return new material_1.SliverPadding({
            padding: padding,
            sliver: new material_1.SliverGrid({
                gridDelegate: new material_1.SliverGridDelegateWithMaxCrossAxisExtent({
                    maxCrossAxisExtent: _kRecipePageMaxWidth,
                    crossAxisSpacing: 8.0,
                    mainAxisSpacing: 8.0,
                }),
                delegate: new material_1.SliverChildBuilderDelegate(function (context, index) {
                    let recipe = _recipeList[index];
                    let w = new RecipeCard({
                        recipe: recipe,
                        onTap: function () {
                            showRecipePage(context, recipe);
                        }
                    });
                    return w;
                }, {
                    childCount: _recipeList.length
                })
            })
        });
    }
}
// A card with the recipe's image, author, and title.
class RecipeCard extends mxflutter_1.MXJSStatelessWidget {
    constructor({ recipe, onTap }) {
        super("RecipeCard");
        this.recipe = recipe;
        this.onTap = onTap;
    }
    build(context) {
        //return new Text(this.recipe.name);
        return new material_1.GestureDetector({
            onTap: this.onTap,
            child: new material_1.Card({
                child: new material_1.Column({
                    crossAxisAlignment: material_1.CrossAxisAlignment.start,
                    children: [
                        new material_1.Hero({
                            tag: 'packages/' + this.recipe.imagePackage + '/' + this.recipe.imagePath,
                            child: new material_1.AspectRatio({
                                aspectRatio: 4.0 / 3.0,
                                child: material_1.Image.asset(this.recipe.imagePath, {
                                    __mx_package: this.recipe.imagePackage,
                                    fit: material_1.BoxFit.cover,
                                    semanticLabel: this.recipe.name
                                })
                            })
                        }),
                        new material_1.Expanded({
                            child: new material_1.Row({
                                children: [
                                    new material_1.Padding({
                                        padding: material_1.EdgeInsets.all(16.0),
                                        child: material_1.Image.asset(this.recipe.ingredientsImagePath, {
                                            __mx_package: this.recipe.ingredientsImagePackage,
                                            width: 48.0,
                                            height: 48.0
                                        })
                                    }),
                                    new material_1.Expanded({
                                        child: new material_1.Column({
                                            crossAxisAlignment: material_1.CrossAxisAlignment.start,
                                            mainAxisAlignment: material_1.MainAxisAlignment.center,
                                            children: [
                                                new material_1.Text(this.recipe.name),
                                                new material_1.Text(this.recipe.author),
                                            ]
                                        })
                                    })
                                ]
                            })
                        })
                    ]
                })
            })
        });
    }
}
//ui数据
class Recipe {
    constructor({ name, author, description, imagePath, imagePackage, ingredientsImagePath, ingredientsImagePackage, ingredients, steps } = {}) {
        this.name = name;
        this.author = author;
        this.description = description;
        this.imagePath = imagePath;
        this.imagePackage = imagePackage;
        this.ingredientsImagePath = ingredientsImagePath;
        this.ingredientsImagePackage = ingredientsImagePackage;
        this.ingredients = ingredients;
        this.steps = steps;
    }
}
class RecipeIngredient {
    constructor({ amount, description } = {}) {
        this.amount = amount;
        this.description = description;
    }
}
class RecipeStep {
    constructor({ duration, description } = {}) {
        this.duration = duration;
        this.description = description;
    }
}
//const List<Recipe> kPestoRecipes = <Recipe>[
let _recipeList = [
    new Recipe({
        name: 'Roasted Chicken',
        author: 'Peter Carlsson',
        ingredientsImagePath: 'food/icons/main.png',
        ingredientsImagePackage: _kGalleryAssetsPackage,
        description: 'The perfect dish to welcome your family and friends with on a crisp autumn night. Pair with roasted veggies to truly impress them.',
        imagePath: 'food/roasted_chicken.png',
        imagePackage: _kGalleryAssetsPackage,
        ingredients: [
            new RecipeIngredient({
                amount: '1 whole',
                description: 'Chicken'
            }),
            new RecipeIngredient({
                amount: '1/2 cup',
                description: 'Butter'
            }),
            new RecipeIngredient({
                amount: '1 tbsp',
                description: 'Onion powder'
            }),
            new RecipeIngredient({
                amount: '1 tbsp',
                description: 'Freshly ground pepper'
            }),
            new RecipeIngredient({
                amount: '1 tsp',
                description: 'Salt'
            })
        ],
        steps: [
            new RecipeStep({
                duration: '1 min',
                description: 'Put in oven'
            }),
            new RecipeStep({
                duration: '1hr 45 min',
                description: 'Cook'
            })
        ],
    }),
    new Recipe({
        name: 'Chopped Beet Leaves',
        author: 'Trevor Hansen',
        ingredientsImagePath: 'food/icons/veggie.png',
        ingredientsImagePackage: _kGalleryAssetsPackage,
        description: 'This vegetable has more to offer than just its root. Beet greens can be tossed into a salad to add some variety or sauteed on its own with some oil and garlic.',
        imagePath: 'food/chopped_beet_leaves.png',
        imagePackage: _kGalleryAssetsPackage,
        ingredients: [
            new RecipeIngredient({
                amount: '3 cups',
                description: 'Beet greens'
            })
        ],
        steps: [
            new RecipeStep({
                duration: '5 min',
                description: 'Chop'
            })
        ]
    }),
    new Recipe({
        name: 'Pesto Pasta',
        author: 'Ali Connors',
        ingredientsImagePath: 'food/icons/main.png',
        ingredientsImagePackage: _kGalleryAssetsPackage,
        description: 'With this pesto recipe, you can quickly whip up a meal to satisfy your savory needs. And if you\'re feeling festive, you can add bacon to taste.',
        imagePath: 'food/pesto_pasta.png',
        imagePackage: _kGalleryAssetsPackage,
        ingredients: [
            new RecipeIngredient({
                amount: '1/4 cup ',
                description: 'Pasta'
            }),
            new RecipeIngredient({
                amount: '2 cups',
                description: 'Fresh basil leaves'
            }),
            new RecipeIngredient({
                amount: '1/2 cup',
                description: 'Parmesan cheese'
            }),
            new RecipeIngredient({
                amount: '1/2 cup',
                description: 'Extra virgin olive oil'
            }),
            new RecipeIngredient({
                amount: '1/3 cup',
                description: 'Pine nuts'
            }),
            new RecipeIngredient({
                amount: '1/4 cup',
                description: 'Lemon juice'
            }),
            new RecipeIngredient({
                amount: '3 cloves',
                description: 'Garlic'
            }),
            new RecipeIngredient({
                amount: '1/4 tsp',
                description: 'Salt'
            }),
            new RecipeIngredient({
                amount: '1/8 tsp',
                description: 'Pepper'
            }),
            new RecipeIngredient({
                amount: '3 lbs',
                description: 'Bacon'
            })
        ],
        steps: [
            new RecipeStep({
                duration: '15 min',
                description: 'Blend'
            })
        ]
    }),
    new Recipe({
        name: 'Cherry Pie',
        author: 'Sandra Adams',
        ingredientsImagePath: 'food/icons/main.png',
        ingredientsImagePackage: _kGalleryAssetsPackage,
        description: 'Sometimes when you\'re craving some cheer in your life you can jumpstart your day with some cherry pie. Dessert for breakfast is perfectly acceptable.',
        imagePath: 'food/cherry_pie.png',
        imagePackage: _kGalleryAssetsPackage,
        ingredients: [
            new RecipeIngredient({
                amount: '1',
                description: 'Pie crust'
            }),
            new RecipeIngredient({
                amount: '4 cups',
                description: 'Fresh or frozen cherries'
            }),
            new RecipeIngredient({
                amount: '1 cup',
                description: 'Granulated sugar'
            }),
            new RecipeIngredient({
                amount: '4 tbsp',
                description: 'Cornstarch'
            }),
            new RecipeIngredient({
                amount: '1½ tbsp',
                description: 'Butter'
            })
        ],
        steps: [
            new RecipeStep({
                duration: '15 min',
                description: 'Mix'
            }),
            new RecipeStep({
                duration: '1hr 30 min',
                description: 'Bake'
            })
        ]
    }),
    new Recipe({
        name: 'Spinach Salad',
        author: 'Peter Carlsson',
        ingredientsImagePath: 'food/icons/spicy.png',
        ingredientsImagePackage: _kGalleryAssetsPackage,
        description: 'Everyone\'s favorite leafy green is back. Paired with fresh sliced onion, it\'s ready to tackle any dish, whether it be a salad or an egg scramble.',
        imagePath: 'food/spinach_onion_salad.png',
        imagePackage: _kGalleryAssetsPackage,
        ingredients: [
            new RecipeIngredient({
                amount: '4 cups',
                description: 'Spinach'
            }),
            new RecipeIngredient({
                amount: '1 cup',
                description: 'Sliced onion'
            })
        ],
        steps: [
            new RecipeStep({
                duration: '5 min',
                description: 'Mix'
            })
        ]
    }),
    new Recipe({
        name: 'Butternut Squash Soup',
        author: 'Ali Connors',
        ingredientsImagePath: 'food/icons/healthy.png',
        ingredientsImagePackage: _kGalleryAssetsPackage,
        description: 'This creamy butternut squash soup will warm you on the chilliest of winter nights and bring a delightful pop of orange to the dinner table.',
        imagePath: 'food/butternut_squash_soup.png',
        imagePackage: _kGalleryAssetsPackage,
        ingredients: [
            new RecipeIngredient({
                amount: '1',
                description: 'Butternut squash'
            }),
            new RecipeIngredient({
                amount: '4 cups',
                description: 'Chicken stock'
            }),
            new RecipeIngredient({
                amount: '2',
                description: 'Potatoes'
            }),
            new RecipeIngredient({
                amount: '1',
                description: 'Onion'
            }),
            new RecipeIngredient({
                amount: '1',
                description: 'Carrot'
            }),
            new RecipeIngredient({
                amount: '1',
                description: 'Celery'
            }),
            new RecipeIngredient({
                amount: '1 tsp',
                description: 'Salt'
            }),
            new RecipeIngredient({
                amount: '1 tsp',
                description: 'Pepper'
            })
        ],
        steps: [
            new RecipeStep({
                duration: '10 min',
                description: 'Prep vegetables'
            }),
            new RecipeStep({
                duration: '5 min',
                description: 'Stir'
            }),
            new RecipeStep({
                duration: '1 hr 10 min',
                description: 'Cook'
            })
        ]
    }),
    new Recipe({
        name: 'Spanakopita',
        author: 'Trevor Hansen',
        ingredientsImagePath: 'food/icons/quick.png',
        ingredientsImagePackage: _kGalleryAssetsPackage,
        description: 'You \'feta\' believe this is a crowd-pleaser! Flaky phyllo pastry surrounds a delicious mixture of spinach and cheeses to create the perfect appetizer.',
        imagePath: 'food/spanakopita.png',
        imagePackage: _kGalleryAssetsPackage,
        ingredients: [
            new RecipeIngredient({
                amount: '1 lb',
                description: 'Spinach'
            }),
            new RecipeIngredient({
                amount: '½ cup',
                description: 'Feta cheese'
            }),
            new RecipeIngredient({
                amount: '½ cup',
                description: 'Cottage cheese'
            }),
            new RecipeIngredient({
                amount: '2',
                description: 'Eggs'
            }),
            new RecipeIngredient({
                amount: '1',
                description: 'Onion'
            }),
            new RecipeIngredient({
                amount: '½ lb',
                description: 'Phyllo dough'
            })
        ],
        steps: [
            new RecipeStep({
                duration: '5 min',
                description: 'Sauté vegetables'
            }),
            new RecipeStep({
                duration: '3 min',
                description: 'Stir vegetables and other filling ingredients'
            }),
            new RecipeStep({
                duration: '10 min',
                description: 'Fill phyllo squares half-full with filling and fold.'
            }),
            new RecipeStep({
                duration: '40 min',
                description: 'Bake'
            })
        ]
    })
];
module.exports = {
    JSPestoPage
};


/***/ }),

/***/ "./lib/app_demo/platform/example_dio.js":
/*!**********************************************!*\
  !*** ./lib/app_demo/platform/example_dio.js ***!
  \**********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: this is used directly at 2:17-21 */
/*! CommonJS bailout: module.exports is used directly at 131:0-14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const mx_dart_sdk_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/mx-dart-sdk */ "@tencent/mxflutter-widgets/mx-dart-sdk");
const painting_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/painting */ "@tencent/mxflutter-widgets/painting");
const { SectionTitle } = __webpack_require__(/*! ../component/section_title.js */ "./lib/app_demo/component/section_title.js");
const packages__dio = __webpack_require__(/*! @tencent/mxflutter-dio */ "../mxflutter-packages/mxflutter-dio/index.js");
let cgiDataUrl = "https://c.m.163.com/nc/article/headline/T1348649580692/0-10.html";
let cgiJsonUrl = "https://reactnative.dev/movies.json";
class PageExampleDio extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super("PageExampleDio");
        this.data = "biz data";
        this.count = 0;
    }
    createState() {
        return new PageExampleDioState(this);
    }
}
class PageExampleDioState extends mxflutter_1.MXJSWidgetState {
    constructor() {
        super("PageExampleNetworkState");
        this.response = "点击小人Run上面的代码";
        this.dio = packages__dio.Dio();
    }
    dioCodeText() {
        return "let resp = await Dio().get(cgi);";
    }
    //例子1，最简单的用法 
    testDio1(url) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                let response = yield this.dio.get(url);
                mxflutter_1.MXJSLog.log("await Dio.get(urlStr):request() :" + response);
                return response.data;
            }
            catch (e$) {
                // let e = dart.getThrown(e$);
                // MXJSLog.log("testDio() error:" + e);
                return e;
            }
        });
    }
    //例子2，接口还未完全支持
    testDio2(url) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                let response = yield this.dio.get(url, {
                    onReceiveProgress: function (progress, total) {
                        mxflutter_1.MXJSLog.log("testDio(): progress: " + progress / total);
                    }
                });
                mxflutter_1.MXJSLog.log("await Dio.get(urlStr):request() :" + response);
                return response.data;
            }
            catch (e$) {
                // let e = dart.getThrown(e$);
                // MXJSLog.log("testDio() error:" + e);
                rethrow;
            }
        });
    }
    build(context) {
        let widget = new material_1.Scaffold({
            appBar: new material_1.AppBar({
                title: new widgets_1.Text("Dio Example"),
            }),
            body: new widgets_1.ListView({
                children: [
                    new SectionTitle("Code 获取网易新闻text"),
                    new material_1.ListTile({
                        trailing: new widgets_1.Icon(material_1.Icons["directions_run"]),
                        title: new widgets_1.Text(this.dioCodeText(), {
                            style: new mx_dart_sdk_1.TextStyle({
                                color: material_1.Colors.gray,
                            })
                        }),
                        onTap: function () {
                            return __awaiter(this, void 0, void 0, function* () {
                                let response = yield this.testDio2(cgiDataUrl);
                                this.setState(function () {
                                    this.response = JSON.stringify(response);
                                }.bind(this));
                            });
                        }.bind(this)
                    }),
                    new SectionTitle("Code 获取Json Map"),
                    new material_1.ListTile({
                        trailing: new widgets_1.Icon(material_1.Icons["directions_run"]),
                        title: new widgets_1.Text(this.dioCodeText(), {
                            style: new mx_dart_sdk_1.TextStyle({
                                color: material_1.Colors.gray,
                            })
                        }),
                        onTap: function () {
                            return __awaiter(this, void 0, void 0, function* () {
                                let response = yield this.testDio1(cgiJsonUrl);
                                this.setState(function () {
                                    //response.data 为json map obj
                                    this.response = "json title:" + response["title"] + " \r\n\r\n\r\njson text:" + JSON.stringify(response);
                                }.bind(this));
                            });
                        }.bind(this)
                    }),
                    new SectionTitle("Response"),
                    new widgets_1.Padding({
                        padding: painting_1.EdgeInsets.all(10),
                        child: new widgets_1.Text(this.response, {
                            style: new mx_dart_sdk_1.TextStyle({
                                color: material_1.Colors.gray,
                            })
                        }),
                    })
                ],
            })
        });
        return widget;
    }
}
module.exports = {
    PageExampleDio,
};


/***/ }),

/***/ "./lib/app_demo/platform/example_message_channel.js":
/*!**********************************************************!*\
  !*** ./lib/app_demo/platform/example_message_channel.js ***!
  \**********************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: this is used directly at 2:17-21 */
/*! CommonJS bailout: module.exports is used directly at 103:0-14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const mx_dart_sdk_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/mx-dart-sdk */ "@tencent/mxflutter-widgets/mx-dart-sdk");
const painting_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/painting */ "@tencent/mxflutter-widgets/painting");
const services_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/services */ "@tencent/mxflutter-widgets/services");
const { SectionTitle } = __webpack_require__(/*! ../component/section_title.js */ "./lib/app_demo/component/section_title.js");
class PageExampleMessageChannel extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super("PageExampleMessageChannel");
    }
    createState() {
        return new PageExampleMessageChannelState(this);
    }
}
class PageExampleMessageChannelState extends mxflutter_1.MXJSWidgetState {
    constructor() {
        super("PageExampleMessageChannelState");
        this.response = "点击小人Run上面的代码";
        this.methodChannel = new services_1.MethodChannel("MXFlutter_MethodChannel_Demo");
    }
    dioCodeText() {
        return "let result = await this.methodChannel.invokeMethod('callNativeIconListRefresh', {});";
    }
    dioCodeText2() {
        return "let result = await this.methodChannel.invokeMethod('callNativeIconListLoadMore', {});";
    }
    callMethodChannel(method) {
        return __awaiter(this, void 0, void 0, function* () {
            //MessageChannel 用法示例
            let result = yield this.methodChannel.invokeMethod(method, {});
            mxflutter_1.MXJSLog.log("callNativeIconListRefresh result: " + result);
            return result;
        });
    }
    build(context) {
        let widget = new material_1.Scaffold({
            appBar: new material_1.AppBar({
                title: new widgets_1.Text("MessageChannel Example"),
            }),
            body: new widgets_1.ListView({
                children: [
                    new SectionTitle("Code 调用MessageChannel ListRefresh"),
                    new material_1.ListTile({
                        trailing: new widgets_1.Icon(material_1.Icons["directions_run"]),
                        title: new widgets_1.Text(this.dioCodeText(), {
                            style: new mx_dart_sdk_1.TextStyle({
                                color: material_1.Colors.gray,
                            })
                        }),
                        onTap: function () {
                            return __awaiter(this, void 0, void 0, function* () {
                                let response = yield this.callMethodChannel("callNativeIconListRefresh");
                                this.setState(function () {
                                    this.response = JSON.stringify(response ? response : "messagechannel return empty");
                                }.bind(this));
                            });
                        }.bind(this)
                    }),
                    new SectionTitle("Code 调用MessageChannel ListLoadMore"),
                    new material_1.ListTile({
                        trailing: new widgets_1.Icon(material_1.Icons["directions_run"]),
                        title: new widgets_1.Text(this.dioCodeText2(), {
                            style: new mx_dart_sdk_1.TextStyle({
                                color: material_1.Colors.gray,
                            })
                        }),
                        onTap: function () {
                            return __awaiter(this, void 0, void 0, function* () {
                                let response = yield this.callMethodChannel("callNativeIconListLoadMore");
                                this.setState(function () {
                                    this.response = JSON.stringify(response ? response : "messagechannel return empty");
                                }.bind(this));
                            });
                        }.bind(this)
                    }),
                    new SectionTitle("MessageChannel Result"),
                    new widgets_1.Padding({
                        padding: painting_1.EdgeInsets.all(10),
                        child: new widgets_1.Text(this.response, {
                            style: new mx_dart_sdk_1.TextStyle({
                                color: material_1.Colors.gray,
                            })
                        }),
                    })
                ],
            })
        });
        return widget;
    }
}
module.exports = {
    PageExampleMessageChannel,
};


/***/ }),

/***/ "./lib/app_demo/platform/example_shared_preferences.js":
/*!*************************************************************!*\
  !*** ./lib/app_demo/platform/example_shared_preferences.js ***!
  \*************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: this is used directly at 2:17-21 */
/*! CommonJS bailout: module.exports is used directly at 122:0-14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const mx_dart_sdk_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/mx-dart-sdk */ "@tencent/mxflutter-widgets/mx-dart-sdk");
const painting_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/painting */ "@tencent/mxflutter-widgets/painting");
const { SectionTitle } = __webpack_require__(/*! ../component/section_title.js */ "./lib/app_demo/component/section_title.js");
//let packages__sp = require("packages/shared_preferences/shared_preferences.js");
function testPreference() {
    return __awaiter(this, void 0, void 0, function* () {
        //let packages__sp = require("packages/shared_preferences/shared_preferences.js");
        try {
            let _prefs = (yield packages__sp.SharedPreferences.getInstance());
            _prefs.setString("mxflutter", "MXFlutter SharedPreferences: Count : " + this.count++);
            let v = _prefs.getString("soap");
            mxflutter_1.MXJSLog.log("_prefs.getString('soap'):" + v);
            _prefs.setStringList("soaplist", ["soap", "mxflutter uuuuu"]);
            let vList = _prefs.getStringList("soaplist");
            mxflutter_1.MXJSLog.log("_prefs.getStringList('soaplist'):" + vList);
        }
        catch (e$) {
            let e = dart.getThrown(e$);
            mxflutter_1.MXJSLog.log("testPreference error:" + e);
            return e;
        }
    });
}
class PageExampleSharedPreferences extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super("PageExampleSharedPreferences");
    }
    createState() {
        return new PageExampleSharedPreferencesState(this);
    }
}
class PageExampleSharedPreferencesState extends mxflutter_1.MXJSWidgetState {
    constructor() {
        super("PageExampleSharedPreferencesState");
        this.response = "点击小人Run上面的代码";
        this.count = 0;
        this.prefs = null;
        this.setup();
    }
    setup() {
        return __awaiter(this, void 0, void 0, function* () {
            this.prefs = (yield packages__sp.SharedPreferences.getInstance());
        });
    }
    dioCodeText() {
        return "prefs.setString(‘mxflutter’, str)";
    }
    dioCodeText2() {
        return "this.prefs.getString('mxflutter')";
    }
    build(context) {
        let widget = new material_1.Scaffold({
            appBar: new material_1.AppBar({
                title: new widgets_1.Text("MessageChannel Example"),
            }),
            body: new widgets_1.ListView({
                children: [
                    new SectionTitle("Code 调用prefs.setString"),
                    new material_1.ListTile({
                        trailing: new widgets_1.Icon(material_1.Icons["directions_run"]),
                        title: new widgets_1.Text(this.dioCodeText(), {
                            style: new mx_dart_sdk_1.TextStyle({
                                color: material_1.Colors.gray,
                            })
                        }),
                        onTap: function () {
                            return __awaiter(this, void 0, void 0, function* () {
                                this.setState(function () {
                                    let str = "MXFlutter SharedPreferences: Count : " + this.count++;
                                    let v = this.prefs.setString("mxflutter", str);
                                    this.response = " prefs.setString('mxflutter'," + str + ")";
                                }.bind(this));
                            });
                        }.bind(this)
                    }),
                    new SectionTitle("Code 调用 prefs.getString"),
                    new material_1.ListTile({
                        trailing: new widgets_1.Icon(material_1.Icons["directions_run"]),
                        title: new widgets_1.Text(this.dioCodeText2(), {
                            style: new mx_dart_sdk_1.TextStyle({
                                color: material_1.Colors.gray,
                            })
                        }),
                        onTap: function () {
                            return __awaiter(this, void 0, void 0, function* () {
                                this.setState(function () {
                                    let v = this.prefs.getString("mxflutter");
                                    this.response = v;
                                }.bind(this));
                            });
                        }.bind(this)
                    }),
                    new SectionTitle("prefs Result"),
                    new widgets_1.Padding({
                        padding: painting_1.EdgeInsets.all(10),
                        child: new widgets_1.Text(this.response, {
                            style: new mx_dart_sdk_1.TextStyle({
                                color: material_1.Colors.gray,
                            })
                        }),
                    })
                ],
            })
        });
        return widget;
    }
}
module.exports = {
    PageExampleSharedPreferences,
};


/***/ }),

/***/ "./lib/app_demo/platform/index.js":
/*!****************************************!*\
  !*** ./lib/app_demo/platform/index.js ***!
  \****************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 68:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const foundation_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/foundation */ "@tencent/mxflutter-widgets/foundation");
const { SectionTitle } = __webpack_require__(/*! ../component/section_title.js */ "./lib/app_demo/component/section_title.js");
class PlatformExamplesPage extends mxflutter_1.MXJSStatelessWidget {
    constructor() {
        super("PlatformExamplesPage");
    }
    build(context) {
        let widget = new material_1.Scaffold({
            appBar: new material_1.AppBar({
                title: new widgets_1.Text('Platform Examples'),
            }),
            body: new material_1.Scrollbar({
                child: new widgets_1.ListView({
                    children: [
                        new SectionTitle("MessageChannel"),
                        new material_1.ListTile({
                            title: new widgets_1.Text("MessageChannel"),
                            subtitle: new widgets_1.Text("iOS/Android"),
                            onTap: function () {
                                let { PageExampleMessageChannel } = __webpack_require__(/*! ./example_message_channel.js */ "./lib/app_demo/platform/example_message_channel.js");
                                widgets_1.Navigator.push(context, new material_1.MaterialPageRoute({
                                    builder: function (context) {
                                        return new PageExampleMessageChannel();
                                    }
                                }));
                            }
                        }),
                        new SectionTitle("网络组件", {
                            key: new foundation_1.Key("1")
                        }),
                        new material_1.ListTile({
                            title: new widgets_1.Text("Dio Examples"),
                            subtitle: new widgets_1.Text("iOS/Android"),
                            onTap: function () {
                                let { PageExampleDio } = __webpack_require__(/*! ./example_dio.js */ "./lib/app_demo/platform/example_dio.js");
                                widgets_1.Navigator.push(context, new material_1.MaterialPageRoute({
                                    builder: function (context) {
                                        return new PageExampleDio;
                                    }
                                }));
                            }
                        }),
                        new SectionTitle("存储"),
                        new material_1.ListTile({
                            title: new widgets_1.Text("shared_preferences"),
                            subtitle: new widgets_1.Text("iOS/Android"),
                            onTap: function () {
                                let { PageExampleSharedPreferences } = __webpack_require__(/*! ./example_shared_preferences.js */ "./lib/app_demo/platform/example_shared_preferences.js");
                                widgets_1.Navigator.push(context, new material_1.MaterialPageRoute({
                                    builder: function (context) {
                                        return new PageExampleSharedPreferences;
                                    }
                                }));
                            }
                        }),
                    ],
                })
            })
        });
        return widget;
    }
}
module.exports = {
    PlatformExamplesPage,
};


/***/ }),

/***/ "./lib/app_demo/profile/column_profile.js":
/*!************************************************!*\
  !*** ./lib/app_demo/profile/column_profile.js ***!
  \************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 382:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

//  MXFlutterFramework
//  Copyright 2019 The MXFlutter Authors. All rights reserved.
//
//  Use of this source code is governed by a MIT-style license that can be
//  found in the LICENSE file.
Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const mx_dart_sdk_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/mx-dart-sdk */ "@tencent/mxflutter-widgets/mx-dart-sdk");
const painting_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/painting */ "@tencent/mxflutter-widgets/painting");
const rendering_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/rendering */ "@tencent/mxflutter-widgets/rendering");
const { SectionTitle } = __webpack_require__(/*! ../component/section_title.js */ "./lib/app_demo/component/section_title.js");
const { CachedNetworkImage } = __webpack_require__(/*! @tencent/mxflutter-cached-network-image */ "../mxflutter-packages/mxflutter-cached-network-image/index.js");
//
const g_max_count = 200;
//data
let g_newsOrder = 0;
//实现一个简单的event_bus
let g_event_bus_map = {}; //type Map<key:String,function:handelFun>
class PerformanceProfilingWidget extends mxflutter_1.MXJSStatefulWidget {
    constructor({ title, profileText, rebuildCallback } = {}) {
        super('PerformanceProfilingWidget');
        this.title = title ? title : '性能分析';
        this.profileText = profileText;
        this.rebuildCallback = rebuildCallback;
    }
    createState() {
        return new PerformanceProfilingWidgetState(this);
    }
}
PerformanceProfilingWidget.Event_Refresh_ProfileInfo = 'demo_pref_info_refresh';
class PerformanceProfilingWidgetState extends mxflutter_1.MXJSWidgetState {
    constructor(widget) {
        super();
        this.buildCount = 0;
    }
    //Override
    initState() {
        //注册局部刷新事件
        g_event_bus_map[PerformanceProfilingWidget.Event_Refresh_ProfileInfo] = function (profileInfo) {
            this.refreshProfileText(profileInfo);
        }.bind(this);
    }
    //Override
    dispose() {
        delete g_event_bus_map[PerformanceProfilingWidget.Event_Refresh_ProfileInfo];
    }
    build(context) {
        let widget = new widgets_1.Padding({
            padding: painting_1.EdgeInsets.only({
                top: 0.0,
                bottom: 0.0,
                left: 10.0,
                right: 10
            }),
            child: new widgets_1.Column({
                crossAxisAlignment: rendering_1.CrossAxisAlignment.start,
                children: [
                    new widgets_1.Row({
                        children: [
                            new widgets_1.Text(this.widget.title + '(' + ++this.buildCount + ')', {
                                style: new mx_dart_sdk_1.TextStyle({
                                    fontWeight: mx_dart_sdk_1.FontWeight.bold,
                                    fontSize: 16.0,
                                    color: material_1.Colors.black,
                                }),
                            }),
                            new material_1.FlatButton({
                                onPressed: function () {
                                    if (this.widget.rebuildCallback) {
                                        this.widget.rebuildCallback();
                                        return;
                                    }
                                    //性能分析模式
                                    //打开性能分析模式，widget.enableProfile = true
                                    //可以State类重载onBuildEnd，使用args.profileText获得这次Rebuild的各个阶段耗时
                                    //如果onBuildEnd又触发setState 记得一定this.enableProfile = false; 否则会Rebuild死循环
                                    this.widget.enableProfile = true;
                                    this.setState();
                                    mxflutter_1.MXJSLog.log('数据量少时，点击...');
                                }.bind(this),
                                child: new widgets_1.Text('点击查看耗时', {
                                    style: new mx_dart_sdk_1.TextStyle({
                                        fontWeight: mx_dart_sdk_1.FontWeight.bold,
                                        fontSize: 14.0,
                                        color: material_1.Colors.red,
                                    }),
                                }),
                            }),
                        ],
                    }),
                    new widgets_1.Padding({
                        padding: painting_1.EdgeInsets.only({
                            top: 0.0,
                            bottom: 10.0,
                            left: 0.0,
                            right: 0
                        }),
                        child: new widgets_1.Text(this.profileText == null ? "耗时信息" : this.profileText),
                    }),
                ],
            }),
        });
        return new material_1.Card({
            child: widget,
            color: new mx_dart_sdk_1.Color(0xffe1f5fe),
            margin: painting_1.EdgeInsets.fromLTRB(8.0, 8.0, 10.0, 0.0)
        });
    }
    // onBuildEnd(args) {
    //   if (!this.widget.enableProfile) {
    //     return;
    //   }
    //   this.refreshProfileText(args.profileText);
    // }
    onFirstFrameEnd(profileInfo) {
        if (!this.widget.enableProfile) {
            return;
        }
        this.refreshProfileText(profileInfo);
    }
    refreshProfileText(profileInfo) {
        //如果onBuildEnd又触发setState 记得一定this.enableProfile = false; 否则会Rebuild死循环
        if (!profileInfo) {
            return;
        }
        this.widget.enableProfile = false;
        this.setState(function () {
            // 将profileInfo转成profileText
            this.profileText = profileInfo.profileText();
        }.bind(this));
    }
}
class ListViewProfileDemo1 extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super('ListViewDemo');
        this.enableProfile = true;
    }
    createState() {
        return new ListViewProfileDemo1State(this);
    }
}
class ListViewProfileDemo1State extends mxflutter_1.MXJSWidgetState {
    constructor(widget) {
        super();
        this.newsArray = [];
        this.buildCount = 0;
    }
    initState() {
        super.initState();
        this.newsArray = g_newsList;
    }
    build(context) {
        g_newsOrder = 0;
        ++this.buildCount;
        let items = [];
        items.push(new widgets_1.Container({
            child: new PerformanceProfilingWidget({
                title: '局部刷新小数据量测试'
            })
        }));
        items.push(new widgets_1.Container({
            child: new PerformanceProfilingWidget({
                title: '整个页面刷新大数据量测试',
                profileText: this.profileText,
                rebuildCallback: function () {
                    //性能分析模式
                    //打开性能分析模式，widget.enableProfile = true
                    //可以State类重载onBuildEnd，使用getProfileText获得这次Rebuild的各个阶段耗时
                    //如果onBuildEnd又触发setState 记得一定this.enableProfile = false; 否则会Rebuild死循环
                    this.widget.enableProfile = true;
                    this.setState(function () { }.bind(this));
                }.bind(this),
            }),
        }));
        for (let i = 0; i < g_max_count; ++i) {
            let item = new widgets_1.Container({
                child: this.hotCard(this.newsArray[i % this.newsArray.length], this.buildCount)
            });
            items.push(item);
        }
        let widget = new material_1.Scaffold({
            appBar: new material_1.AppBar({
                title: new widgets_1.Text('网易新闻 Column Widget '),
            }),
            body: new widgets_1.SingleChildScrollView({
                child: new widgets_1.Column({
                    children: items,
                }),
            }),
        });
        return widget;
    }
    //
    // onBuildEnd(args) {
    //   if (!this.widget.enableProfile || !args.profileText) {
    //     return;
    //   }
    //   //如果onBuildEnd又触发setState 记得一定this.enableProfile = false; 否则会Rebuild死循环
    //   this.widget.enableProfile = false;
    //   //1. 给性能Cell 发个通知，局部刷新,把ProfileText显示出来
    //   let handelFun = g_event_bus_map[PerformanceProfilingWidget.Event_Refresh_ProfileInfo];
    //   if (handelFun) {
    //     handelFun(args.profileText);
    //   }
    // }
    onFirstFrameEnd(profileInfo) {
        if (!this.widget.enableProfile || !profileInfo) {
            return;
        }
        //如果onBuildEnd又触发setState 记得一定this.enableProfile = false; 否则会Rebuild死循环
        this.widget.enableProfile = false;
        //1. 给性能Cell 发个通知，局部刷新,把ProfileText显示出来
        let handelFun = g_event_bus_map[PerformanceProfilingWidget.Event_Refresh_ProfileInfo];
        if (handelFun) {
            handelFun(profileInfo);
        }
    }
    hotCard(newsModel, buildCount) {
        g_newsOrder++;
        return new widgets_1.Container({
            decoration: new painting_1.BoxDecoration({
                color: material_1.Colors.white,
                border: new painting_1.BorderDirectional({
                    bottom: new painting_1.BorderSide({
                        color: material_1.Colors.black12,
                        width: 1.0,
                    }),
                }),
            }),
            child: new material_1.FlatButton({
                onPressed: function () { },
                child: new widgets_1.Container({
                    padding: painting_1.EdgeInsets.only({
                        top: 8.0,
                        bottom: 8.0
                    }),
                    child: new widgets_1.Row({
                        children: [
                            new widgets_1.Expanded({
                                flex: 1,
                                child: new widgets_1.Column({
                                    children: [
                                        new widgets_1.Container({
                                            child: new widgets_1.Text(String(g_newsOrder), {
                                                style: new mx_dart_sdk_1.TextStyle({
                                                    color: material_1.Colors.red,
                                                    fontSize: 18.0,
                                                }),
                                            }),
                                            alignment: painting_1.Alignment.topLeft,
                                        }),
                                        newsModel.rise != null ?
                                            new widgets_1.Row({
                                                children: [
                                                    new widgets_1.Icon(new widgets_1.IconData(0xe5d8, {
                                                        fontFamily: 'MaterialIcons'
                                                    }), {
                                                        color: material_1.Colors.red,
                                                        size: 10.0,
                                                    }),
                                                    new widgets_1.Text(newsModel.rise, {
                                                        style: new mx_dart_sdk_1.TextStyle({
                                                            color: material_1.Colors.red,
                                                            fontSize: 10.0,
                                                        }),
                                                    }),
                                                ],
                                            }) :
                                            new widgets_1.Container(),
                                    ],
                                }),
                            }),
                            new widgets_1.Expanded({
                                flex: 6,
                                child: new widgets_1.Column({
                                    children: [
                                        new widgets_1.Container({
                                            child: new widgets_1.Text('buildCount: ' + buildCount + ' ' + newsModel.title, {
                                                style: new mx_dart_sdk_1.TextStyle({
                                                    fontWeight: mx_dart_sdk_1.FontWeight.bold,
                                                    fontSize: 16.0,
                                                    height: 1.1,
                                                    color: material_1.Colors.black,
                                                }),
                                            }),
                                            padding: painting_1.EdgeInsets.only({
                                                bottom: 10.0,
                                                right: 4.0
                                            }),
                                            alignment: painting_1.Alignment.topLeft,
                                        }),
                                        newsModel.mark != null ?
                                            new widgets_1.Container({
                                                child: new widgets_1.Text(newsModel.mark, {
                                                    style: new mx_dart_sdk_1.TextStyle({
                                                        color: material_1.Colors.black54
                                                    }),
                                                }),
                                                alignment: painting_1.Alignment.topLeft,
                                                padding: painting_1.EdgeInsets.only({
                                                    bottom: 8.0,
                                                    right: 4.0
                                                }),
                                            }) :
                                            new widgets_1.Container(),
                                        new widgets_1.Container({
                                            child: new widgets_1.Text(newsModel.hotNum, {
                                                style: new mx_dart_sdk_1.TextStyle({
                                                    color: material_1.Colors.black54
                                                }),
                                            }),
                                            alignment: painting_1.Alignment.topLeft,
                                        }),
                                    ],
                                }),
                            }),
                            new widgets_1.Expanded({
                                flex: 3,
                                child: new widgets_1.AspectRatio({
                                    aspectRatio: 3.0 / 2.0,
                                    child: new widgets_1.ClipRRect({
                                        borderRadius: painting_1.BorderRadius.circular(4.0),
                                        child: new CachedNetworkImage({
                                            fadeInDuration: new mx_dart_sdk_1.Duration({
                                                milliseconds: 10
                                            }),
                                            fadeOutDuration: new mx_dart_sdk_1.Duration({
                                                milliseconds: 10
                                            }),
                                            imageUrl: newsModel.imgUrl,
                                            width: 124.0,
                                            height: 69.0,
                                            fit: painting_1.BoxFit.fill,
                                        }),
                                    }),
                                }),
                            }),
                        ],
                    }),
                }),
            }),
        });
    }
}
class NewsModel {
    constructor(order, title, hotNum, imgUrl, { mark, rise } = {}) {
        this.order = order;
        this.title = title;
        this.hotNum = hotNum;
        this.imgUrl = imgUrl;
        this.mark = mark;
        this.rise = rise;
    }
    static fromJSON(jsonMap) {
        let news = new NewsModel();
        news.order = String(jsonMap['order']);
        news.title = jsonMap['title'];
        news.hotNum = String(jsonMap['votecount']) + ' 人点赞';
        news.imgUrl = jsonMap['imgsrc'];
        news.mark = jsonMap['source'];
        news.rise = jsonMap['alias'];
        return news;
    }
}
let g_newsList = [
    new NewsModel('01', '了不起的新时代，世界竞争中的中国制造', '4427 万热度', 'https://pic2.zhimg.com/50/v2-710b7a6fea12a7203945b666790b7181_hd.jpg'),
    new NewsModel('02', '一个女生怎样才算见过世面？', '4157 万热度', 'https://pic3.zhimg.com/50/v2-56dca99cd8718f9303d43b3015342ba7_hd.jpg', {
        rise: '3',
        mark: '所谓世面，就是世界的每一面',
    }),
    new NewsModel('03', '如果朱标没死，削藩的话，朱棣会造反吗？', '4009 万热度', 'https://pic4.zhimg.com/v2-095d2b48970889b108247e6d2dd0fa6b_b.jpg'),
    new NewsModel('04', '如何编译 Linux 内核？', '3110 万热度', 'https://pic3.zhimg.com/80/v2-1ea1b0cf80c85b88893b2b97a94d7e71_hd.jpg', {
        mark: '内核？呵呵'
    }),
    new NewsModel('05', '如何看待将神话故事拍成电影这件事？', '2119 万热度', 'https://pic4.zhimg.com/50/v2-267b1dda62f770bd2bd13cb545117b78_hd.jpg', {
        rise: '3',
    }),
];
module.exports = {
    ListViewProfileDemo1,
};


/***/ }),

/***/ "./lib/app_demo/profile/column_submxwidget_profile.js":
/*!************************************************************!*\
  !*** ./lib/app_demo/profile/column_submxwidget_profile.js ***!
  \************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 238:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

//  MXFlutterFramework
//  Copyright 2019 The MXFlutter Authors. All rights reserved.
//
//  Use of this source code is governed by a MIT-style license that can be
//  found in the LICENSE file.
Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const mx_dart_sdk_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/mx-dart-sdk */ "@tencent/mxflutter-widgets/mx-dart-sdk");
const painting_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/painting */ "@tencent/mxflutter-widgets/painting");
const { CachedNetworkImage } = __webpack_require__(/*! @tencent/mxflutter-cached-network-image */ "../mxflutter-packages/mxflutter-cached-network-image/index.js");
//
const g_max_count = 100;
//data
let g_newsOrder = 0;
//
class ListViewProfileDemo1 extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super('ListViewDemo');
    }
    createState() {
        return new ListViewProfileDemo1State(this);
    }
}
class ListViewProfileDemo1State extends mxflutter_1.MXJSWidgetState {
    constructor() {
        super();
        this.newsArray = [];
        this.buildCount = 1;
    }
    initState() {
        super.initState();
        this.newsArray = g_newsList;
    }
    build(context) {
        g_newsOrder = 0;
        this.buildCount++;
        let items = [];
        for (let i = 0; i < g_max_count; ++i) {
            let item = new widgets_1.Container({
                child: new ListViewItem(this.newsArray[i % this.newsArray.length])
            });
            items.push(item);
        }
        let widget = new material_1.Scaffold({
            appBar: new material_1.AppBar({
                title: new widgets_1.Text('网易新闻 Column Widget '),
            }),
            body: new widgets_1.SingleChildScrollView({
                child: new widgets_1.Column({
                    children: items
                })
            })
        });
        return widget;
    }
}
class ListViewItem extends mxflutter_1.MXJSStatelessWidget {
    constructor(oneNewsMap) {
        super('ListViewItem');
        this.newsModel = oneNewsMap;
        this.index = Math.ceil(Math.random() * 10000);
    }
    hotCard(context, newsModel) {
        g_newsOrder++;
        return new widgets_1.Container({
            decoration: new painting_1.BoxDecoration({
                color: material_1.Colors.white,
                border: new painting_1.BorderDirectional({
                    bottom: new painting_1.BorderSide({
                        color: material_1.Colors.black12,
                        width: 1.0
                    })
                })
            }),
            child: new material_1.FlatButton({
                onPressed: function () {
                },
                child: new widgets_1.Container({
                    padding: painting_1.EdgeInsets.only({
                        top: 8.0,
                        bottom: 8.0
                    }),
                    child: new widgets_1.Row({
                        children: [
                            new widgets_1.Expanded({
                                flex: 1,
                                child: new widgets_1.Column({
                                    children: [
                                        new widgets_1.Container({
                                            child: new widgets_1.Text(String(g_newsOrder), {
                                                style: new mx_dart_sdk_1.TextStyle({
                                                    color: material_1.Colors.red,
                                                    fontSize: 18.0
                                                })
                                            }),
                                            alignment: painting_1.Alignment.topLeft
                                        }),
                                        newsModel.rise != null ?
                                            new widgets_1.Row({
                                                children: [
                                                    new widgets_1.Icon(new widgets_1.IconData(0xe5d8, {
                                                        fontFamily: 'MaterialIcons'
                                                    }), {
                                                        color: material_1.Colors.red,
                                                        size: 10.0
                                                    }),
                                                    new widgets_1.Text(newsModel.rise, {
                                                        style: new mx_dart_sdk_1.TextStyle({
                                                            color: material_1.Colors.red,
                                                            fontSize: 10.0
                                                        })
                                                    })
                                                ]
                                            }) :
                                            new widgets_1.Container()
                                    ]
                                })
                            }),
                            new widgets_1.Expanded({
                                flex: 6,
                                child: new widgets_1.Column({
                                    children: [
                                        new widgets_1.Container({
                                            child: new widgets_1.Text(newsModel.title, {
                                                style: new mx_dart_sdk_1.TextStyle({
                                                    fontWeight: mx_dart_sdk_1.FontWeight.bold,
                                                    fontSize: 16.0,
                                                    height: 1.1,
                                                    color: material_1.Colors.black
                                                })
                                            }),
                                            padding: painting_1.EdgeInsets.only({
                                                bottom: 10.0,
                                                right: 4.0
                                            }),
                                            alignment: painting_1.Alignment.topLeft
                                        }),
                                        newsModel.mark != null ?
                                            new widgets_1.Container({
                                                child: new widgets_1.Text(newsModel.mark, {
                                                    style: new mx_dart_sdk_1.TextStyle({
                                                        color: material_1.Colors.black54
                                                    })
                                                }),
                                                alignment: painting_1.Alignment.topLeft,
                                                padding: painting_1.EdgeInsets.only({
                                                    bottom: 8.0,
                                                    right: 4.0
                                                })
                                            }) :
                                            new widgets_1.Container(),
                                        new widgets_1.Container({
                                            child: new widgets_1.Text(newsModel.hotNum, {
                                                style: new mx_dart_sdk_1.TextStyle({
                                                    color: material_1.Colors.black54
                                                })
                                            }),
                                            alignment: painting_1.Alignment.topLeft
                                        })
                                    ]
                                })
                            }),
                            new widgets_1.Expanded({
                                flex: 3,
                                child: new widgets_1.AspectRatio({
                                    aspectRatio: 3.0 / 2.0,
                                    child: new widgets_1.ClipRRect({
                                        borderRadius: painting_1.BorderRadius.circular(4.0),
                                        child: new CachedNetworkImage({
                                            fadeInDuration: new mx_dart_sdk_1.Duration({
                                                milliseconds: 10
                                            }),
                                            fadeOutDuration: new mx_dart_sdk_1.Duration({
                                                milliseconds: 10
                                            }),
                                            imageUrl: newsModel.imgUrl,
                                            width: 124.0,
                                            height: 69.0,
                                            fit: painting_1.BoxFit.fill
                                        })
                                    }),
                                })
                            })
                        ]
                    })
                })
            })
        });
    }
    build(context) {
        try {
            return this.hotCard(context, this.newsModel);
        }
        catch (e$) {
            // let e = dart.getThrown(e$);
            // MXJSLog.log("card:build(context):  error:" + e);
            return null;
        }
    }
}
class NewsModel {
    constructor(order, title, hotNum, imgUrl, { mark, rise } = {}) {
        this.order = order;
        this.title = title;
        this.hotNum = hotNum;
        this.imgUrl = imgUrl;
        this.mark = mark;
        this.rise = rise;
    }
    static fromJSON(jsonMap) {
        let news = new NewsModel;
        news.order = String(jsonMap["order"]);
        news.title = jsonMap["title"];
        news.hotNum = String(jsonMap["votecount"]) + " 人点赞";
        news.imgUrl = jsonMap["imgsrc"];
        news.mark = jsonMap["source"];
        news.rise = jsonMap["alias"];
        return news;
    }
}
let g_newsList = [
    new NewsModel("01", "了不起的新时代，世界竞争中的中国制造", "4427 万热度", "https://pic2.zhimg.com/50/v2-710b7a6fea12a7203945b666790b7181_hd.jpg"),
    new NewsModel("02", "一个女生怎样才算见过世面？", "4157 万热度", "https://pic3.zhimg.com/50/v2-56dca99cd8718f9303d43b3015342ba7_hd.jpg", {
        rise: "3",
        mark: "所谓世面，就是世界的每一面"
    }),
    new NewsModel("03", "如果朱标没死，削藩的话，朱棣会造反吗？", "4009 万热度", "https://pic4.zhimg.com/v2-095d2b48970889b108247e6d2dd0fa6b_b.jpg"),
    new NewsModel("04", "如何编译 Linux 内核？", "3110 万热度", "https://pic3.zhimg.com/80/v2-1ea1b0cf80c85b88893b2b97a94d7e71_hd.jpg", {
        mark: "内核？呵呵"
    }),
    new NewsModel("05", "如何看待将神话故事拍成电影这件事？", "2119 万热度", "https://pic4.zhimg.com/50/v2-267b1dda62f770bd2bd13cb545117b78_hd.jpg", {
        rise: "3"
    })
];
module.exports = {
    ListViewProfileDemo1,
};


/***/ }),

/***/ "./lib/app_demo/profile/index.js":
/*!***************************************!*\
  !*** ./lib/app_demo/profile/index.js ***!
  \***************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 70:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const { SectionTitle } = __webpack_require__(/*! ../component/section_title.js */ "./lib/app_demo/component/section_title.js");
// let { PageExampleDio } = require("platform/example_dio.js");
// let { PageExampleFetch } = require("platform/example_fetch.js");
// let { PageExampleNetworkAPI } = require("platform/example_network_native_api.js");
// let { PageExampleMessageChannel } = require("platform/example_message_channel.js");
// let { PageExampleSharedPreferences } = require("platform/example_shared_preferences.js");
class ProfileExamplesPage extends mxflutter_1.MXJSStatelessWidget {
    constructor() {
        super("ProfileExamplesPage");
    }
    build(context) {
        let widget = new material_1.Scaffold({
            appBar: new material_1.AppBar({
                title: new widgets_1.Text('Performance Profiling'),
            }),
            body: new material_1.Scrollbar({
                child: new widgets_1.ListView({
                    children: [
                        new SectionTitle("大页面 column模拟"),
                        new material_1.ListTile({
                            title: new widgets_1.Text("Column"),
                            subtitle: new widgets_1.Text('200条Feeds同时渲染，模拟大页面刷新'),
                            onTap: function () {
                                let list_view = __webpack_require__(/*! ./column_profile.js */ "./lib/app_demo/profile/column_profile.js");
                                widgets_1.Navigator.push(context, new material_1.MaterialPageRoute({
                                    builder: function (context) {
                                        return new list_view.ListViewProfileDemo1;
                                    }
                                }));
                            }
                        }),
                        new SectionTitle("MXWidget子元素 column模拟"),
                        new material_1.ListTile({
                            title: new widgets_1.Text("Column"),
                            subtitle: new widgets_1.Text('100条FeedsMXWidget子元素渲染'),
                            onTap: function () {
                                let list_view = __webpack_require__(/*! ./column_submxwidget_profile.js */ "./lib/app_demo/profile/column_submxwidget_profile.js");
                                widgets_1.Navigator.push(context, new material_1.MaterialPageRoute({
                                    builder: function (context) {
                                        return new list_view.ListViewProfileDemo1;
                                    }
                                }));
                            }
                        }),
                        new SectionTitle("ListView"),
                        new material_1.ListTile({
                            title: new widgets_1.Text("ListView"),
                            subtitle: new widgets_1.Text('1000条新闻Feeds按需渲染，测试Listview启动和滑动性能'),
                            onTap: function () {
                                let list_view = __webpack_require__(/*! ./listview_profile.js */ "./lib/app_demo/profile/listview_profile.js");
                                widgets_1.Navigator.push(context, new material_1.MaterialPageRoute({
                                    builder: function (context) {
                                        return new list_view.ListViewProfileDemo1;
                                    }
                                }));
                            }
                        }),
                    ],
                })
            })
        });
        return widget;
    }
}
module.exports = {
    ProfileExamplesPage,
};


/***/ }),

/***/ "./lib/app_demo/profile/listview_profile.js":
/*!**************************************************!*\
  !*** ./lib/app_demo/profile/listview_profile.js ***!
  \**************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 235:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

//  MXFlutterFramework
//  Copyright 2019 The MXFlutter Authors. All rights reserved.
//
//  Use of this source code is governed by a MIT-style license that can be
//  found in the LICENSE file.
Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const mx_dart_sdk_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/mx-dart-sdk */ "@tencent/mxflutter-widgets/mx-dart-sdk");
const painting_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/painting */ "@tencent/mxflutter-widgets/painting");
const { CachedNetworkImage } = __webpack_require__(/*! @tencent/mxflutter-cached-network-image */ "../mxflutter-packages/mxflutter-cached-network-image/index.js");
const { SectionTitle } = __webpack_require__(/*! ../component/section_title.js */ "./lib/app_demo/component/section_title.js");
//
const g_max_count = 1000;
//data
let g_newsOrder = 0;
//
class ListViewProfileDemo1 extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super('ListViewDemo');
    }
    createState() {
        return new ListViewProfileDemo1State(this);
    }
}
class ListViewProfileDemo1State extends mxflutter_1.MXJSWidgetState {
    constructor() {
        super();
        this.newsArray = [];
        this.buildCount = 1;
    }
    initState() {
        super.initState();
        this.newsArray = g_newsList;
    }
    build(context) {
        g_newsOrder = 0;
        this.buildCount++;
        let widget = new material_1.Scaffold({
            appBar: new material_1.AppBar({
                title: new widgets_1.Text('网易新闻 ListViewExample'),
            }),
            body: new material_1.Scrollbar({
                child: widgets_1.ListView.builder({
                    itemCount: g_max_count,
                    itemBuilder: function (context, index) {
                        return new ListViewItem(this.newsArray[index % this.newsArray.length]);
                    }.bind(this),
                })
            })
        });
        return widget;
    }
}
class ListViewItem extends mxflutter_1.MXJSStatelessWidget {
    constructor(oneNewsMap) {
        super('ListViewItem');
        this.newsModel = oneNewsMap;
        this.index = Math.ceil(Math.random() * 10000);
    }
    hotCard(context, newsModel) {
        g_newsOrder++;
        return new widgets_1.Container({
            decoration: new painting_1.BoxDecoration({
                color: material_1.Colors.white,
                border: new painting_1.BorderDirectional({
                    bottom: new painting_1.BorderSide({
                        color: material_1.Colors.black12,
                        width: 1.0
                    })
                })
            }),
            child: new material_1.FlatButton({
                onPressed: function () {
                },
                child: new widgets_1.Container({
                    padding: painting_1.EdgeInsets.only({
                        top: 8.0,
                        bottom: 8.0
                    }),
                    child: new widgets_1.Row({
                        children: [
                            new widgets_1.Expanded({
                                flex: 1,
                                child: new widgets_1.Column({
                                    children: [
                                        new widgets_1.Container({
                                            child: new widgets_1.Text(String(g_newsOrder), {
                                                style: new mx_dart_sdk_1.TextStyle({
                                                    color: material_1.Colors.red,
                                                    fontSize: 18.0
                                                })
                                            }),
                                            alignment: painting_1.Alignment.topLeft
                                        }),
                                        newsModel.rise != null ?
                                            new widgets_1.Row({
                                                children: [
                                                    new widgets_1.Icon(new widgets_1.IconData(0xe5d8, {
                                                        fontFamily: 'MaterialIcons'
                                                    }), {
                                                        color: material_1.Colors.red,
                                                        size: 10.0
                                                    }),
                                                    new widgets_1.Text(newsModel.rise, {
                                                        style: new mx_dart_sdk_1.TextStyle({
                                                            color: material_1.Colors.red,
                                                            fontSize: 10.0
                                                        })
                                                    })
                                                ]
                                            }) :
                                            new widgets_1.Container()
                                    ]
                                })
                            }),
                            new widgets_1.Expanded({
                                flex: 6,
                                child: new widgets_1.Column({
                                    children: [
                                        new widgets_1.Container({
                                            child: new widgets_1.Text(newsModel.title, {
                                                style: new mx_dart_sdk_1.TextStyle({
                                                    fontWeight: mx_dart_sdk_1.FontWeight.bold,
                                                    fontSize: 16.0,
                                                    height: 1.1,
                                                    color: material_1.Colors.black
                                                })
                                            }),
                                            padding: painting_1.EdgeInsets.only({
                                                bottom: 10.0,
                                                right: 4.0
                                            }),
                                            alignment: painting_1.Alignment.topLeft
                                        }),
                                        newsModel.mark != null ?
                                            new widgets_1.Container({
                                                child: new widgets_1.Text(newsModel.mark, {
                                                    style: new mx_dart_sdk_1.TextStyle({
                                                        color: material_1.Colors.black54
                                                    })
                                                }),
                                                alignment: painting_1.Alignment.topLeft,
                                                padding: painting_1.EdgeInsets.only({
                                                    bottom: 8.0,
                                                    right: 4.0
                                                })
                                            }) :
                                            new widgets_1.Container(),
                                        new widgets_1.Container({
                                            child: new widgets_1.Text(newsModel.hotNum, {
                                                style: new mx_dart_sdk_1.TextStyle({
                                                    color: material_1.Colors.black54
                                                })
                                            }),
                                            alignment: painting_1.Alignment.topLeft
                                        })
                                    ]
                                })
                            }),
                            new widgets_1.Expanded({
                                flex: 3,
                                child: new widgets_1.AspectRatio({
                                    aspectRatio: 3.0 / 2.0,
                                    child: new widgets_1.ClipRRect({
                                        borderRadius: painting_1.BorderRadius.circular(4.0),
                                        child: new CachedNetworkImage({
                                            fadeInDuration: new mx_dart_sdk_1.Duration({
                                                milliseconds: 10
                                            }),
                                            fadeOutDuration: new mx_dart_sdk_1.Duration({
                                                milliseconds: 10
                                            }),
                                            imageUrl: newsModel.imgUrl,
                                            width: 124.0,
                                            height: 69.0,
                                            fit: painting_1.BoxFit.fill
                                        })
                                    }),
                                })
                            })
                        ]
                    })
                })
            })
        });
    }
    build(context) {
        try {
            return this.hotCard(context, this.newsModel);
        }
        catch (e$) {
            // let e = dart.getThrown(e$);
            // MXJSLog.log("card:build(context):  error:" + e);
            return null;
        }
    }
}
class NewsModel {
    constructor(order, title, hotNum, imgUrl, { mark, rise } = {}) {
        this.order = order;
        this.title = title;
        this.hotNum = hotNum;
        this.imgUrl = imgUrl;
        this.mark = mark;
        this.rise = rise;
    }
    static fromJSON(jsonMap) {
        let news = new NewsModel;
        news.order = String(jsonMap["order"]);
        news.title = jsonMap["title"];
        news.hotNum = String(jsonMap["votecount"]) + " 人点赞";
        news.imgUrl = jsonMap["imgsrc"];
        news.mark = jsonMap["source"];
        news.rise = jsonMap["alias"];
        return news;
    }
}
let g_newsList = [
    new NewsModel("01", "了不起的新时代，世界竞争中的中国制造", "4427 万热度", "https://pic2.zhimg.com/50/v2-710b7a6fea12a7203945b666790b7181_hd.jpg"),
    new NewsModel("02", "一个女生怎样才算见过世面？", "4157 万热度", "https://pic3.zhimg.com/50/v2-56dca99cd8718f9303d43b3015342ba7_hd.jpg", {
        rise: "3",
        mark: "所谓世面，就是世界的每一面"
    }),
    new NewsModel("03", "如果朱标没死，削藩的话，朱棣会造反吗？", "4009 万热度", "https://pic4.zhimg.com/v2-095d2b48970889b108247e6d2dd0fa6b_b.jpg"),
    new NewsModel("04", "如何编译 Linux 内核？", "3110 万热度", "https://pic3.zhimg.com/80/v2-1ea1b0cf80c85b88893b2b97a94d7e71_hd.jpg", {
        mark: "内核？呵呵"
    }),
    new NewsModel("05", "如何看待将神话故事拍成电影这件事？", "2119 万热度", "https://pic4.zhimg.com/50/v2-267b1dda62f770bd2bd13cb545117b78_hd.jpg", {
        rise: "3"
    })
];
module.exports = {
    ListViewProfileDemo1,
};


/***/ }),

/***/ "./lib/app_demo/tabbar.js":
/*!********************************!*\
  !*** ./lib/app_demo/tabbar.js ***!
  \********************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 110:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const rendering_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/rendering */ "@tencent/mxflutter-widgets/rendering");
class ExampleWidget extends mxflutter_1.MXTickerMixinWidget {
    constructor() {
        super('ExampleWidget');
    }
    createState() {
        return new PageExampleAlign();
    }
}
class PageExampleAlign extends mxflutter_1.MXTickerMixinWidgetState {
    constructor() {
        super();
    }
    initState() {
        super.initState();
        this.tabController = new material_1.TabController({
            length: 2
        });
    }
    build(context) {
        return new material_1.Scaffold({
            appBar: new material_1.AppBar({
                title: new widgets_1.Text('PageExampleAlign'),
                bottom: new material_1.TabBar({
                    controller: this.tabController,
                    tabs: [new material_1.Tab({
                            text: 'A'
                        }), new material_1.Tab({
                            text: 'B'
                        })],
                }),
                actions: [
                    new material_1.IconButton({
                        icon: new widgets_1.Icon(new widgets_1.IconData(0xe150, {
                            fontFamily: 'MaterialIcons'
                        })),
                        tooltip: 'Edit',
                        onPressed: () => {
                            this.setState(() => {
                                mxflutter_1.MXJSLog.log('edit button pressed');
                            });
                        }
                    })
                ]
            }),
            body: new material_1.TabBarView({
                controller: this.tabController,
                children: [new CounterPage('A'), new CounterPage('B')],
            }),
        });
    }
}
class CounterPage extends mxflutter_1.MXKeepAliveMixinWidget {
    constructor(title) {
        super('ExampleWidget');
        this.title = title;
    }
    createState() {
        return new CounterPageState();
    }
}
class CounterPageState extends mxflutter_1.MXKeepAliveMixinWidgetState {
    constructor(title) {
        super();
        this._counter = 0;
    }
    initState() {
        super.initState();
        mxflutter_1.MXJSLog.log('CounterPageState initState begin');
        setTimeout(() => {
            mxflutter_1.MXJSLog.log('CounterPageState setTimeout');
            this.setState(() => {
                mxflutter_1.MXJSLog.log('CounterPageState setTimeout this._counter: ' + this._counter);
                this._counter++;
                mxflutter_1.MXJSLog.log('CounterPageState setTimeout this._counter: ' + this._counter);
            });
        }, 1);
        mxflutter_1.MXJSLog.log('CounterPageState initState end');
    }
    _incrementCounter() {
        this.setState(() => {
            this._counter++;
        });
    }
    build(context) {
        return new material_1.Scaffold({
            body: new widgets_1.Center({
                child: new widgets_1.Column({
                    mainAxisAlignment: rendering_1.MainAxisAlignment.center,
                    children: [
                        new widgets_1.Text(this.widget.title),
                        new widgets_1.Text('You have pushed the button this many times:'),
                        new widgets_1.Text('' + this._counter),
                    ],
                }),
            }),
            floatingActionButton: new material_1.FloatingActionButton({
                onPressed: this._incrementCounter.bind(this),
                tooltip: 'Increment',
                child: new widgets_1.Icon(material_1.Icons.add),
            }),
        });
    }
}
module.exports = {
    ExampleWidget
};


/***/ }),

/***/ "./lib/app_demo/zhihu/global_config.js":
/*!*********************************************!*\
  !*** ./lib/app_demo/zhihu/global_config.js ***!
  \*********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 22:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

//global_config.js 正式开始，😝
Object.defineProperty(exports, "__esModule", ({ value: true }));
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const mx_dart_sdk_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/mx-dart-sdk */ "@tencent/mxflutter-widgets/mx-dart-sdk");
class GlobalConfig {
    static get themeData() {
        return new material_1.ThemeData({
            brightness: mx_dart_sdk_1.Brightness.light
        });
    }
    static get searchBackgroundColor() {
        return new mx_dart_sdk_1.Color(0xFFEEEEEE);
    }
    static get cardBackgroundColor() {
        return material_1.Colors.white;
    }
    static get fontColor() {
        return new mx_dart_sdk_1.Color(0xFF444444);
    }
}
module.exports = {
    GlobalConfig
};


/***/ }),

/***/ "./lib/app_demo/zhihu/home/article.js":
/*!********************************************!*\
  !*** ./lib/app_demo/zhihu/home/article.js ***!
  \********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 27:0-14 */
/***/ ((module) => {

//article.js 正式开始，😝
class Article {
    constructor(headUrl, user, action, time, title, mark, agreeNum, commentNum, { imgUrl } = {}) {
        this.headUrl = headUrl;
        this.user = user;
        this.action = action;
        this.time = time;
        this.title = title;
        this.mark = mark;
        this.agreeNum = agreeNum;
        this.commentNum = commentNum;
        this.imgUrl = imgUrl;
    }
}
let articleList = [
    new Article("https://pic3.zhimg.com/50/2b8be8010409012e7cdd764e1befc4d1_s.jpg", "learner", "赞同了回答", "2小时前", "在三体中，罗辑为什么会把控制权交给程心，难道他没有推测过后果吗？", "因为罗辑遵守了人类伦理。这个伦理大概就叫民主。 大刘其实是个典型的精英主义者，在他笔下...", 32, 10, {
        imgUrl: "https://pic2.zhimg.com/50/v2-710b7a6fea12a7203945b666790b7181_hd.jpg"
    }),
    new Article("https://pic4.zhimg.com/50/v2-9a3cb5d5ee4339b8cf4470ece18d404f_s.jpg", "learner", "回答了问题", "5小时前", "我的手机系统是安卓。无意间发现自己的屏幕被人监控，请问怎样才能彻底摆脱被监控的处境呢？", "检查一下你手机里是不是被人装了什么软件，把你不认识的非系统软件删掉。不会删就去找手机店里的小哥，为什么这么多人...", 38, 13),
    new Article("https://pic3.zhimg.com/50/v2-8943c20cecab028e19644cccf0f3a38b_s.jpg", "learner", "回答了问题", "7小时前", "如何评价2018年安徽省程序设计竞赛？", "带着政治任务和压力去打了比赛，所幸最后被高中生抬了一手。榜可以见另外某回答。大概经历就是前...", 38, 13, {
        imgUrl: "https://pic4.zhimg.com/v2-a7493d69f0d8f849c6345f8f693454f3_200x112.jpg"
    }),
    new Article("https://pic3.zhimg.com/50/v2-8943c20cecab028e19644cccf0f3a38b_s.jpg", "learner", "回答了问题", "7小时前", "极致的文明是什么样的？会真的像黑暗森林法则一样对其他低等生物进行屠杀吗？", "最喜欢的人物是章北海和维德但最喜欢的情节却是这一段，地球上的人承诺给他们鲜花和荣誉...", 38, 13, {
        imgUrl: "https://pic3.zhimg.com/v2-b67be50be51e2e6d6112a64528683b09_b.jpg"
    })
];
module.exports = {
    Article,
    articleList
};


/***/ }),

/***/ "./lib/app_demo/zhihu/home/ask_page.js":
/*!*********************************************!*\
  !*** ./lib/app_demo/zhihu/home/ask_page.js ***!
  \*********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 76:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

//ask_page.js 正式开始，😝
Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const mx_dart_sdk_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/mx-dart-sdk */ "@tencent/mxflutter-widgets/mx-dart-sdk");
const painting_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/painting */ "@tencent/mxflutter-widgets/painting");
let { GlobalConfig } = __webpack_require__(/*! ../../zhihu/global_config.js */ "./lib/app_demo/zhihu/global_config.js");
class AskPage extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super('AskPage');
    }
    createState() {
        return new AskPageState(this);
    }
}
class AskPageState extends mxflutter_1.MXJSWidgetState {
    build(context) {
        let widget = new material_1.MaterialApp({
            // theme: GlobalConfig.themeData,
            home: new material_1.Scaffold({
                appBar: new material_1.AppBar({
                    title: new widgets_1.Container({
                        child: new widgets_1.Row({
                            children: [
                                material_1.FlatButton.icon({
                                    onPressed: function () {
                                        widgets_1.Navigator.pop(context);
                                    },
                                    icon: new widgets_1.Icon(new widgets_1.IconData(0xe14c, {
                                        fontFamily: 'MaterialIcons'
                                    })),
                                    label: new widgets_1.Text("")
                                }),
                                new widgets_1.Expanded({
                                    child: new widgets_1.Container({
                                        child: new widgets_1.Text("提问")
                                    }),
                                }),
                                new material_1.FlatButton({
                                    onPressed: function () {
                                    },
                                    child: new widgets_1.Text("下一步", {
                                        style: new mx_dart_sdk_1.TextStyle({
                                            color: material_1.Colors.black
                                        })
                                    })
                                })
                            ]
                        })
                    })
                }),
                body: new widgets_1.SingleChildScrollView({
                    child: new widgets_1.Column({
                        children: [
                            new widgets_1.Container({
                                child: new material_1.TextField({
                                    decoration: new material_1.InputDecoration({
                                        hintText: "请输入标题",
                                        hintStyle: new mx_dart_sdk_1.TextStyle({
                                            color: material_1.Colors.black,
                                        })
                                    })
                                }),
                                margin: painting_1.EdgeInsets.all(16.0)
                            })
                        ]
                    })
                })
            })
        });
        return widget;
    }
}
module.exports = {
    AskPage
};


/***/ }),

/***/ "./lib/app_demo/zhihu/home/follow.js":
/*!*******************************************!*\
  !*** ./lib/app_demo/zhihu/home/follow.js ***!
  \*******************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 307:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

//follow.js 正式开始，😝
Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const mx_dart_sdk_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/mx-dart-sdk */ "@tencent/mxflutter-widgets/mx-dart-sdk");
const painting_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/painting */ "@tencent/mxflutter-widgets/painting");
let { GlobalConfig } = __webpack_require__(/*! ../global_config.js */ "./lib/app_demo/zhihu/global_config.js");
let { articleList } = __webpack_require__(/*! ./article.js */ "./lib/app_demo/zhihu/home/article.js");
let { ReplyPage } = __webpack_require__(/*! ./reply_page.js */ "./lib/app_demo/zhihu/home/reply_page.js");
class Follow extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super("Follow");
    }
    createState() {
        return new FollowState(this);
    }
}
class FollowState extends mxflutter_1.MXJSWidgetState {
    wordsCard(context, article) {
        let markWidget;
        if (article.imgUrl == null) {
            markWidget = new widgets_1.Text(article.mark, {
                style: new mx_dart_sdk_1.TextStyle({
                    height: 1.3,
                    color: GlobalConfig.fontColor
                })
            });
        }
        else {
            markWidget = new widgets_1.Row({
                children: [
                    new widgets_1.Expanded({
                        flex: 2,
                        child: new widgets_1.Container({
                            child: new widgets_1.Text(article.mark, {
                                style: new mx_dart_sdk_1.TextStyle({
                                    height: 1.3,
                                    color: GlobalConfig.fontColor
                                })
                            })
                        })
                    }),
                    new widgets_1.Expanded({
                        flex: 1,
                        child: new widgets_1.AspectRatio({
                            aspectRatio: 3.0 / 2.0,
                            child: new widgets_1.Container({
                                foregroundDecoration: new painting_1.BoxDecoration({
                                    image: new painting_1.DecorationImage({
                                        image: new painting_1.NetworkImage(article.imgUrl),
                                        centerSlice: mx_dart_sdk_1.Rect.fromLTRB(270.0, 180.0, 1360.0, 730.0)
                                    }),
                                    borderRadius: painting_1.BorderRadius.all(mx_dart_sdk_1.Radius.circular(6.0))
                                })
                            })
                        })
                    })
                ]
            });
        }
        return new widgets_1.Container({
            color: new mx_dart_sdk_1.Color(0xFFFFFFFF),
            margin: painting_1.EdgeInsets.only({
                top: 5.0,
                bottom: 5.0
            }),
            child: new material_1.FlatButton({
                onPressed: function () {
                    widgets_1.Navigator.push(context, new material_1.MaterialPageRoute({
                        builder: function (context) {
                            return new ReplyPage;
                        }
                    }));
                },
                child: new widgets_1.Column({
                    children: [
                        new widgets_1.Container({
                            child: new widgets_1.Row({
                                children: [
                                    new widgets_1.Container({
                                        child: new material_1.CircleAvatar({
                                            backgroundImage: new painting_1.NetworkImage(article.headUrl),
                                            radius: 11.0
                                        })
                                    }),
                                    new widgets_1.Text(" " + article.user + " " + article.action + " . " + article.time, {
                                        style: new mx_dart_sdk_1.TextStyle({
                                            color: GlobalConfig.fontColor
                                        })
                                    })
                                ]
                            }),
                            padding: painting_1.EdgeInsets.only({
                                top: 10.0
                            })
                        }),
                        new widgets_1.Container({
                            child: new widgets_1.Text(article.title, {
                                style: new mx_dart_sdk_1.TextStyle({
                                    fontWeight: mx_dart_sdk_1.FontWeight.bold,
                                    fontSize: 16.0,
                                    height: 1.3,
                                    color: material_1.Colors.black
                                })
                            }),
                            margin: painting_1.EdgeInsets.only({
                                top: 6.0,
                                bottom: 2.0
                            }),
                            alignment: painting_1.Alignment.topLeft
                        }),
                        new widgets_1.Container({
                            child: markWidget,
                            margin: painting_1.EdgeInsets.only({
                                top: 6.
                            }),
                            alignment: painting_1.Alignment.topLeft
                        }),
                        new widgets_1.Container({
                            child: new widgets_1.Row({
                                children: [
                                    new widgets_1.Expanded({
                                        child: new widgets_1.Text(article.agreeNum.toString() + " 赞同 · " + article.commentNum.toString() + "评论", {
                                            style: new mx_dart_sdk_1.TextStyle({
                                                color: GlobalConfig.fontColor
                                            })
                                        })
                                    }),
                                    new material_1.PopupMenuButton({
                                        icon: new widgets_1.Icon(new widgets_1.IconData(0xe260, {
                                            fontFamily: 'MaterialIcons'
                                        }), {
                                            color: GlobalConfig.fontColor
                                        }),
                                        itemBuilder: function (context) {
                                            let list = [
                                                new material_1.PopupMenuItem({
                                                    value: '选项一的值',
                                                    child: new widgets_1.Text('屏蔽这个问题')
                                                }),
                                                new material_1.PopupMenuItem({
                                                    value: '选项二的值',
                                                    child: new widgets_1.Text('取消关注 learner')
                                                }),
                                                new material_1.PopupMenuItem({
                                                    value: '选项三的值',
                                                    child: new widgets_1.Text("举报")
                                                })
                                            ];
                                            return list;
                                        }
                                    })
                                ]
                            }),
                            padding: painting_1.EdgeInsets.only()
                        })
                    ]
                })
            })
        });
    }
    billboard(context) {
        return new widgets_1.Container({
            margin: painting_1.EdgeInsets.only({
                top: 5.0,
                bottom: 5.0
            }),
            color: GlobalConfig.cardBackgroundColor,
            child: new material_1.FlatButton({
                onPressed: function () {
                },
                child: new widgets_1.Column({
                    children: [
                        new widgets_1.Container({
                            child: new widgets_1.Row({
                                children: [
                                    new widgets_1.Container({
                                        child: new material_1.CircleAvatar({
                                            backgroundImage: new painting_1.NetworkImage("https://pic1.zhimg.com/50/v2-0c9de2012cc4c5e8b01657d96da35534_s.jpg"),
                                            radius: 11.0
                                        })
                                    }),
                                    new widgets_1.Text("  对啊网", {
                                        style: new mx_dart_sdk_1.TextStyle({
                                            color: GlobalConfig.fontColor
                                        })
                                    })
                                ]
                            }),
                            padding: painting_1.EdgeInsets.only({
                                top: 10.0
                            })
                        }),
                        new widgets_1.Container({
                            child: new widgets_1.Text("考过CPA，非名牌大学也能进名企", {
                                style: new mx_dart_sdk_1.TextStyle({
                                    fontWeight: mx_dart_sdk_1.FontWeight.bold,
                                    fontSize: 16.0,
                                    height: 1.3,
                                    color: GlobalConfig.fontColor
                                })
                            }),
                            margin: painting_1.EdgeInsets.only({
                                top: 6.0,
                                bottom: 2.0
                            }),
                            alignment: painting_1.Alignment.topLeft
                        }),
                        new widgets_1.Container({
                            child: new widgets_1.AspectRatio({
                                aspectRatio: 3.0 / 1.0,
                                child: new widgets_1.Container({
                                    foregroundDecoration: new painting_1.BoxDecoration({
                                        image: new painting_1.DecorationImage({
                                            image: new painting_1.NetworkImage("https://pic2.zhimg.com/50/v2-6416ef6d3181117a0177275286fac8f3_hd.jpg"),
                                            centerSlice: mx_dart_sdk_1.Rect.fromLTRB(270.0, 180.0, 1360.0, 730.0),
                                        }),
                                        borderRadius: painting_1.BorderRadius.all(mx_dart_sdk_1.Radius.circular(6.0))
                                    })
                                })
                            }),
                            margin: painting_1.EdgeInsets.only({
                                top: 6.0,
                                bottom: 14.0
                            }),
                            alignment: painting_1.Alignment.topLeft
                        }),
                        new widgets_1.Container({
                            child: new widgets_1.Text("还在羡慕别人的好工作？免费领取价值1980元的注册会计师课程，为自己充电！", {
                                style: new mx_dart_sdk_1.TextStyle({
                                    height: 1.3,
                                    color: GlobalConfig.fontColor
                                })
                            }),
                            padding: painting_1.EdgeInsets.only({
                                bottom: 8.0
                            })
                        }),
                        new widgets_1.Container({
                            child: new widgets_1.Row({
                                children: [
                                    new widgets_1.Container({
                                        child: new widgets_1.Text("广告", {
                                            style: new mx_dart_sdk_1.TextStyle({
                                                fontSize: 10.0,
                                                color: GlobalConfig.fontColor
                                            })
                                        }),
                                        decoration: new painting_1.BoxDecoration({
                                            border: painting_1.Border.all({
                                                color: GlobalConfig.fontColor
                                            }),
                                            borderRadius: painting_1.BorderRadius.all(mx_dart_sdk_1.Radius.circular(2.0))
                                        }),
                                        padding: painting_1.EdgeInsets.only({
                                            top: 2.0,
                                            bottom: 2.0,
                                            left: 3.0,
                                            right: 3.0
                                        })
                                    }),
                                    new widgets_1.Expanded({
                                        child: new widgets_1.Text("  查看详情", {
                                            style: new mx_dart_sdk_1.TextStyle({
                                                color: GlobalConfig.fontColor
                                            })
                                        })
                                    }),
                                    new widgets_1.Icon(new widgets_1.IconData(0xe14c, {
                                        fontFamily: 'MaterialIcons'
                                    }), {
                                        color: GlobalConfig.fontColor
                                    })
                                ]
                            }),
                            padding: painting_1.EdgeInsets.only({
                                bottom: 10.0
                            }),
                        })
                    ]
                })
            })
        });
    }
    build(context) {
        let widget = new widgets_1.SingleChildScrollView({
            child: new widgets_1.Container({
                margin: painting_1.EdgeInsets.only({
                    top: 5.0
                }),
                child: new widgets_1.Column({
                    children: [
                        this.wordsCard(context, articleList[0]),
                        this.wordsCard(context, articleList[1]),
                        this.wordsCard(context, articleList[2]),
                        this.billboard(context),
                        this.wordsCard(context, articleList[3])
                    ]
                })
            })
        });
        return widget;
    }
}
module.exports = {
    Follow
};


/***/ }),

/***/ "./lib/app_demo/zhihu/home/home_page.js":
/*!**********************************************!*\
  !*** ./lib/app_demo/zhihu/home/home_page.js ***!
  \**********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 131:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

//HomePage.js 正式开始，😝
Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const mx_dart_sdk_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/mx-dart-sdk */ "@tencent/mxflutter-widgets/mx-dart-sdk");
const painting_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/painting */ "@tencent/mxflutter-widgets/painting");
const foundation_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/foundation */ "@tencent/mxflutter-widgets/foundation");
let { GlobalConfig } = __webpack_require__(/*! ../global_config.js */ "./lib/app_demo/zhihu/global_config.js");
let { Follow } = __webpack_require__(/*! ./follow.js */ "./lib/app_demo/zhihu/home/follow.js");
let { Recommend } = __webpack_require__(/*! ./recommend.js */ "./lib/app_demo/zhihu/home/recommend.js");
let { Hot } = __webpack_require__(/*! ./hot.js */ "./lib/app_demo/zhihu/home/hot.js");
let { SearchPage } = __webpack_require__(/*! ./search_page.js */ "./lib/app_demo/zhihu/home/search_page.js");
let { AskPage } = __webpack_require__(/*! ./ask_page.js */ "./lib/app_demo/zhihu/home/ask_page.js");
class HomePage extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super("HomePage", {
            key: new foundation_1.Key("HomePage")
        });
    }
    createState() {
        return new HomePageState(this);
    }
}
class HomePageState extends mxflutter_1.MXJSWidgetState {
    barSearch(context) {
        return new widgets_1.Container({
            child: new widgets_1.Row({
                children: [
                    new widgets_1.Expanded({
                        child: material_1.FlatButton.icon({
                            onPressed: function () {
                                widgets_1.Navigator.push(context, new material_1.MaterialPageRoute({
                                    builder: function (context) {
                                        return new SearchPage;
                                    }
                                }));
                            },
                            icon: new widgets_1.Icon(new widgets_1.IconData(0xe8b6, {
                                fontFamily: 'MaterialIcons'
                            }), {
                                color: GlobalConfig.fontColor,
                                size: 16.0
                            }),
                            label: new widgets_1.Text("坚果R1摄像头损坏", {
                                style: new mx_dart_sdk_1.TextStyle({
                                    color: GlobalConfig.fontColor
                                })
                            })
                        })
                    }),
                    new widgets_1.Container({
                        decoration: new painting_1.BoxDecoration({
                            border: new painting_1.BorderDirectional({
                                start: new painting_1.BorderSide({
                                    color: GlobalConfig.fontColor,
                                    width: 1.0
                                })
                            })
                        }),
                        height: 14.0,
                        width: 1.0
                    }),
                    new widgets_1.Container({
                        child: material_1.FlatButton.icon({
                            onPressed: function () {
                                widgets_1.Navigator.push(context, new material_1.MaterialPageRoute({
                                    builder: function (context) {
                                        return new AskPage;
                                    }
                                }));
                            },
                            icon: new widgets_1.Icon(new widgets_1.IconData(0xe22b, {
                                fontFamily: 'MaterialIcons'
                            }), {
                                color: GlobalConfig.fontColor,
                                size: 16.0
                            }),
                            label: new widgets_1.Text("提问", {
                                style: new mx_dart_sdk_1.TextStyle({
                                    color: GlobalConfig.fontColor
                                })
                            })
                        })
                    })
                ]
            }),
            decoration: new painting_1.BoxDecoration({
                borderRadius: painting_1.BorderRadius.all(mx_dart_sdk_1.Radius.circular(4.0)),
                color: GlobalConfig.searchBackgroundColor
            })
        });
    }
    build(context) {
        let widget = new material_1.DefaultTabController({
            length: 3,
            child: new material_1.Scaffold({
                appBar: new material_1.AppBar({
                    title: this.barSearch(context),
                    bottom: new material_1.TabBar({
                        labelColor: material_1.Colors.blue,
                        indicatorColor: material_1.Colors.blue,
                        unselectedLabelColor: material_1.Colors.black,
                        tabs: [
                            new material_1.Tab({
                                text: "关注"
                            }),
                            new material_1.Tab({
                                text: "推荐"
                            }),
                            new material_1.Tab({
                                text: "热榜"
                            })
                        ]
                    }),
                    backgroundColor: material_1.Colors.white
                }),
                body: new material_1.TabBarView({
                    children: [
                        new Follow(),
                        new Recommend(),
                        new Hot()
                    ]
                })
            })
        });
        return widget;
    }
}
module.exports = {
    HomePage
};


/***/ }),

/***/ "./lib/app_demo/zhihu/home/hot.js":
/*!****************************************!*\
  !*** ./lib/app_demo/zhihu/home/hot.js ***!
  \****************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 166:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

//hot.js 正式开始，😝
Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const mx_dart_sdk_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/mx-dart-sdk */ "@tencent/mxflutter-widgets/mx-dart-sdk");
const painting_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/painting */ "@tencent/mxflutter-widgets/painting");
let { GlobalConfig } = __webpack_require__(/*! ../global_config.js */ "./lib/app_demo/zhihu/global_config.js");
let { questionList } = __webpack_require__(/*! ./question.js */ "./lib/app_demo/zhihu/home/question.js");
let { QuestionPage } = __webpack_require__(/*! ./question_page.js */ "./lib/app_demo/zhihu/home/question_page.js");
class Hot extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super("Hot");
    }
    createState() {
        return new HotState(this);
    }
}
class HotState extends mxflutter_1.MXJSWidgetState {
    hotCard(context, question) {
        return new widgets_1.Container({
            decoration: new painting_1.BoxDecoration({
                color: GlobalConfig.cardBackgroundColor,
                border: new painting_1.BorderDirectional({
                    bottom: new painting_1.BorderSide({
                        color: material_1.Colors.black12,
                        width: 1.0
                    })
                })
            }),
            child: new material_1.FlatButton({
                onPressed: function () {
                    widgets_1.Navigator.push(context, new material_1.MaterialPageRoute({
                        builder: function (context) {
                            return new QuestionPage;
                        }
                    }));
                },
                child: new widgets_1.Container({
                    padding: painting_1.EdgeInsets.only({
                        top: 8.0,
                        bottom: 8.0
                    }),
                    child: new widgets_1.Row({
                        children: [
                            new widgets_1.Expanded({
                                flex: 1,
                                child: new widgets_1.Column({
                                    children: [
                                        new widgets_1.Container({
                                            child: new widgets_1.Text(question.order, {
                                                style: new mx_dart_sdk_1.TextStyle({
                                                    color: question.order <= "03" ? material_1.Colors.red : material_1.Colors.yellow,
                                                    fontSize: 18.0
                                                })
                                            }),
                                            alignment: painting_1.Alignment.topLeft
                                        }),
                                        question.rise != null ?
                                            new widgets_1.Row({
                                                children: [
                                                    new widgets_1.Icon(new widgets_1.IconData(0xe5d8, {
                                                        fontFamily: 'MaterialIcons'
                                                    }), {
                                                        color: material_1.Colors.red,
                                                        size: 10.0
                                                    }),
                                                    new widgets_1.Text(question.rise, {
                                                        style: new mx_dart_sdk_1.TextStyle({
                                                            color: material_1.Colors.red,
                                                            fontSize: 10.0
                                                        })
                                                    })
                                                ]
                                            }) :
                                            new widgets_1.Container()
                                    ]
                                })
                            }),
                            new widgets_1.Expanded({
                                flex: 6,
                                child: new widgets_1.Column({
                                    children: [
                                        new widgets_1.Container({
                                            child: new widgets_1.Text(question.title, {
                                                style: new mx_dart_sdk_1.TextStyle({
                                                    fontWeight: mx_dart_sdk_1.FontWeight.bold,
                                                    fontSize: 16.0,
                                                    height: 1.1,
                                                    color: material_1.Colors.black
                                                })
                                            }),
                                            padding: painting_1.EdgeInsets.only({
                                                bottom: 10.0,
                                                right: 4.0
                                            }),
                                            alignment: painting_1.Alignment.topLeft
                                        }),
                                        question.mark != null ?
                                            new widgets_1.Container({
                                                child: new widgets_1.Text(question.mark, {
                                                    style: new mx_dart_sdk_1.TextStyle({
                                                        color: GlobalConfig.fontColor
                                                    })
                                                }),
                                                alignment: painting_1.Alignment.topLeft,
                                                padding: painting_1.EdgeInsets.only({
                                                    bottom: 8.0,
                                                    right: 4.0
                                                })
                                            }) :
                                            new widgets_1.Container(),
                                        new widgets_1.Container({
                                            child: new widgets_1.Text(question.hotNum, {
                                                style: new mx_dart_sdk_1.TextStyle({
                                                    color: GlobalConfig.fontColor
                                                })
                                            }),
                                            alignment: painting_1.Alignment.topLeft
                                        })
                                    ]
                                })
                            }),
                            new widgets_1.Expanded({
                                flex: 3,
                                child: new widgets_1.AspectRatio({
                                    aspectRatio: 3.0 / 2.0,
                                    child: new widgets_1.Container({
                                        foregroundDecoration: new painting_1.BoxDecoration({
                                            image: new painting_1.DecorationImage({
                                                image: new painting_1.NetworkImage(question.imgUrl),
                                                centerSlice: mx_dart_sdk_1.Rect.fromLTRB(270.0, 180.0, 1360.0, 730.0)
                                            }),
                                            borderRadius: painting_1.BorderRadius.all(mx_dart_sdk_1.Radius.circular(6.0))
                                        })
                                    })
                                })
                            })
                        ]
                    })
                })
            })
        });
    }
    build(context) {
        let widget = new widgets_1.SingleChildScrollView({
            child: new widgets_1.Container({
                margin: painting_1.EdgeInsets.only({
                    top: 5.0
                }),
                child: new widgets_1.Column({
                    children: [
                        this.hotCard(context, questionList[0]),
                        this.hotCard(context, questionList[1]),
                        this.hotCard(context, questionList[2]),
                        this.hotCard(context, questionList[3]),
                        this.hotCard(context, questionList[4])
                    ]
                })
            })
        });
        return widget;
    }
}
module.exports = {
    Hot
};


/***/ }),

/***/ "./lib/app_demo/zhihu/home/question.js":
/*!*********************************************!*\
  !*** ./lib/app_demo/zhihu/home/question.js ***!
  \*********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 26:0-14 */
/***/ ((module) => {

//question.js 正式开始，😝
class Question {
    constructor(order, title, hotNum, imgUrl, { mark, rise } = {}) {
        this.order = order;
        this.title = title;
        this.hotNum = hotNum;
        this.imgUrl = imgUrl;
        this.mark = mark;
        this.rise = rise;
    }
}
let questionList = [
    new Question("01", "了不起的新时代，世界竞争中的中国制造", "4427 万热度", "https://pic2.zhimg.com/50/v2-710b7a6fea12a7203945b666790b7181_hd.jpg"),
    new Question("02", "一个女生怎样才算见过世面？", "4157 万热度", "https://pic3.zhimg.com/50/v2-56dca99cd8718f9303d43b3015342ba7_hd.jpg", {
        rise: "3",
        mark: "所谓世面，就是世界的每一面"
    }),
    new Question("03", "如果朱标没死，削藩的话，朱棣会造反吗？", "4009 万热度", "https://pic4.zhimg.com/v2-095d2b48970889b108247e6d2dd0fa6b_b.jpg"),
    new Question("04", "如何编译 Linux 内核？", "3110 万热度", "https://pic3.zhimg.com/80/v2-1ea1b0cf80c85b88893b2b97a94d7e71_hd.jpg", {
        mark: "内核？呵呵"
    }),
    new Question("05", "如何看待将神话故事拍成电影这件事？", "2119 万热度", "https://pic4.zhimg.com/50/v2-267b1dda62f770bd2bd13cb545117b78_hd.jpg", {
        rise: "3"
    })
];
module.exports = {
    Question,
    questionList
};


/***/ }),

/***/ "./lib/app_demo/zhihu/home/question_page.js":
/*!**************************************************!*\
  !*** ./lib/app_demo/zhihu/home/question_page.js ***!
  \**************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 309:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

//question_page.js 正式开始，😝
Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const mx_dart_sdk_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/mx-dart-sdk */ "@tencent/mxflutter-widgets/mx-dart-sdk");
const painting_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/painting */ "@tencent/mxflutter-widgets/painting");
const rendering_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/rendering */ "@tencent/mxflutter-widgets/rendering");
let { GlobalConfig } = __webpack_require__(/*! ../global_config.js */ "./lib/app_demo/zhihu/global_config.js");
let { ReplyPage, Common } = __webpack_require__(/*! ./reply_page.js */ "./lib/app_demo/zhihu/home/reply_page.js");
class QuestionPage extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super("QuestionPage");
    }
    createState() {
        return new QuestionPageState(this);
    }
}
class QuestionPageState extends mxflutter_1.MXJSWidgetState {
    build(context) {
        let widget = new material_1.MaterialApp({
            // theme: GlobalConfig.themeData,
            home: new material_1.Scaffold({
                appBar: new material_1.AppBar({
                    title: Common.searchInput(context)
                }),
                body: new widgets_1.SingleChildScrollView({
                    child: new widgets_1.Column({
                        children: [
                            new widgets_1.Container({
                                child: new widgets_1.Row({
                                    children: [
                                        new widgets_1.Container({
                                            child: new material_1.FlatButton({
                                                onPressed: function () { },
                                                child: new widgets_1.Text("物理学"),
                                                color: GlobalConfig.searchBackgroundColor
                                            }),
                                            height: 30.0,
                                            margin: painting_1.EdgeInsets.only({
                                                right: 8.0
                                            })
                                        }),
                                        new widgets_1.Container({
                                            child: new material_1.FlatButton({
                                                onPressed: function () { },
                                                child: new widgets_1.Text("三体(书籍)"),
                                                color: GlobalConfig.searchBackgroundColor
                                            }),
                                            height: 30.0,
                                            margin: painting_1.EdgeInsets.only({
                                                right: 8.0
                                            })
                                        }),
                                        new widgets_1.Container({
                                            child: new material_1.FlatButton({
                                                onPressed: function () { },
                                                child: new widgets_1.Text("脑洞(网络用语)"),
                                                color: GlobalConfig.searchBackgroundColor
                                            }),
                                            height: 30.0
                                        })
                                    ]
                                }),
                                padding: painting_1.EdgeInsets.only({
                                    left: 16.0,
                                    top: 8.0,
                                    bottom: 8.0,
                                    right: 16.0
                                }),
                                color: GlobalConfig.cardBackgroundColor
                            }),
                            new widgets_1.Container({
                                child: new widgets_1.Text("《三体》里的水滴有可能被制造出来吗?", {
                                    style: new mx_dart_sdk_1.TextStyle({
                                        fontWeight: mx_dart_sdk_1.FontWeight.bold,
                                        fontSize: 18.0,
                                        height: 1.3,
                                        color: material_1.Colors.black
                                    })
                                }),
                                padding: painting_1.EdgeInsets.only({
                                    left: 16.0,
                                    bottom: 8.0,
                                    right: 16.0
                                }),
                                alignment: painting_1.Alignment.topLeft,
                                color: GlobalConfig.cardBackgroundColor
                            }),
                            new widgets_1.Container({
                                child: new widgets_1.Text("如果，仅考虑其延长强相互作用力的特性，而不考虑其直角转弯的特性，那么水滴能被制造出来吗？换句话说，强相互作用力能够以影响微观物理量的方式延长吗？", {
                                    style: new mx_dart_sdk_1.TextStyle({
                                        height: 1.4,
                                        fontSize: 16.0,
                                        color: GlobalConfig.fontColor
                                    }),
                                    textAlign: mx_dart_sdk_1.TextAlign.start
                                }),
                                padding: painting_1.EdgeInsets.only({
                                    left: 16.0,
                                    right: 16.0,
                                    bottom: 8.0
                                }),
                                decoration: new painting_1.BoxDecoration({
                                    border: new painting_1.BorderDirectional({
                                        bottom: new painting_1.BorderSide({
                                            color: material_1.Colors.black
                                        })
                                    }),
                                    color: GlobalConfig.cardBackgroundColor
                                })
                            }),
                            new widgets_1.Container({
                                child: new widgets_1.Row({
                                    children: [
                                        new widgets_1.Expanded({
                                            flex: 1,
                                            child: new widgets_1.Container({
                                                child: material_1.FlatButton.icon({
                                                    onPressed: function () { },
                                                    icon: new widgets_1.Icon(new widgets_1.IconData(0xe7f0, {
                                                        fontFamily: 'MaterialIcons'
                                                    })),
                                                    label: new widgets_1.Text("邀请回答"),
                                                    textTheme: material_1.ButtonTextTheme.accent
                                                }),
                                                decoration: new painting_1.BoxDecoration({
                                                    border: new painting_1.BorderDirectional({
                                                        end: new painting_1.BorderSide({
                                                            color: material_1.Colors.black
                                                        })
                                                    })
                                                })
                                            })
                                        }),
                                        new widgets_1.Expanded({
                                            flex: 1,
                                            child: new widgets_1.Container({
                                                child: material_1.FlatButton.icon({
                                                    onPressed: function () { },
                                                    icon: new widgets_1.Icon(new widgets_1.IconData(0xe3ae, {
                                                        fontFamily: 'MaterialIcons'
                                                    })),
                                                    label: new widgets_1.Text("写回答"),
                                                    textTheme: material_1.ButtonTextTheme.accent
                                                }),
                                                decoration: new painting_1.BoxDecoration({
                                                    border: new painting_1.BorderDirectional({
                                                        end: new painting_1.BorderSide({
                                                            color: material_1.Colors.black
                                                        })
                                                    })
                                                })
                                            })
                                        })
                                    ]
                                }),
                                decoration: new painting_1.BoxDecoration({
                                    color: GlobalConfig.cardBackgroundColor
                                })
                            }),
                            new widgets_1.Container({
                                margin: painting_1.EdgeInsets.only({
                                    top: 4.0,
                                    bottom: 4.0
                                }),
                                child: new widgets_1.Row({
                                    children: [
                                        new widgets_1.Expanded({
                                            child: new widgets_1.Container({
                                                child: new widgets_1.Text("173个回答", {
                                                    style: new mx_dart_sdk_1.TextStyle({
                                                        color: GlobalConfig.fontColor
                                                    })
                                                }),
                                                margin: painting_1.EdgeInsets.only({
                                                    left: 16.0
                                                })
                                            })
                                        }),
                                        new widgets_1.Expanded({
                                            child: new widgets_1.Container({
                                                child: new material_1.PopupMenuButton({
                                                    itemBuilder: function (context) {
                                                        let list = [
                                                            new material_1.PopupMenuItem({
                                                                value: '质量',
                                                                child: new widgets_1.Container({
                                                                    child: new widgets_1.Row({
                                                                        children: [
                                                                            new widgets_1.Text('按质量排序'),
                                                                            new widgets_1.Icon(new widgets_1.IconData(0xe5ca, {
                                                                                fontFamily: 'MaterialIcons'
                                                                            }), {
                                                                                color: material_1.Colors.blue
                                                                            })
                                                                        ]
                                                                    })
                                                                })
                                                            }),
                                                            new material_1.PopupMenuItem({
                                                                value: '时间',
                                                                child: new widgets_1.Text('按时间排序')
                                                            })
                                                        ];
                                                        return list;
                                                    },
                                                    child: new widgets_1.Container({
                                                        child: new widgets_1.Row({
                                                            mainAxisAlignment: rendering_1.MainAxisAlignment.end,
                                                            children: [
                                                                new widgets_1.Text("按质量排序", {
                                                                    style: new mx_dart_sdk_1.TextStyle({
                                                                        color: GlobalConfig.fontColor
                                                                    })
                                                                }),
                                                                new widgets_1.Icon(new widgets_1.IconData(0xe313, {
                                                                    fontFamily: 'MaterialIcons'
                                                                }), {
                                                                    color: GlobalConfig.fontColor
                                                                })
                                                            ]
                                                        })
                                                    })
                                                }),
                                                alignment: painting_1.Alignment.centerRight
                                            })
                                        })
                                    ]
                                })
                            }),
                            new widgets_1.Container({
                                color: GlobalConfig.cardBackgroundColor,
                                margin: painting_1.EdgeInsets.only({
                                    bottom: 5.0
                                }),
                                child: new material_1.FlatButton({
                                    onPressed: function () {
                                        widgets_1.Navigator.push(context, new material_1.MaterialPageRoute({
                                            builder: function (context) {
                                                return new ReplyPage;
                                            }
                                        }));
                                    },
                                    child: new widgets_1.Column({
                                        children: [
                                            new widgets_1.Container({
                                                child: new widgets_1.Row({
                                                    children: [
                                                        new widgets_1.Container({
                                                            child: new material_1.CircleAvatar({
                                                                backgroundImage: new painting_1.NetworkImage("https://pic3.zhimg.com/fc4c1cb34c2901a1a8c05488bbd76fa2_xs.jpg"),
                                                                radius: 11.0
                                                            })
                                                        }),
                                                        new widgets_1.Text(" 游牧由", {
                                                            style: new mx_dart_sdk_1.TextStyle({
                                                                color: GlobalConfig.fontColor
                                                            })
                                                        })
                                                    ]
                                                }),
                                                padding: painting_1.EdgeInsets.only({
                                                    top: 10.0
                                                })
                                            }),
                                            new widgets_1.Container({
                                                child: new widgets_1.Text("第一，几年前我跟一个985211级别大学的物理类学科教授聊过这个问题。他很严肃的表示，使用强互作用力为工具在原子角度加工出这种水平的材料，对人类目前的物理...", {
                                                    style: new mx_dart_sdk_1.TextStyle({
                                                        height: 1.3,
                                                        color: GlobalConfig.fontColor
                                                    })
                                                }),
                                                margin: painting_1.EdgeInsets.only({
                                                    top: 6.0,
                                                    bottom: 14.0
                                                }),
                                                alignment: painting_1.Alignment.topLeft
                                            }),
                                            new widgets_1.Container({
                                                child: new widgets_1.Row({
                                                    children: [
                                                        new widgets_1.Expanded({
                                                            child: new widgets_1.Text("1K 赞同 · 262 评论 · 10 天前", {
                                                                style: new mx_dart_sdk_1.TextStyle({
                                                                    color: GlobalConfig.fontColor
                                                                })
                                                            })
                                                        })
                                                    ]
                                                }),
                                                padding: painting_1.EdgeInsets.only({
                                                    bottom: 10.0
                                                })
                                            })
                                        ]
                                    })
                                })
                            })
                        ]
                    })
                })
            }),
        });
        return widget;
    }
}
module.exports = {
    QuestionPage
};


/***/ }),

/***/ "./lib/app_demo/zhihu/home/recommend.js":
/*!**********************************************!*\
  !*** ./lib/app_demo/zhihu/home/recommend.js ***!
  \**********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 145:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

//recommend.js 正式开始，😝
Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const mx_dart_sdk_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/mx-dart-sdk */ "@tencent/mxflutter-widgets/mx-dart-sdk");
const painting_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/painting */ "@tencent/mxflutter-widgets/painting");
let { GlobalConfig } = __webpack_require__(/*! ../global_config.js */ "./lib/app_demo/zhihu/global_config.js");
let { articleList } = __webpack_require__(/*! ./article.js */ "./lib/app_demo/zhihu/home/article.js");
let { ReplyPage } = __webpack_require__(/*! ./reply_page.js */ "./lib/app_demo/zhihu/home/reply_page.js");
class Recommend extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super("Recommend");
    }
    createState() {
        return new RecommendState(this);
    }
}
class RecommendState extends mxflutter_1.MXJSWidgetState {
    commonCard(context, article) {
        let markWidget;
        if (article.imgUrl == null) {
            markWidget = new widgets_1.Text(article.user + " :  " + article.mark, {
                style: new mx_dart_sdk_1.TextStyle({
                    height: 1.3,
                    color: GlobalConfig.fontColor
                })
            });
        }
        else {
            markWidget = new widgets_1.Row({
                children: [
                    new widgets_1.Expanded({
                        flex: 2,
                        child: new widgets_1.Container({
                            child: new widgets_1.Text(article.user + " :  " + article.mark, {
                                style: new mx_dart_sdk_1.TextStyle({
                                    height: 1.3,
                                    color: GlobalConfig.fontColor
                                })
                            })
                        })
                    }),
                    new widgets_1.Expanded({
                        flex: 1,
                        child: new widgets_1.AspectRatio({
                            aspectRatio: 3.0 / 2.0,
                            child: new widgets_1.Container({
                                foregroundDecoration: new painting_1.BoxDecoration({
                                    image: new painting_1.DecorationImage({
                                        image: new painting_1.NetworkImage(article.imgUrl),
                                        centerSlice: mx_dart_sdk_1.Rect.fromLTRB(270.0, 180.0, 1360.0, 730.0)
                                    }),
                                    borderRadius: painting_1.BorderRadius.all(mx_dart_sdk_1.Radius.circular(6.0))
                                })
                            })
                        })
                    })
                ]
            });
        }
        return new widgets_1.Container({
            color: GlobalConfig.cardBackgroundColor,
            margin: painting_1.EdgeInsets.only({
                top: 5.0,
                bottom: 5.0
            }),
            child: new material_1.FlatButton({
                onPressed: function () {
                    widgets_1.Navigator.push(context, new material_1.MaterialPageRoute({
                        builder: function (context) {
                            return new ReplyPage;
                        }
                    }));
                },
                child: new widgets_1.Column({
                    children: [
                        new widgets_1.Container({
                            child: new widgets_1.Text(article.title, {
                                style: new mx_dart_sdk_1.TextStyle({
                                    fontWeight: mx_dart_sdk_1.FontWeight.bold,
                                    fontSize: 16.0,
                                    height: 1.3,
                                    color: material_1.Colors.black
                                })
                            }),
                            margin: painting_1.EdgeInsets.only({
                                top: 6.0,
                                bottom: 2.0
                            }),
                            alignment: painting_1.Alignment.topLeft
                        }),
                        new widgets_1.Container({
                            child: markWidget,
                            margin: painting_1.EdgeInsets.only({
                                top: 6.0,
                                bottom: 14.0
                            }),
                            alignment: painting_1.Alignment.topLeft
                        }),
                        new widgets_1.Container({
                            child: new widgets_1.Row({
                                children: [
                                    new widgets_1.Expanded({
                                        child: new widgets_1.Text(article.agreeNum.toString() + " 赞同 · " + article.commentNum.toString() + "评论", {
                                            style: new mx_dart_sdk_1.TextStyle({
                                                color: GlobalConfig.fontColor
                                            })
                                        })
                                    }),
                                    new widgets_1.Icon(new widgets_1.IconData(0xe260, {
                                        fontFamily: 'MaterialIcons'
                                    }), {
                                        color: GlobalConfig.fontColor
                                    })
                                ]
                            }),
                            padding: painting_1.EdgeInsets.only({
                                bottom: 10.0
                            })
                        })
                    ]
                })
            })
        });
    }
    build(context) {
        let widget = new widgets_1.SingleChildScrollView({
            child: new widgets_1.Container({
                margin: painting_1.EdgeInsets.only({
                    top: 5.0
                }),
                child: new widgets_1.Column({
                    children: [
                        this.commonCard(context, articleList[0]),
                        this.commonCard(context, articleList[1])
                    ]
                })
            })
        });
        return widget;
    }
}
module.exports = {
    Recommend
};


/***/ }),

/***/ "./lib/app_demo/zhihu/home/reply_page.js":
/*!***********************************************!*\
  !*** ./lib/app_demo/zhihu/home/reply_page.js ***!
  \***********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 341:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

//replay_page.js 正式开始，😝
Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const mx_dart_sdk_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/mx-dart-sdk */ "@tencent/mxflutter-widgets/mx-dart-sdk");
const painting_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/painting */ "@tencent/mxflutter-widgets/painting");
const rendering_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/rendering */ "@tencent/mxflutter-widgets/rendering");
let { GlobalConfig } = __webpack_require__(/*! ../global_config.js */ "./lib/app_demo/zhihu/global_config.js");
// let {QuestionPage} = require("./zhihu/home/question_page.js");
class Common {
    static searchInput(context) {
        return new widgets_1.Container({
            child: new widgets_1.Row({
                children: [
                    new widgets_1.Container({
                        child: material_1.FlatButton.icon({
                            onPressed: function () {
                                widgets_1.Navigator.pop(context);
                            },
                            icon: new widgets_1.Icon(new widgets_1.IconData(0xe5c4, {
                                fontFamily: 'MaterialIcons'
                            }), {
                                color: GlobalConfig.fontColor
                            }),
                            label: new widgets_1.Text("")
                        }),
                        width: 60.0
                    }),
                    new widgets_1.Expanded({
                        child: new material_1.TextField({
                            decoration: material_1.InputDecoration.collapsed({
                                hintText: "搜索比乎内容",
                                border: material_1.InputBorder.none,
                                hintStyle: new mx_dart_sdk_1.TextStyle({
                                    color: GlobalConfig.fontColor
                                })
                            })
                        })
                    }),
                    new widgets_1.Container({
                        child: new material_1.IconButton({
                            icon: new widgets_1.Icon(new widgets_1.IconData(0xe80d, {
                                fontFamily: 'MaterialIcons'
                            }), {
                                color: GlobalConfig.fontColor
                            }),
                            onPressed: function () { },
                            padding: painting_1.EdgeInsets.all(0.0),
                            iconSize: 18.0
                        })
                    }),
                    new widgets_1.Container({
                        child: new material_1.IconButton({
                            icon: new widgets_1.Icon(new widgets_1.IconData(0xe896, {
                                fontFamily: 'MaterialIcons'
                            }), {
                                color: GlobalConfig.fontColor
                            }),
                            onPressed: function () { },
                            padding: painting_1.EdgeInsets.all(0.0),
                            iconSize: 18.0
                        })
                    })
                ]
            }),
            decoration: new painting_1.BoxDecoration({
                borderRadius: painting_1.BorderRadius.all(mx_dart_sdk_1.Radius.circular(4.0)),
                color: GlobalConfig.searchBackgroundColor
            }),
            height: 36.0
        });
    }
}
class ReplyPage extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super("ReplyPage");
    }
    createState() {
        return new ReplyPageState(this);
    }
}
class ReplyPageState extends mxflutter_1.MXJSWidgetState {
    build(context) {
        let widget = new material_1.MaterialApp({
            // theme: GlobalConfig.themeData,
            home: new material_1.Scaffold({
                appBar: new material_1.AppBar({
                    title: Common.searchInput(context)
                }),
                body: new widgets_1.SingleChildScrollView({
                    child: new widgets_1.Column({
                        children: [
                            new widgets_1.Container({
                                child: new material_1.FlatButton({
                                    onPressed: function () {
                                        widgets_1.Navigator.push(context, new material_1.MaterialPageRoute({
                                            builder: function (context) {
                                                return new QuestionPage;
                                            }
                                        }));
                                    },
                                    child: new widgets_1.Container({
                                        child: new widgets_1.Text("你认为《三体》中最牛的文明是？", {
                                            style: new mx_dart_sdk_1.TextStyle({
                                                fontWeight: mx_dart_sdk_1.FontWeight.bold,
                                                fontSize: 18.0,
                                                height: 1.3,
                                                color: material_1.Colors.black
                                            })
                                        }),
                                        padding: painting_1.EdgeInsets.all(16.0),
                                        alignment: painting_1.Alignment.topLeft
                                    }),
                                    color: GlobalConfig.cardBackgroundColor
                                }),
                                decoration: new painting_1.BoxDecoration({
                                    border: new painting_1.BorderDirectional({
                                        bottom: new painting_1.BorderSide({
                                            color: material_1.Colors.white10
                                        })
                                    })
                                })
                            }),
                            new widgets_1.Container({
                                child: new widgets_1.Row({
                                    children: [
                                        new widgets_1.Expanded({
                                            flex: 1,
                                            child: new widgets_1.Container({
                                                child: material_1.FlatButton.icon({
                                                    onPressed: function () { },
                                                    icon: new widgets_1.Icon(new widgets_1.IconData(0xe3ae, {
                                                        fontFamily: 'MaterialIcons'
                                                    })),
                                                    label: new widgets_1.Text("写回答"),
                                                    textTheme: material_1.ButtonTextTheme.accent
                                                }),
                                                decoration: new painting_1.BoxDecoration({
                                                    border: new painting_1.BorderDirectional({
                                                        end: new painting_1.BorderSide({
                                                            color: material_1.Colors.white10
                                                        })
                                                    })
                                                })
                                            })
                                        }),
                                        new widgets_1.Expanded({
                                            flex: 1,
                                            child: new widgets_1.Container({
                                                child: new material_1.FlatButton({
                                                    onPressed: function () {
                                                        widgets_1.Navigator.push(context, new material_1.MaterialPageRoute({
                                                            builder: function (context) {
                                                                return new QuestionPage;
                                                            }
                                                        }));
                                                    },
                                                    child: new widgets_1.Text("查看全部10000个回答 > ")
                                                })
                                            })
                                        })
                                    ],
                                }),
                                decoration: new painting_1.BoxDecoration({
                                    color: GlobalConfig.cardBackgroundColor
                                }),
                                margin: painting_1.EdgeInsets.only({
                                    bottom: 10.0
                                })
                            }),
                            new widgets_1.Container({
                                child: new material_1.ListTile({
                                    leading: new material_1.CircleAvatar({
                                        backgroundImage: new painting_1.NetworkImage("https://pic3.zhimg.com/v2-cd467bb9bb31d0384f065cf0bd677930_xl.jpg"),
                                        radius: 20.0
                                    }),
                                    title: new widgets_1.Text("Flutter"),
                                    subtitle: new widgets_1.Text("人生如逆旅，我亦是行人"),
                                    trailing: material_1.RaisedButton.icon({
                                        onPressed: function () { },
                                        icon: new widgets_1.Icon(new widgets_1.IconData(0xe145, {
                                            fontFamily: 'MaterialIcons'
                                        }), {
                                            color: material_1.Colors.black
                                        }),
                                        label: new widgets_1.Text("关注", {
                                            style: new mx_dart_sdk_1.TextStyle({
                                                color: material_1.Colors.black
                                            })
                                        }),
                                        color: material_1.Colors.blue
                                    })
                                }),
                                decoration: new painting_1.BoxDecoration({
                                    color: GlobalConfig.cardBackgroundColor,
                                    border: new painting_1.BorderDirectional({
                                        bottom: new painting_1.BorderSide({
                                            color: material_1.Colors.black
                                        })
                                    })
                                })
                            }),
                            new widgets_1.Container({
                                child: new widgets_1.Text("回归运动\n\n三体定义的黑暗森林的宇宙格局，就是文明相互攻击和毁灭，越高级的，越明白藏好自己做好清理，绝不做探测对方文明的愚蠢行为。\n\n然而归还运动跳出了这个黑暗森林法则，不玩黑暗森林打击，不但探测别的宇宙文明，而且还深入了解对方文明，而且是全宇宙的所有文明。\n\n这是一种多么自信的科技实力呀，才能跳出黑暗森林的生存法则呀", {
                                    style: new mx_dart_sdk_1.TextStyle({
                                        height: 1.4,
                                        fontSize: 16.0,
                                        color: GlobalConfig.fontColor
                                    }),
                                    textAlign: mx_dart_sdk_1.TextAlign.start
                                }),
                                margin: painting_1.EdgeInsets.all(16.0)
                            })
                        ]
                    })
                }),
                bottomNavigationBar: new material_1.BottomAppBar({
                    child: new widgets_1.Container({
                        height: 50.0,
                        child: new widgets_1.Row({
                            children: [
                                new widgets_1.Container({
                                    child: material_1.FlatButton.icon({
                                        onPressed: function () { },
                                        label: new widgets_1.Text("赞同 10 K"),
                                        color: GlobalConfig.searchBackgroundColor,
                                        icon: new widgets_1.Icon(new widgets_1.IconData(0xe5c7, {
                                            fontFamily: 'MaterialIcons'
                                        }))
                                    }),
                                    margin: painting_1.EdgeInsets.only({
                                        left: 16.0
                                    }),
                                    height: 30.0
                                }),
                                new widgets_1.Container({
                                    child: new material_1.IconButton({
                                        onPressed: function () { },
                                        icon: new widgets_1.Icon(new widgets_1.IconData(0xe5c5, {
                                            fontFamily: 'MaterialIcons'
                                        })),
                                        padding: painting_1.EdgeInsets.all(0.0)
                                    }),
                                    margin: painting_1.EdgeInsets.only({
                                        left: 8.0
                                    }),
                                    height: 30.0,
                                    decoration: new painting_1.BoxDecoration({
                                        borderRadius: painting_1.BorderRadius.all(mx_dart_sdk_1.Radius.circular(2.0)),
                                        color: GlobalConfig.searchBackgroundColor
                                    })
                                }),
                                new widgets_1.Expanded({
                                    child: new widgets_1.Row({
                                        mainAxisAlignment: rendering_1.MainAxisAlignment.center,
                                        children: [
                                            new material_1.IconButton({
                                                onPressed: function () { },
                                                icon: new widgets_1.Container({
                                                    child: new widgets_1.Column({
                                                        children: [
                                                            new widgets_1.Icon(new widgets_1.IconData(0xe87d, {
                                                                fontFamily: 'MaterialIcons'
                                                            }), {
                                                                size: 18.0,
                                                                color: GlobalConfig.fontColor
                                                            }),
                                                            new widgets_1.Text("感谢", {
                                                                style: new mx_dart_sdk_1.TextStyle({
                                                                    fontSize: 10.0,
                                                                    color: GlobalConfig.fontColor
                                                                })
                                                            })
                                                        ]
                                                    }),
                                                    margin: painting_1.EdgeInsets.only(),
                                                    height: 30.0
                                                })
                                            }),
                                            new material_1.IconButton({
                                                onPressed: function () { },
                                                icon: new widgets_1.Container({
                                                    child: new widgets_1.Column({
                                                        children: [
                                                            new widgets_1.Icon(new widgets_1.IconData(0xe838, {
                                                                fontFamily: 'MaterialIcons'
                                                            }), {
                                                                size: 18.0,
                                                                color: GlobalConfig.fontColor
                                                            }),
                                                            new widgets_1.Text("收藏", {
                                                                style: new mx_dart_sdk_1.TextStyle({
                                                                    fontSize: 10.0,
                                                                    color: GlobalConfig.fontColor
                                                                })
                                                            })
                                                        ]
                                                    }),
                                                    margin: painting_1.EdgeInsets.only(),
                                                    height: 30.0
                                                })
                                            }),
                                            new material_1.IconButton({
                                                onPressed: function () { },
                                                icon: new widgets_1.Container({
                                                    child: new widgets_1.Column({
                                                        children: [
                                                            new widgets_1.Icon(new widgets_1.IconData(0xe253, {
                                                                fontFamily: 'MaterialIcons'
                                                            }), {
                                                                size: 18.0,
                                                                color: GlobalConfig.fontColor
                                                            }),
                                                            new widgets_1.Text("345", {
                                                                style: new mx_dart_sdk_1.TextStyle({
                                                                    fontSize: 10.0,
                                                                    color: GlobalConfig.fontColor
                                                                })
                                                            })
                                                        ]
                                                    }),
                                                    margin: painting_1.EdgeInsets.only(),
                                                    height: 30.0
                                                })
                                            })
                                        ]
                                    })
                                })
                            ]
                        }),
                        color: GlobalConfig.cardBackgroundColor
                    })
                })
            })
        });
        return widget;
    }
}
module.exports = {
    ReplyPage,
    Common
};


/***/ }),

/***/ "./lib/app_demo/zhihu/home/search_page.js":
/*!************************************************!*\
  !*** ./lib/app_demo/zhihu/home/search_page.js ***!
  \************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 332:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

//search_page.js 正式开始，😝
Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const mx_dart_sdk_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/mx-dart-sdk */ "@tencent/mxflutter-widgets/mx-dart-sdk");
const painting_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/painting */ "@tencent/mxflutter-widgets/painting");
let { GlobalConfig } = __webpack_require__(/*! ../global_config.js */ "./lib/app_demo/zhihu/global_config.js");
class SearchPage extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super("SearchPage");
    }
    createState() {
        return new SearchPageState(this);
    }
}
class SearchPageState extends mxflutter_1.MXJSWidgetState {
    searchInput(context) {
        return new widgets_1.Container({
            child: new widgets_1.Row({
                children: [
                    new widgets_1.Container({
                        child: material_1.FlatButton.icon({
                            onPressed: function () {
                                widgets_1.Navigator.pop(context);
                            },
                            icon: new widgets_1.Icon(new widgets_1.IconData(0xe5c4, {
                                fontFamily: 'MaterialIcons'
                            }), {
                                color: GlobalConfig.fontColor
                            }),
                            label: new widgets_1.Text("")
                        }),
                        width: 60.0
                    }),
                    new widgets_1.Expanded({
                        child: new material_1.TextField({
                            autofocus: true,
                            decoration: material_1.InputDecoration.collapsed({
                                hintText: "搜索比乎内容",
                                border: material_1.InputBorder.none,
                                hintStyle: new mx_dart_sdk_1.TextStyle({
                                    color: GlobalConfig.fontColor
                                })
                            })
                        })
                    })
                ]
            }),
            decoration: new painting_1.BoxDecoration({
                borderRadius: painting_1.BorderRadius.all(mx_dart_sdk_1.Radius.circular(4.0)),
                color: GlobalConfig.searchBackgroundColor
            })
        });
    }
    build(context) {
        let widget = new material_1.MaterialApp({
            // theme: GlobalConfig.themeData,
            home: new material_1.Scaffold({
                appBar: new material_1.AppBar({
                    title: this.searchInput(context)
                }),
                body: new widgets_1.SingleChildScrollView({
                    child: new widgets_1.Column({
                        children: [
                            new widgets_1.Container({
                                child: new widgets_1.Text("比乎热搜", {
                                    style: new mx_dart_sdk_1.TextStyle({
                                        fontWeight: mx_dart_sdk_1.FontWeight.bold,
                                        fontSize: 16.0
                                    })
                                }),
                                margin: painting_1.EdgeInsets.only({
                                    top: 16.0,
                                    left: 16.0,
                                    bottom: 16.0
                                }),
                                alignment: painting_1.Alignment.topLeft
                            }),
                            new widgets_1.Row({
                                children: [
                                    new widgets_1.Container({
                                        child: new material_1.Chip({
                                            label: new material_1.FlatButton({
                                                onPressed: function () { },
                                                child: new widgets_1.Text("汽车关税下调", {
                                                    style: new mx_dart_sdk_1.TextStyle({
                                                        color: GlobalConfig.fontColor
                                                    })
                                                })
                                            }),
                                            backgroundColor: material_1.Colors.black12,
                                        }),
                                        margin: painting_1.EdgeInsets.only({
                                            left: 16.0,
                                            bottom: 16.0
                                        }),
                                        alignment: painting_1.Alignment.topLeft
                                    }),
                                    new widgets_1.Container({
                                        child: new material_1.Chip({
                                            label: new material_1.FlatButton({
                                                onPressed: function () { },
                                                child: new widgets_1.Text("李彦宏传闻辟谣", {
                                                    style: new mx_dart_sdk_1.TextStyle({
                                                        color: GlobalConfig.fontColor
                                                    })
                                                })
                                            }),
                                            backgroundColor: material_1.Colors.black12
                                        }),
                                        margin: painting_1.EdgeInsets.only({
                                            left: 16.0,
                                            bottom: 16.0
                                        }),
                                        alignment: painting_1.Alignment.topLeft
                                    })
                                ]
                            }),
                            new widgets_1.Row({
                                children: [
                                    new widgets_1.Container({
                                        child: new material_1.Chip({
                                            label: new material_1.FlatButton({
                                                onPressed: function () { },
                                                child: new widgets_1.Text("小米8", {
                                                    style: new mx_dart_sdk_1.TextStyle({
                                                        color: GlobalConfig.fontColor
                                                    })
                                                })
                                            }),
                                            backgroundColor: material_1.Colors.black12
                                        }),
                                        margin: painting_1.EdgeInsets.only({
                                            left: 16.0,
                                            bottom: 16.0
                                        }),
                                        alignment: painting_1.Alignment.topLeft
                                    }),
                                    new widgets_1.Container({
                                        child: new material_1.Chip({
                                            label: new material_1.FlatButton({
                                                onPressed: function () { },
                                                child: new widgets_1.Text("超时空同居", {
                                                    style: new mx_dart_sdk_1.TextStyle({
                                                        color: GlobalConfig.fontColor
                                                    })
                                                })
                                            }),
                                            backgroundColor: material_1.Colors.black12
                                        }),
                                        margin: painting_1.EdgeInsets.only({
                                            left: 16.0,
                                            bottom: 16.0
                                        }),
                                        alignment: painting_1.Alignment.topLeft
                                    })
                                ]
                            }),
                            new widgets_1.Container({
                                child: new widgets_1.Text("搜索历史", {
                                    style: new mx_dart_sdk_1.TextStyle({
                                        fontWeight: mx_dart_sdk_1.FontWeight.bold,
                                        fontSize: 16.0
                                    })
                                }),
                                margin: painting_1.EdgeInsets.only({
                                    left: 16.0,
                                    bottom: 16.0
                                }),
                                alignment: painting_1.Alignment.topLeft
                            }),
                            new widgets_1.Container({
                                child: new widgets_1.Row({
                                    children: [
                                        new widgets_1.Container({
                                            child: new widgets_1.Icon(new widgets_1.IconData(0xe192, {
                                                fontFamily: 'MaterialIcons'
                                            }), {
                                                color: GlobalConfig.fontColor,
                                                size: 16.0
                                            }),
                                            margin: painting_1.EdgeInsets.only({
                                                right: 12.0
                                            })
                                        }),
                                        new widgets_1.Expanded({
                                            child: new widgets_1.Container({
                                                child: new widgets_1.Text("业余兴趣", {
                                                    style: new mx_dart_sdk_1.TextStyle({
                                                        color: GlobalConfig.fontColor,
                                                        fontSize: 14.0
                                                    })
                                                })
                                            })
                                        }),
                                        new widgets_1.Container({
                                            child: new widgets_1.Icon(new widgets_1.IconData(0xe14c, {
                                                fontFamily: 'MaterialIcons'
                                            }), {
                                                color: GlobalConfig.fontColor,
                                                size: 16.0
                                            })
                                        })
                                    ]
                                }),
                                margin: painting_1.EdgeInsets.only({
                                    left: 16.0,
                                    right: 16.0,
                                    bottom: 10.0
                                }),
                                padding: painting_1.EdgeInsets.only({
                                    bottom: 10.0
                                }),
                                decoration: new painting_1.BoxDecoration({
                                    border: new painting_1.BorderDirectional({
                                        bottom: new painting_1.BorderSide({
                                            color: material_1.Colors.black12
                                        })
                                    })
                                })
                            }),
                            new widgets_1.Container({
                                child: new widgets_1.Row({
                                    children: [
                                        new widgets_1.Container({
                                            child: new widgets_1.Icon(new widgets_1.IconData(0xe192, {
                                                fontFamily: 'MaterialIcons'
                                            }), {
                                                color: GlobalConfig.fontColor,
                                                size: 16.0
                                            }),
                                            margin: painting_1.EdgeInsets.only({
                                                right: 12.0
                                            })
                                        }),
                                        new widgets_1.Expanded({
                                            child: new widgets_1.Container({
                                                child: new widgets_1.Text("三体", {
                                                    style: new mx_dart_sdk_1.TextStyle({
                                                        color: GlobalConfig.fontColor,
                                                        fontSize: 14.0
                                                    })
                                                })
                                            })
                                        }),
                                        new widgets_1.Container({
                                            child: new widgets_1.Icon(new widgets_1.IconData(0xe14c, {
                                                fontFamily: 'MaterialIcons'
                                            }), {
                                                color: GlobalConfig.fontColor,
                                                size: 16.0
                                            })
                                        })
                                    ]
                                }),
                                margin: painting_1.EdgeInsets.only({
                                    left: 16.0,
                                    right: 16.0,
                                    bottom: 10.0
                                }),
                                padding: painting_1.EdgeInsets.only({
                                    bottom: 10.0
                                }),
                                decoration: new painting_1.BoxDecoration({
                                    border: new painting_1.BorderDirectional({
                                        bottom: new painting_1.BorderSide({
                                            color: material_1.Colors.black12
                                        })
                                    })
                                })
                            }),
                            new widgets_1.Container({
                                child: new widgets_1.Row({
                                    children: [
                                        new widgets_1.Container({
                                            child: new widgets_1.Icon(new widgets_1.IconData(0xe192, {
                                                fontFamily: 'MaterialIcons'
                                            }), {
                                                color: GlobalConfig.fontColor,
                                                size: 16.0
                                            }),
                                            margin: painting_1.EdgeInsets.only({
                                                right: 12.0
                                            })
                                        }),
                                        new widgets_1.Expanded({
                                            child: new widgets_1.Container({
                                                child: new widgets_1.Text("人类未来", {
                                                    style: new mx_dart_sdk_1.TextStyle({
                                                        color: GlobalConfig.fontColor,
                                                        fontSize: 14.0
                                                    })
                                                })
                                            })
                                        }),
                                        new widgets_1.Container({
                                            child: new widgets_1.Icon(new widgets_1.IconData(0xe14c, {
                                                fontFamily: 'MaterialIcons'
                                            }), {
                                                color: GlobalConfig.fontColor,
                                                size: 16.0
                                            })
                                        })
                                    ],
                                }),
                                margin: painting_1.EdgeInsets.only({
                                    left: 16.0,
                                    right: 16.0,
                                    bottom: 10.0
                                }),
                                padding: painting_1.EdgeInsets.only({
                                    bottom: 10.0
                                }),
                                decoration: new painting_1.BoxDecoration({
                                    border: new painting_1.BorderDirectional({
                                        bottom: new painting_1.BorderSide({
                                            color: material_1.Colors.black12
                                        })
                                    })
                                })
                            })
                        ]
                    })
                })
            })
        });
        return widget;
    }
}
module.exports = {
    SearchPage
};


/***/ }),

/***/ "./lib/app_demo/zhihu/idea/idea_page.js":
/*!**********************************************!*\
  !*** ./lib/app_demo/zhihu/idea/idea_page.js ***!
  \**********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 37:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

//idea_page.js 正式开始，😝
Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const foundation_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/foundation */ "@tencent/mxflutter-widgets/foundation");
let { GlobalConfig } = __webpack_require__(/*! ../global_config.js */ "./lib/app_demo/zhihu/global_config.js");
class IdeaPage extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super("IdeaPage", {
            key: new foundation_1.Key("IdeaPage")
        });
    }
    createState() {
        return new IdeaPageState(this);
    }
}
class IdeaPageState extends mxflutter_1.MXJSWidgetState {
    build(context) {
        let widget = new material_1.MaterialApp({
            home: new material_1.Scaffold({
                appBar: new material_1.AppBar({
                    title: new widgets_1.Center({
                        child: new widgets_1.Text('想法')
                    })
                }),
                body: new widgets_1.Center({
                    child: new widgets_1.Text("努力开发中~")
                })
            })
            // theme: GlobalConfig.themeData
        });
        return widget;
    }
}
module.exports = {
    IdeaPage
};


/***/ }),

/***/ "./lib/app_demo/zhihu/index.js":
/*!*************************************!*\
  !*** ./lib/app_demo/zhihu/index.js ***!
  \*************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 101:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const mx_dart_sdk_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/mx-dart-sdk */ "@tencent/mxflutter-widgets/mx-dart-sdk");
const animation_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/animation */ "@tencent/mxflutter-widgets/animation");
let { GlobalConfig } = __webpack_require__(/*! ./global_config.js */ "./lib/app_demo/zhihu/global_config.js");
let { HomePage } = __webpack_require__(/*! ./home/home_page.js */ "./lib/app_demo/zhihu/home/home_page.js");
let { MyPage } = __webpack_require__(/*! ./my/my_page.js */ "./lib/app_demo/zhihu/my/my_page.js");
let { IdeaPage } = __webpack_require__(/*! ./idea/idea_page.js */ "./lib/app_demo/zhihu/idea/idea_page.js");
let { MessagePage } = __webpack_require__(/*! ./message/message_page.js */ "./lib/app_demo/zhihu/message/message_page.js");
class _NavigationIconView {
    constructor({ icon, title, vsync }) {
        this.item = new widgets_1.BottomNavigationBarItem({
            icon: icon,
            title: title
        });
        this.controller = new animation_1.AnimationController({
            duration: new mx_dart_sdk_1.Duration({
                milliseconds: 200
            })
        });
    }
}
class Index extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super('Index');
    }
    createState() {
        return new IndexState(this);
    }
}
class IndexState extends mxflutter_1.MXJSWidgetState {
    constructor() {
        super();
        this._currentIndex = 0;
        this._navigationViews = [];
        this._pageList = [];
        this._currentPage = null;
    }
    build(context) {
        this._navigationViews = [
            new _NavigationIconView({
                icon: new widgets_1.Icon(new widgets_1.IconData(0xe85d, {
                    fontFamily: 'MaterialIcons'
                })),
                title: new widgets_1.Text("首页")
            }),
            new _NavigationIconView({
                icon: new widgets_1.Icon(new widgets_1.IconData(0xeb3d, {
                    fontFamily: 'MaterialIcons'
                })),
                title: new widgets_1.Text("想法")
            }),
            new _NavigationIconView({
                icon: new widgets_1.Icon(new widgets_1.IconData(0xe003, {
                    fontFamily: 'MaterialIcons'
                })),
                title: new widgets_1.Text("通知")
            }),
            new _NavigationIconView({
                icon: new widgets_1.Icon(new widgets_1.IconData(0xe8a6, {
                    fontFamily: 'MaterialIcons'
                })),
                title: new widgets_1.Text("我的")
            }),
        ];
        this._pageList = [
            new HomePage(),
            new IdeaPage(),
            new MessagePage(),
            new MyPage()
        ];
        this._currentPage = this._pageList[this._currentIndex];
        let widget = new material_1.MaterialApp({
            home: new material_1.Scaffold({
                body: new widgets_1.Center({
                    child: this._currentPage
                }),
                bottomNavigationBar: new material_1.BottomNavigationBar({
                    items: this._navigationViews.map(navigationIconView => navigationIconView.item),
                    currentIndex: this._currentIndex,
                    fixedColor: material_1.Colors.blue,
                    type: material_1.BottomNavigationBarType.fixed,
                    onTap: function (index) {
                        this.setState(function () {
                            this._navigationViews[this._currentIndex].controller.reverse();
                            this._currentIndex = index;
                            this._navigationViews[this._currentIndex].controller.forward();
                            this._currentPage = this._pageList[this._currentIndex];
                        }.bind(this));
                    }.bind(this)
                })
                // theme: GlobalConfig.themeData,
            })
        });
        return widget;
    }
}
module.exports = {
    Index
};


/***/ }),

/***/ "./lib/app_demo/zhihu/message/message_page.js":
/*!****************************************************!*\
  !*** ./lib/app_demo/zhihu/message/message_page.js ***!
  \****************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 37:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

//message_page.js 正式开始，😝
Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const foundation_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/foundation */ "@tencent/mxflutter-widgets/foundation");
let { GlobalConfig } = __webpack_require__(/*! ../global_config.js */ "./lib/app_demo/zhihu/global_config.js");
class MessagePage extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super("MessagePage", {
            key: new foundation_1.Key("MessagePage")
        });
    }
    createState() {
        return new MessagePageState(this);
    }
}
class MessagePageState extends mxflutter_1.MXJSWidgetState {
    build(context) {
        let widget = new material_1.MaterialApp({
            home: new material_1.Scaffold({
                appBar: new material_1.AppBar({
                    title: new widgets_1.Center({
                        child: new widgets_1.Text('消息')
                    })
                }),
                body: new widgets_1.Center({
                    child: new widgets_1.Text("努力开发中~")
                })
            })
            // theme: GlobalConfig.themeData
        });
        return widget;
    }
}
module.exports = {
    MessagePage
};


/***/ }),

/***/ "./lib/app_demo/zhihu/my/my_page.js":
/*!******************************************!*\
  !*** ./lib/app_demo/zhihu/my/my_page.js ***!
  \******************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 509:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

//my_page.js 正式开始，😝
Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
const widgets_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/widgets */ "@tencent/mxflutter-widgets/widgets");
const mx_dart_sdk_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/mx-dart-sdk */ "@tencent/mxflutter-widgets/mx-dart-sdk");
const painting_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/painting */ "@tencent/mxflutter-widgets/painting");
const rendering_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/rendering */ "@tencent/mxflutter-widgets/rendering");
const foundation_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/foundation */ "@tencent/mxflutter-widgets/foundation");
let { GlobalConfig } = __webpack_require__(/*! ../global_config.js */ "./lib/app_demo/zhihu/global_config.js");
let { SearchPage } = __webpack_require__(/*! ../home/search_page.js */ "./lib/app_demo/zhihu/home/search_page.js");
class MyPage extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super("MyPage", {
            key: new foundation_1.Key("MyPage")
        });
    }
    createState() {
        return new MyPageState(this);
    }
}
class MyPageState extends mxflutter_1.MXJSWidgetState {
    barSearch() {
        return new widgets_1.Container({
            child: new material_1.FlatButton({
                onPressed: function () {
                    widgets_1.Navigator.push(context, new material_1.MaterialPageRoute({
                        builder: function (context) {
                            return new SearchPage;
                        }
                    }));
                },
                child: new widgets_1.Row({
                    children: [
                        new widgets_1.Container({
                            child: new widgets_1.Icon(new widgets_1.IconData(0xe8b6, {
                                fontFamily: 'MaterialIcons'
                            }), {
                                size: 18.0,
                                color: GlobalConfig.fontColor
                            }),
                            margin: painting_1.EdgeInsets.only({
                                right: 26.0
                            })
                        }),
                        new widgets_1.Expanded({
                            child: new widgets_1.Container({
                                child: new widgets_1.Text("搜索知乎内容", {
                                    style: new mx_dart_sdk_1.TextStyle({
                                        color: GlobalConfig.fontColor
                                    })
                                })
                            })
                        }),
                        new widgets_1.Container({
                            child: new material_1.FlatButton({
                                onPressed: function () { },
                                child: new widgets_1.Icon(new widgets_1.IconData(0xe8c4, {
                                    fontFamily: 'MaterialIcons'
                                }), {
                                    color: GlobalConfig.fontColor,
                                    size: 18.0
                                })
                            }),
                            width: 40.0
                        })
                    ]
                })
            }),
            decoration: new painting_1.BoxDecoration({
                borderRadius: painting_1.BorderRadius.all(mx_dart_sdk_1.Radius.circular(4.0)),
                color: GlobalConfig.searchBackgroundColor
            })
        });
    }
    infoCardDescItem(context, count, desc, showSeparator) {
        return new widgets_1.Row({
            children: [
                new widgets_1.Container({
                    width: (widgets_1.MediaQuery.of(context).size.width - 6.0) / 4,
                    child: new material_1.FlatButton({
                        onPressed: function () { },
                        child: new widgets_1.Container({
                            height: 50.0,
                            child: new widgets_1.Column({
                                children: [
                                    new widgets_1.Container({
                                        child: new widgets_1.Text(count, {
                                            style: new mx_dart_sdk_1.TextStyle({
                                                fontSize: 16.0,
                                                color: GlobalConfig.fontColor
                                            })
                                        })
                                    }),
                                    new widgets_1.Container({
                                        child: new widgets_1.Text(desc, {
                                            style: new mx_dart_sdk_1.TextStyle({
                                                fontSize: 12.0,
                                                color: GlobalConfig.fontColor
                                            })
                                        })
                                    })
                                ]
                            })
                        })
                    })
                }),
                showSeparator ? new widgets_1.Container({
                    height: 14.0,
                    width: 1.0,
                    decoration: new painting_1.BoxDecoration({
                        border: new painting_1.BorderDirectional({
                            start: new painting_1.BorderSide({
                                color: material_1.Colors.black12,
                                width: 1.0
                            })
                        })
                    })
                }) : new widgets_1.Container(),
            ]
        });
    }
    infoCard(context) {
        return new widgets_1.Container({
            color: GlobalConfig.cardBackgroundColor,
            margin: painting_1.EdgeInsets.only({
                top: 10.0,
                bottom: 6.0
            }),
            padding: painting_1.EdgeInsets.only({
                top: 12.0,
                bottom: 8.0
            }),
            child: new widgets_1.Column({
                children: [
                    new widgets_1.Container({
                        margin: painting_1.EdgeInsets.only({
                            left: 16.0,
                            right: 16.0,
                            bottom: 16.0
                        }),
                        decoration: new painting_1.BoxDecoration({
                            color: new mx_dart_sdk_1.Color(0xFFF5F5F5),
                            borderRadius: painting_1.BorderRadius.all(mx_dart_sdk_1.Radius.circular(6.0))
                        }),
                        child: new material_1.FlatButton({
                            onPressed: function () { },
                            child: new widgets_1.Container({
                                child: new material_1.ListTile({
                                    leading: new widgets_1.Container({
                                        child: new material_1.CircleAvatar({
                                            backgroundImage: new painting_1.NetworkImage("https://pic1.zhimg.com/v2-ec7ed574da66e1b495fcad2cc3d71cb9_xl.jpg"),
                                            radius: 20.0
                                        })
                                    }),
                                    title: new widgets_1.Container({
                                        margin: painting_1.EdgeInsets.only({
                                            bottom: 2.0
                                        }),
                                        child: new widgets_1.Text("learner")
                                    }),
                                    subtitle: new widgets_1.Container({
                                        margin: painting_1.EdgeInsets.only({
                                            top: 2.0
                                        }),
                                        child: new widgets_1.Text("查看或编辑个人主页")
                                    })
                                })
                            })
                        })
                    }),
                    new widgets_1.Container({
                        child: new widgets_1.Row({
                            mainAxisAlignment: rendering_1.MainAxisAlignment.center,
                            children: [
                                this.infoCardDescItem(context, "57", "我的创作", true),
                                this.infoCardDescItem(context, "210", "关注", true),
                                this.infoCardDescItem(context, "18", "我的收藏", true),
                                this.infoCardDescItem(context, "33", "最近浏览", false)
                            ]
                        })
                    })
                ]
            })
        });
    }
    serviceCardDescItem(context, iconDataValue, desc, bgColor) {
        return new widgets_1.Container({
            width: widgets_1.MediaQuery.of(context).size.width / 4,
            child: new material_1.FlatButton({
                onPressed: function () { },
                child: new widgets_1.Container({
                    child: new widgets_1.Column({
                        children: [
                            new widgets_1.Container({
                                margin: painting_1.EdgeInsets.only({
                                    bottom: 6.0
                                }),
                                child: new material_1.CircleAvatar({
                                    radius: 20.0,
                                    child: new widgets_1.Icon(new widgets_1.IconData(iconDataValue, {
                                        fontFamily: 'MaterialIcons'
                                    }), {
                                        color: material_1.Colors.white
                                    }),
                                    backgroundColor: bgColor
                                })
                            }),
                            new widgets_1.Container({
                                child: new widgets_1.Text(desc, {
                                    style: new mx_dart_sdk_1.TextStyle({
                                        color: GlobalConfig.fontColor,
                                        fontSize: 14.0
                                    })
                                })
                            })
                        ]
                    })
                })
            })
        });
    }
    serviceCard(context) {
        return new widgets_1.Container({
            color: GlobalConfig.cardBackgroundColor,
            margin: painting_1.EdgeInsets.only({
                top: 6.0,
                bottom: 6.0
            }),
            padding: painting_1.EdgeInsets.only({
                top: 12.0,
                bottom: 8.0
            }),
            child: new widgets_1.Column({
                children: [
                    new widgets_1.Container({
                        child: new widgets_1.Row({
                            mainAxisAlignment: rendering_1.MainAxisAlignment.center,
                            children: [
                                this.serviceCardDescItem(context, 0xe865, "我的书架", material_1.Colors.green),
                                this.serviceCardDescItem(context, 0xe3e7, "我的Live", material_1.Colors.blue),
                                this.serviceCardDescItem(context, 0xeb44, "私家课", new mx_dart_sdk_1.Color(0xFFA68F52)),
                                this.serviceCardDescItem(context, 0xe227, "付费咨询", new mx_dart_sdk_1.Color(0xFF355A9B))
                            ]
                        })
                    }),
                    new widgets_1.Container({
                        margin: painting_1.EdgeInsets.only({
                            top: 16.0
                        }),
                        child: new widgets_1.Row({
                            mainAxisAlignment: rendering_1.MainAxisAlignment.start,
                            children: [
                                this.serviceCardDescItem(context, 0xe8c9, "已购", new mx_dart_sdk_1.Color(0xFF088DB4)),
                                this.serviceCardDescItem(context, 0xe03e, "余额礼卷", material_1.Colors.blue),
                                this.serviceCardDescItem(context, 0xe1e2, "服务", new mx_dart_sdk_1.Color(0xFF029A3F))
                            ]
                        })
                    })
                ]
            })
        });
    }
    settingCard(context) {
        return new widgets_1.Container({
            color: GlobalConfig.cardBackgroundColor,
            margin: painting_1.EdgeInsets.only({
                top: 6.0,
                bottom: 6.0
            }),
            padding: painting_1.EdgeInsets.only({
                top: 12.0,
                bottom: 8.0
            }),
            child: new widgets_1.Row({
                mainAxisAlignment: rendering_1.MainAxisAlignment.center,
                children: [
                    this.serviceCardDescItem(context, 0xe891, "社区建设", new mx_dart_sdk_1.Color(0xFFB88800)),
                    this.serviceCardDescItem(context, 0xeb45, "反馈", new mx_dart_sdk_1.Color(0xFF63616D)),
                    this.serviceCardDescItem(context, 0xe3a7, "夜间模式", new mx_dart_sdk_1.Color(0xFFB86A0D)),
                    this.serviceCardDescItem(context, 0xe8a4, "设置", new mx_dart_sdk_1.Color(0xFF636269))
                ]
            })
        });
    }
    videoCardHeader(context, title, iconDataValue, colorValue, nextActionTitle) {
        return new widgets_1.Container({
            margin: painting_1.EdgeInsets.only({
                left: 16.0,
                bottom: 20.0
            }),
            child: new widgets_1.Row({
                children: [
                    new widgets_1.Container({
                        child: new material_1.CircleAvatar({
                            radius: 20.0,
                            child: new widgets_1.Icon(new widgets_1.IconData(iconDataValue, {
                                fontFamily: 'MaterialIcons'
                            }), {
                                color: material_1.Colors.white
                            }),
                            backgroundColor: new mx_dart_sdk_1.Color(colorValue)
                        })
                    }),
                    new widgets_1.Expanded({
                        child: new widgets_1.Container({
                            margin: painting_1.EdgeInsets.only({
                                left: 8.0
                            }),
                            child: new widgets_1.Text(title, {
                                style: new mx_dart_sdk_1.TextStyle({
                                    fontSize: 18.0
                                })
                            })
                        })
                    }),
                    new widgets_1.Container({
                        child: new material_1.FlatButton({
                            onPressed: function () { },
                            child: new widgets_1.Text(nextActionTitle, {
                                style: new mx_dart_sdk_1.TextStyle({
                                    color: material_1.Colors.blue
                                })
                            })
                        })
                    })
                ]
            })
        });
    }
    videoCardItem(context, imgUrl) {
        return new widgets_1.Container({
            width: widgets_1.MediaQuery.of(context).size.width / 2.5,
            margin: painting_1.EdgeInsets.only({
                right: 6.0
            }),
            child: new widgets_1.AspectRatio({
                aspectRatio: 4.0 / 2.0,
                child: new widgets_1.Container({
                    foregroundDecoration: new painting_1.BoxDecoration({
                        image: new painting_1.DecorationImage({
                            image: new painting_1.NetworkImage(imgUrl),
                            centerSlice: mx_dart_sdk_1.Rect.fromLTRB(270.0, 180.0, 1360.0, 730.0)
                        }),
                        borderRadius: painting_1.BorderRadius.all(mx_dart_sdk_1.Radius.circular(6.0))
                    })
                })
            })
        });
    }
    videoCard(context) {
        return new widgets_1.Container({
            color: GlobalConfig.cardBackgroundColor,
            margin: painting_1.EdgeInsets.only({
                top: 6.0,
                bottom: 6.0
            }),
            padding: painting_1.EdgeInsets.only({
                top: 12.0,
                bottom: 8.0
            }),
            child: new widgets_1.Column({
                children: [
                    this.videoCardHeader(context, "视频创作", 0xe04b, 0xFFB36905, "拍一个"),
                    new widgets_1.Container({
                        margin: painting_1.EdgeInsets.only({
                            left: 16.0
                        }),
                        child: new widgets_1.SingleChildScrollView({
                            scrollDirection: painting_1.Axis.horizontal,
                            child: new widgets_1.Row({
                                children: [
                                    this.videoCardItem(context, "https://pic2.zhimg.com/50/v2-5942a51e6b834f10074f8d50be5bbd4d_400x224.jpg"),
                                    this.videoCardItem(context, "https://pic1.zhimg.com/50/v2-0008057d1ad2bd813aea4fc247959e63_400x224.jpg"),
                                    this.videoCardItem(context, "https://pic2.zhimg.com/50/v2-5942a51e6b834f10074f8d50be5bbd4d_400x224.jpg"),
                                    this.videoCardItem(context, "https://pic1.zhimg.com/50/v2-0008057d1ad2bd813aea4fc247959e63_400x224.jpg")
                                ]
                            })
                        })
                    })
                ]
            })
        });
    }
    ideaCardItem(context, title, subTitle, imgUrl) {
        return new widgets_1.Container({
            margin: painting_1.EdgeInsets.only({
                right: 6.0
            }),
            decoration: new painting_1.BoxDecoration({
                color: GlobalConfig.searchBackgroundColor,
                borderRadius: painting_1.BorderRadius.all(mx_dart_sdk_1.Radius.circular(6.0))
            }),
            child: new widgets_1.Row({
                children: [
                    new widgets_1.Container({
                        padding: painting_1.EdgeInsets.only({
                            left: 10.0
                        }),
                        child: new widgets_1.Column({
                            children: [
                                new widgets_1.Align({
                                    alignment: painting_1.Alignment.centerLeft,
                                    child: new widgets_1.Container({
                                        child: new widgets_1.Text(title, {
                                            style: new mx_dart_sdk_1.TextStyle({
                                                color: material_1.Colors.black,
                                                fontSize: 16.0
                                            })
                                        })
                                    })
                                }),
                                new widgets_1.Align({
                                    alignment: painting_1.Alignment.centerLeft,
                                    child: new widgets_1.Container({
                                        margin: painting_1.EdgeInsets.only({
                                            top: 6.0
                                        }),
                                        child: new widgets_1.Text(subTitle, {
                                            style: new mx_dart_sdk_1.TextStyle({
                                                color: GlobalConfig.fontColor
                                            })
                                        })
                                    })
                                })
                            ]
                        })
                    }),
                    new widgets_1.Container({
                        margin: painting_1.EdgeInsets.all(10.0),
                        width: widgets_1.MediaQuery.of(context).size.width / 5,
                        child: new widgets_1.AspectRatio({
                            aspectRatio: 1.0 / 1.0,
                            child: new widgets_1.Container({
                                foregroundDecoration: new painting_1.BoxDecoration({
                                    image: new painting_1.DecorationImage({
                                        image: new painting_1.NetworkImage(imgUrl),
                                        centerSlice: mx_dart_sdk_1.Rect.fromLTRB(270.0, 180.0, 1360.0, 730.0)
                                    }),
                                    borderRadius: painting_1.BorderRadius.all(mx_dart_sdk_1.Radius.circular(6.0))
                                })
                            })
                        })
                    })
                ]
            })
        });
    }
    ideaCard(context) {
        return new widgets_1.Container({
            color: GlobalConfig.cardBackgroundColor,
            margin: painting_1.EdgeInsets.only({
                top: 6.0,
                bottom: 6.0
            }),
            padding: painting_1.EdgeInsets.only({
                top: 12.0,
                bottom: 8.0
            }),
            child: new widgets_1.Column({
                children: [
                    this.videoCardHeader(context, "想法", 0xeb3d, 0xFFB36905, "去往想法首页"),
                    new widgets_1.Container({
                        margin: painting_1.EdgeInsets.only({
                            left: 16.0
                        }),
                        child: new widgets_1.SingleChildScrollView({
                            scrollDirection: painting_1.Axis.horizontal,
                            child: new widgets_1.Row({
                                children: [
                                    this.ideaCardItem(context, "苹果 WWDC 2018 正在举行", "软件更新意料之中，硬件之谜...", "https://pic2.zhimg.com/50/v2-55039fa535f3fe06365c0fcdaa9e3847_400x224.jpg"),
                                    this.ideaCardItem(context, "此刻你的桌子是什么样子？", "晒一晒你的书桌/办公桌", "https://pic2.zhimg.com/50/v2-ce2e01a047e4aba9bfabf8469cfd3e75_400x224.jpg"),
                                    this.ideaCardItem(context, "关于高考你印象最深的是...", "聊聊你的高三生活", "https://pic2.zhimg.com/50/v2-55039fa535f3fe06365c0fcdaa9e3847_400x224.jpg"),
                                    this.ideaCardItem(context, "夏天一定要吃的食物有哪些", "最适合夏天吃的那种", "https://pic2.zhimg.com/50/v2-ce2e01a047e4aba9bfabf8469cfd3e75_400x224.jpg")
                                ]
                            })
                        })
                    })
                ]
            })
        });
    }
    build(context) {
        let widget = new material_1.MaterialApp({
            // theme: GlobalConfig.themeData,
            home: new material_1.Scaffold({
                appBar: new material_1.AppBar({
                    title: this.barSearch()
                }),
                body: new widgets_1.SingleChildScrollView({
                    child: new widgets_1.Container({
                        child: new widgets_1.Column({
                            children: [
                                this.infoCard(context),
                                this.serviceCard(context),
                                this.settingCard(context),
                                this.videoCard(context),
                                this.ideaCard(context)
                            ]
                        })
                    })
                })
            })
        });
        return widget;
    }
}
module.exports = {
    MyPage
};


/***/ }),

/***/ "./lib/app_demo/zhihu/zhihu.js":
/*!*************************************!*\
  !*** ./lib/app_demo/zhihu/zhihu.js ***!
  \*************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 23:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
let { Index } = __webpack_require__(/*! ./index.js */ "./lib/app_demo/zhihu/index.js");
class JSZhiHuPage extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super('JSZhiHuPage');
    }
    createState() {
        return new JSZhiHuPageState(this);
    }
}
class JSZhiHuPageState extends mxflutter_1.MXJSWidgetState {
    build(context) {
        let widget = new material_1.MaterialApp({
            title: "知乎-高仿版",
            home: new Index()
        });
        return widget;
    }
}
module.exports = {
    JSZhiHuPage
};


/***/ }),

/***/ "./lib/home_page.js":
/*!**************************!*\
  !*** ./lib/home_page.js ***!
  \**************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 425:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

//  MXFlutterFramework
//  Copyright 2019 The MXFlutter Authors. All rights reserved.
//
//  Use of this source code is governed by a MIT-style license that can be
//  found in the LICENSE file.
Object.defineProperty(exports, "__esModule", ({ value: true }));
const mxflutter_1 = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
const material_1 = __webpack_require__(/*! @tencent/mxflutter-widgets/material */ "@tencent/mxflutter-widgets/material");
// import {
//   Container,
//   Text,
//   ListView,
//   Icon,
//   IconData,
//   Row,
//   Padding,
//   Navigator,
//   Color,
//   TextAlign,
//   TextStyle
// } from '@tencent/mxflutter-widgets/widgets';
// import {
//   Color,
//   TextAlign,
//   TextStyle
// } from '@tencent/mxflutter-widgets/mx-dart-sdk';
// import {
//   EdgeInsets
// } from '@tencent/mxflutter-widgets/painting';
//业务代码
class MXJSWidgetHomePage extends mxflutter_1.MXJSStatefulWidget {
    constructor() {
        super('MXJSWidgetHomePage');
        this.data = 'biz data';
        this.count = 0;
    }
    createState() {
        return new MXJSWidgetHomePageState(this);
    }
}
class MXJSWidgetHomePageState extends mxflutter_1.MXJSWidgetState {
    initState() {
        super.initState();
        // WidgetsBinding.instance.addObserver(this);
        mxflutter_1.WidgetsFlutterBinding.ensureInitialized().addObserver(this);
    }
    didChangeAppLifecycleState(state) {
        mxflutter_1.MXJSLog.log('didChangeAppLifecycleState' + state);
    }
    dispose() {
        super.dispose();
        // WidgetsBinding.instance.removeObserver(this);
        mxflutter_1.WidgetsFlutterBinding.ensureInitialized().removeObserver(this);
    }
    build(context) {
        let demoList = new material_1.ListView({
            children: [
                this.sectionTitle(context, 'App Demo'),
                new material_1.ListTile({
                    leading: new material_1.Icon(new material_1.IconData(0xe39d, {
                        fontFamily: 'MaterialIcons'
                    }), {
                        color: material_1.Theme.of(context).primaryColor,
                    }),
                    trailing: new material_1.Icon(new material_1.IconData(0xe5df, {
                        fontFamily: 'MaterialIcons',
                        matchTextDirection: true
                    })),
                    title: new material_1.Text('Examples'),
                    subtitle: new material_1.Text('Common Examples'),
                    onTap: function () {
                        // //点击时懒加载页面
                        // let { ExamplesPage } = require('./app_demo/examples/index.js');
                        // Navigator.push(
                        //   context,
                        //   new MaterialPageRoute({
                        //     builder: function (context) {
                        //       return new ExamplesPage();
                        //     },
                        //   }),
                        // );
                    },
                }),
                new material_1.ListTile({
                    leading: new material_1.Icon(new material_1.IconData(0xe39d, {
                        fontFamily: 'MaterialIcons'
                    }), {
                        color: material_1.Theme.of(context).primaryColor,
                    }),
                    trailing: new material_1.Icon(new material_1.IconData(0xe5df, {
                        fontFamily: 'MaterialIcons',
                        matchTextDirection: true
                    })),
                    title: new material_1.Text('Widget Examples'),
                    subtitle: new material_1.Text('All Widget Examples'),
                    onTap: function () {
                        // //点击时懒加载页面
                        // let { WidgetExamplesPage } = require('./app_demo/widget_examples/index.js');
                        // Navigator.push(
                        //   context,
                        //   new MaterialPageRoute({
                        //     builder: function (context) {
                        //       return new WidgetExamplesPage();
                        //     },
                        //   }),
                        // );
                    },
                }),
                new material_1.ListTile({
                    leading: new material_1.Icon(new material_1.IconData(0xe06d, {
                        fontFamily: 'MaterialIcons'
                    }), {
                        color: material_1.Theme.of(context).primaryColor,
                    }),
                    trailing: new material_1.Icon(new material_1.IconData(0xe5df, {
                        fontFamily: 'MaterialIcons',
                        matchTextDirection: true
                    })),
                    title: new material_1.Text('Material'),
                    subtitle: new material_1.Text('Material UI Demo'),
                    onTap: function () {
                        let { JSMaterialPage } = __webpack_require__(/*! ./app_demo/material.js */ "./lib/app_demo/material.js");
                        material_1.Navigator.push(context, new material_1.MaterialPageRoute({
                            builder: function (context) {
                                return new JSMaterialPage();
                            },
                        }));
                    },
                }),
                new material_1.ListTile({
                    leading: new material_1.Icon(new material_1.IconData(0xe39d, {
                        fontFamily: 'MaterialIcons'
                    }), {
                        color: material_1.Theme.of(context).primaryColor,
                    }),
                    trailing: new material_1.Icon(new material_1.IconData(0xe5df, {
                        fontFamily: 'MaterialIcons',
                        matchTextDirection: true
                    })),
                    title: new material_1.Text('ZhiHu'),
                    subtitle: new material_1.Text('ZhiHu high copy'),
                    onTap: function () {
                        let { JSZhiHuPage } = __webpack_require__(/*! ./app_demo/zhihu/zhihu.js */ "./lib/app_demo/zhihu/zhihu.js");
                        material_1.Navigator.push(context, new material_1.MaterialPageRoute({
                            builder: function (context) {
                                return new JSZhiHuPage();
                            },
                        }));
                    },
                }),
                new material_1.ListTile({
                    leading: new material_1.Icon(new material_1.IconData(0xe39d, {
                        fontFamily: 'MaterialIcons'
                    }), {
                        color: material_1.Theme.of(context).primaryColor,
                    }),
                    trailing: new material_1.Icon(new material_1.IconData(0xe5df, {
                        fontFamily: 'MaterialIcons',
                        matchTextDirection: true
                    })),
                    title: new material_1.Text('网易新闻 ListViewDemo'),
                    subtitle: new material_1.Text('ListView ,Message Channel, Pull to refresh'),
                    onTap: function () {
                        let list_view = __webpack_require__(/*! ./app_demo/listview_example.js */ "./lib/app_demo/listview_example.js");
                        material_1.Navigator.push(context, new material_1.MaterialPageRoute({
                            builder: function (context) {
                                return new list_view.ListViewDemo();
                            },
                        }));
                    },
                }),
                new material_1.ListTile({
                    leading: new material_1.Icon(new material_1.IconData(0xe39d, {
                        fontFamily: 'MaterialIcons'
                    }), {
                        color: material_1.Theme.of(context).primaryColor,
                    }),
                    trailing: new material_1.Icon(new material_1.IconData(0xe5df, {
                        fontFamily: 'MaterialIcons',
                        matchTextDirection: true
                    })),
                    title: new material_1.Text('PlatformAPIExamples'),
                    subtitle: new material_1.Text('Network/Dio/MessageChannel'),
                    onTap: function () {
                        let { PlatformExamplesPage } = __webpack_require__(/*! ./app_demo/platform/index.js */ "./lib/app_demo/platform/index.js");
                        material_1.Navigator.push(context, new material_1.MaterialPageRoute({
                            builder: function (context) {
                                return new PlatformExamplesPage();
                            },
                        }));
                    },
                }),
                new material_1.ListTile({
                    leading: new material_1.Icon(new material_1.IconData(0xe06d, {
                        fontFamily: 'MaterialIcons'
                    }), {
                        color: material_1.Theme.of(context).primaryColor,
                    }),
                    trailing: new material_1.Icon(new material_1.IconData(0xe5df, {
                        fontFamily: 'MaterialIcons',
                        matchTextDirection: true
                    })),
                    title: new material_1.Text('Pesto'),
                    subtitle: new material_1.Text('Simple recipe browser'),
                    onTap: function () {
                        let pesto = __webpack_require__(/*! ./app_demo/pesto.js */ "./lib/app_demo/pesto.js");
                        material_1.Navigator.push(context, new material_1.MaterialPageRoute({
                            builder: function (context) {
                                return new pesto.JSPestoPage();
                            },
                        }));
                    },
                }),
                new material_1.ListTile({
                    leading: new material_1.Icon(new material_1.IconData(0xe0d0, {
                        fontFamily: 'MaterialIcons'
                    }), {
                        color: material_1.Theme.of(context).primaryColor,
                    }),
                    trailing: new material_1.Icon(new material_1.IconData(0xe5df, {
                        fontFamily: 'MaterialIcons',
                        matchTextDirection: true
                    })),
                    title: new material_1.Text('Contact profile'),
                    subtitle: new material_1.Text('Address book entry with a flexible appbar'),
                    onTap: function () {
                        let { JSContactPage } = __webpack_require__(/*! ./app_demo/contact.js */ "./lib/app_demo/contact.js");
                        material_1.Navigator.push(context, new material_1.MaterialPageRoute({
                            builder: function (context) {
                                return new JSContactPage();
                            },
                        }));
                    },
                }),
                new material_1.ListTile({
                    leading: new material_1.Icon(new material_1.IconData(0xe06d, {
                        fontFamily: 'MaterialIcons'
                    }), {
                        color: material_1.Theme.of(context).primaryColor,
                    }),
                    trailing: new material_1.Icon(new material_1.IconData(0xe5df, {
                        fontFamily: 'MaterialIcons',
                        matchTextDirection: true
                    })),
                    title: new material_1.Text('Animation'),
                    subtitle: new material_1.Text('Section organizer'),
                    onTap: function () {
                        let { JSAnimationPage } = __webpack_require__(/*! ./app_demo/animation.js */ "./lib/app_demo/animation.js");
                        material_1.Navigator.push(context, new material_1.MaterialPageRoute({
                            builder: function (context) {
                                return new JSAnimationPage();
                            },
                        }));
                    },
                }),
                new material_1.ListTile({
                    leading: new material_1.Icon(new material_1.IconData(0xe06d, {
                        fontFamily: 'MaterialIcons'
                    }), {
                        color: material_1.Theme.of(context).primaryColor,
                    }),
                    trailing: new material_1.Icon(new material_1.IconData(0xe5df, {
                        fontFamily: 'MaterialIcons',
                        matchTextDirection: true
                    })),
                    title: new material_1.Text('Tabbar'),
                    subtitle: new material_1.Text('Tabbar'),
                    onTap: function () {
                        let { ExampleWidget } = __webpack_require__(/*! ./app_demo/tabbar.js */ "./lib/app_demo/tabbar.js");
                        material_1.Navigator.push(context, new material_1.MaterialPageRoute({
                            builder: function (context) {
                                return new ExampleWidget();
                            },
                        }));
                    },
                }),
                this.sectionTitle(context, '性能测试'),
                new material_1.ListTile({
                    leading: new material_1.Icon(new material_1.IconData(0xe06d, {
                        fontFamily: 'MaterialIcons'
                    })),
                    trailing: new material_1.Icon(new material_1.IconData(0xe5df, {
                        fontFamily: 'MaterialIcons',
                        matchTextDirection: true
                    })),
                    title: new material_1.Text('Profile'),
                    subtitle: new material_1.Text('性能测试 performance profiling'),
                    onTap: function () {
                        let { ProfileExamplesPage } = __webpack_require__(/*! ./app_demo/profile/index.js */ "./lib/app_demo/profile/index.js");
                        material_1.Navigator.push(context, new material_1.MaterialPageRoute({
                            builder: function (context) {
                                return new ProfileExamplesPage();
                            },
                        }));
                    },
                }),
                // this.sectionTitle(context, "mxjsbuilder build app"),
                // new ListTile({
                //     leading: new Icon(new IconData(0xe39d, { fontFamily: 'MaterialIcons' })),
                //     trailing: new Icon(new IconData(0xe5df, { fontFamily: 'MaterialIcons', matchTextDirection: true })),
                //     title: new Text('FlutterDemo'),
                //     subtitle: new Text('简单样例'),
                //     onTap: function () {
                //         let flutter_demo_ddc = require("./mxjsbuilder_demo/flutter_demo.dart.lib.js");
                //         Navigator.push(context, new MaterialPageRoute({
                //             builder: function (context) {
                //                 return new flutter_demo_ddc.main.MyHomePage.new({ title: "Flutter Demo Home Page" });
                //             }
                //         }))
                //     }
                // }),
                // new ListTile({
                //     leading: new Icon(new IconData(0xe39d, { fontFamily: 'MaterialIcons' })),
                //     trailing: new Icon(new IconData(0xe5df, { fontFamily: 'MaterialIcons', matchTextDirection: true })),
                //     title: new Text('ContactDemo'),
                //     subtitle: new Text('联系人'),
                //     onTap: function () {
                //         let contact_demo_ddc = require("./mxjsbuilder_demo/contacts_demo.dart.lib.js");
                //         Navigator.push(context, new MaterialPageRoute({
                //             builder: function (context) {
                //                 return new contact_demo_ddc.contacts_demo.ContactsDemo.new;
                //             }
                //         }))
                //     }
                // }),
                // new ListTile({
                //     leading: new Icon(new IconData(0xe39d, { fontFamily: 'MaterialIcons' })),
                //     trailing: new Icon(new IconData(0xe5df, { fontFamily: 'MaterialIcons', matchTextDirection: true })),
                //     title: new Text('PestoDemo'),
                //     subtitle: new Text('菜谱'),
                //     onTap: function () {
                //         let pesto_demo_ddc = require("./mxjsbuilder_demo/pesto_demo.dart.lib.js");
                //         Navigator.push(context, new MaterialPageRoute({
                //             builder: function (context) {
                //                 return new pesto_demo_ddc.pesto_demo.PestoDemo.new;
                //             }
                //         }))
                //     }
                // }),
                // new ListTile({
                //     leading: new Icon(new IconData(0xe39d, { fontFamily: 'MaterialIcons' })),
                //     trailing: new Icon(new IconData(0xe5df, { fontFamily: 'MaterialIcons', matchTextDirection: true })),
                //     title: new Text('ZhiHu'),
                //     subtitle: new Text('知乎-高仿版'),
                //     onTap: function () {
                //         const packages__zhihu__index = require('./mxjsbuilder_demo/packages/zhihu/index/index.dart.lib.js');
                //         const index_page = packages__zhihu__index.index__index;
                //         Navigator.push(context, new MaterialPageRoute({
                //             builder: function (context) {
                //                 return new index_page.Index.new;
                //             }
                //         }))
                //     }
                // }),
                this.sectionTitle(context, 'Dart JS Api'),
                new material_1.ListTile({
                    leading: new material_1.Icon(new material_1.IconData(0xe39d, {
                        fontFamily: 'MaterialIcons'
                    })),
                    trailing: new material_1.Icon(new material_1.IconData(0xe5df, {
                        fontFamily: 'MaterialIcons',
                        matchTextDirection: true
                    })),
                    title: new material_1.Text('Dart JS Api'),
                    subtitle: new material_1.Text('JS Call Dart Function'),
                    onTap: function () {
                        let { PageExampleJSApi } = __webpack_require__(/*! ./app_demo/custom_js_api.js */ "./lib/app_demo/custom_js_api.js");
                        material_1.Navigator.push(context, new material_1.MaterialPageRoute({
                            builder: function (context) {
                                return new PageExampleJSApi();
                            },
                        }));
                    },
                }),
            ],
        });
        let w = new material_1.Scaffold({
            appBar: new material_1.AppBar({
                title: new material_1.Text('MXFlutter Examples'),
            }),
            body: demoList,
        });
        return w;
    }
    sectionTitle(context, title) {
        return new HomeSectionTitle(title);
    }
}
class HomeSectionTitle extends mxflutter_1.MXJSStatelessWidget {
    constructor(title, { key } = {}) {
        super('HomeSectionTitle', {
            key: key
        });
        this.title = title;
    }
    build(context) {
        return new material_1.Container({
            padding: material_1.EdgeInsets.all(10.0),
            color: material_1.Theme.of(context).primaryColor,
            child: new material_1.Row({
                children: [
                    new material_1.Icon(new material_1.IconData(0xe80e, {
                        fontFamily: 'MaterialIcons'
                    }), {
                        size: 20,
                        color: new material_1.Color(0xffffffff)
                    }),
                    new material_1.Padding({
                        padding: material_1.EdgeInsets.fromLTRB(10.0, 0.0, 0.0, 0.0)
                    }),
                    new material_1.Text(this.title, {
                        textAlign: material_1.TextAlign.start,
                        style: new material_1.TextStyle({
                            fontSize: 16,
                            fontWeight: material_1.Theme.of(context).textTheme.subtitle1.fontWeight,
                            color: material_1.Colors.white,
                        }),
                    }),
                ],
            }),
        });
    }
}
module.exports = {
    MXJSWidgetHomePage
};


/***/ }),

/***/ "../mxflutter-packages/mxflutter-cached-network-image/index.js":
/*!*********************************************************************!*\
  !*** ../mxflutter-packages/mxflutter-cached-network-image/index.js ***!
  \*********************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 2:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var widgetExports = __webpack_require__(/*! ./lib/cached_network_image */ "../mxflutter-packages/mxflutter-cached-network-image/lib/cached_network_image.js");
module.exports = widgetExports;


/***/ }),

/***/ "../mxflutter-packages/mxflutter-cached-network-image/lib/cached_network_image.js":
/*!****************************************************************************************!*\
  !*** ../mxflutter-packages/mxflutter-cached-network-image/lib/cached_network_image.js ***!
  \****************************************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 48:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

//  MXFlutterFramework
//  Copyright 2019 The MXFlutter Authors. All rights reserved.
//
//  Use of this source code is governed by a MIT-style license that can be
//  found in the LICENSE file.
const { MXMirrorWidget } = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
class CachedNetworkImage extends MXMirrorWidget {
    constructor({ key, imageUrl, imageBuilder, placeholder, errorWidget, fadeOutDuration, fadeOutCurve, fadeInDuration, fadeInCurve, width, height, fit, alignment, repeat, matchTextDirection, httpHeaders, cacheManager, useOldImageOnUrlChange, color, filterQuality, colorBlendMode, placeholderFadeInDuration, } = {}) {
        super();
        this.key = key;
        this.imageUrl = imageUrl;
        this.imageBuilder = imageBuilder;
        this.placeholder = placeholder;
        this.errorWidget = errorWidget;
        this.fadeOutDuration = fadeOutDuration;
        this.fadeOutCurve = fadeOutCurve;
        this.fadeInDuration = fadeInDuration;
        this.fadeInCurve = fadeInCurve;
        this.width = width;
        this.height = height;
        this.fit = fit;
        this.alignment = alignment;
        this.repeat = repeat;
        this.matchTextDirection = matchTextDirection;
        this.httpHeaders = httpHeaders;
        this.cacheManager = cacheManager;
        this.useOldImageOnUrlChange = useOldImageOnUrlChange;
        this.color = color;
        this.filterQuality = filterQuality;
        this.colorBlendMode = colorBlendMode;
        this.placeholderFadeInDuration = placeholderFadeInDuration;
    }
    preBuild(buildContext) {
        // 暂时只处理placeholder
        if (this.placeholder) {
            this.placeholderChild = this.placeholder(buildContext, this.imageUrl);
            delete this.placeholder;
        }
    }
}
CachedNetworkImage.new = function (arg) {
    return new CachedNetworkImage(arg);
};
// src__cached_image_widget = Object.create(null);
// src__cached_image_widget.CachedNetworkImage = CachedNetworkImage;
// exports.src__cached_image_widget = src__cached_image_widget;
//for js dev
module.exports = {
    CachedNetworkImage,
};


/***/ }),

/***/ "../mxflutter-packages/mxflutter-dio/index.js":
/*!****************************************************!*\
  !*** ../mxflutter-packages/mxflutter-dio/index.js ***!
  \****************************************************/
/*! default exports */
/*! export BaseOptions [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Dio [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Headers [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Options [provided] [no usage info] [missing usage info prevents renaming] */
/*! export RequestOptions [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Response [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ResponseType [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


var packages__mxdio = __webpack_require__(/*! ./lib/mxdio */ "../mxflutter-packages/mxflutter-dio/lib/mxdio.js");
exports.Dio = packages__mxdio.MXDio;
exports.BaseOptions = packages__mxdio.MXBaseOptions
exports.Options = packages__mxdio.MXOptions;
exports.Headers = packages__mxdio.MXHeaders;
exports.Response = packages__mxdio.MXResponse;
exports.RequestOptions = packages__mxdio.MXRequestOptions
exports.ResponseType = packages__mxdio.MXResponseType;


/***/ }),

/***/ "../mxflutter-packages/mxflutter-dio/lib/mxdio.js":
/*!********************************************************!*\
  !*** ../mxflutter-packages/mxflutter-dio/lib/mxdio.js ***!
  \********************************************************/
/*! default exports */
/*! export MXBaseOptions [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXDio [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXHeaders [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXOptions [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXRequestOptions [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXResponse [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXResponseType [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

//  MXFlutterFramework
//  Copyright 2019 The MXFlutter Authors. All rights reserved.
//
//  Use of this source code is governed by a MIT-style license that can be
//  found in the LICENSE file.
const { MXDartClass, MXLifecycleDartClass, MXMirrorObjMethodCall, MXJSLog } = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
MXResponseType = {
    json: { _name: 'ResponseType.json', index: 0 },
    stream: { _name: 'ResponseType.stream', index: 1 },
    plain: { _name: 'ResponseType.plain', index: 2 },
    bytes: { _name: 'ResponseType.bytes', index: 3 },
};
class MXBaseOptions extends MXDartClass {
    constructor({ method, connectTimeout, receiveTimeout, sendTimeout, baseUrl, queryParameters, extra, headers, responseType, contentType, validateStatus, receiveDataWhenStatusError, followRedirects, maxRedirects, } = {}) {
        super();
        this.className = 'BaseOptions';
        this.method = method;
        this.connectTimeout = connectTimeout;
        this.receiveTimeout = receiveTimeout;
        this.sendTimeout = sendTimeout;
        this.baseUrl = baseUrl;
        this.queryParameters = queryParameters;
        this.extra = extra;
        this.headers = headers;
        this.responseType = responseType;
        this.contentType = contentType;
        this.validateStatus = validateStatus;
        this.receiveDataWhenStatusError = receiveDataWhenStatusError;
        this.followRedirects = followRedirects;
        this.maxRedirects = maxRedirects;
    }
}
class MXOptions extends MXDartClass {
    constructor({ method, sendTimeout, receiveTimeout, extra, headers, responseType, contentType, validateStatus, receiveDataWhenStatusError, followRedirects, maxRedirects, } = {}) {
        super();
        this.className = 'Options';
        this.method = method;
        this.sendTimeout = sendTimeout;
        this.receiveTimeout = receiveTimeout;
        this.extra = extra;
        this.headers = headers;
        this.responseType = responseType;
        this.contentType = contentType;
        this.validateStatus = validateStatus;
        this.receiveDataWhenStatusError = receiveDataWhenStatusError;
        this.followRedirects = followRedirects;
        this.maxRedirects = maxRedirects;
        // this.requestEncoder = requestEncoder;
        // this.responseDecoder = responseDecoder;
    }
}
class MXRequestOptions extends MXDartClass {
    constructor({ method, sendTimeout, receiveTimeout, connectTimeout, data, path, queryParameters, baseUrl, extra, headers, responseType, contentType, validateStatus, receiveDataWhenStatusError, followRedirects, maxRedirects, } = {}) {
        super();
        this.className = 'RequestOptions';
        this.method = method;
        this.sendTimeout = sendTimeout;
        this.receiveTimeout = receiveTimeout;
        this.connectTimeout = connectTimeout;
        this.data = data;
        this.path = path;
        this.queryParameters = queryParameters;
        this.baseUrl = baseUrl;
        this.extra = extra;
        this.headers = headers;
        this.responseType = responseType;
        this.contentType = contentType;
        this.validateStatus = validateStatus;
        this.receiveDataWhenStatusError = receiveDataWhenStatusError;
        this.followRedirects = followRedirects;
        this.maxRedirects = maxRedirects;
    }
}
class MXHeaders {
    constructor({ map } = {}) {
        this.map = map;
    }
    /// Convenience method for the value for a single valued header. If
    /// there is no header with the provided name, [:null:] will be
    /// returned. If the header has more than one value an exception is
    /// thrown.
    value(name) {
        let arr = this.map[name];
        if (arr == null)
            return null;
        if (arr.length == 1)
            return arr[0];
        throw Exception('"$name" header has more than one value, please use Headers[name]');
    }
}
MXHeaders.acceptHeader = 'accept';
MXHeaders.contentEncodingHeader = 'content-encoding';
MXHeaders.contentLengthHeader = 'content-length';
MXHeaders.contentTypeHeader = 'content-type';
MXHeaders.wwwAuthenticateHeader = 'www-authenticate';
// Header field value
MXHeaders.jsonContentType = 'application/json; charset=utf-8';
MXHeaders.formUrlEncodedContentType = 'application/x-www-form-urlencoded';
class MXResponse extends MXDartClass {
    constructor({ data, headers, request, isRedirect, statusCode, statusMessage, redirects, extra } = {}) {
        super();
        this.className = 'Response';
        this.data = data;
        this.headers = headers;
        this.request = request;
        this.isRedirect = isRedirect;
        this.statusCode = statusCode;
        this.statusMessage = statusMessage;
        this.redirects = redirects;
        this.extra = extra;
    }
    static fromJSON(jsonMap) {
        let resp = new MXResponse();
        resp.data = jsonMap['data'];
        resp.headers = new MXHeaders(jsonMap['headers']);
        resp.request = jsonMap['request'];
        resp.isRedirect = jsonMap['isRedirect'];
        resp.statusCode = jsonMap['statusCode'];
        resp.statusMessage = jsonMap['statusMessage'];
        resp.redirects = jsonMap['redirects'];
        resp.extra = jsonMap['extra'];
        return resp;
    }
}
///为了iOS / Android 双平台同时支持，用Flutter层能力来实现网络
class MXDio extends MXLifecycleDartClass {
    constructor(baseOptions) {
        //创建对应FLutter对象
        var argument = new MXMirrorObjMethodCall({
            className: 'Dio',
            args: {
                baseOptions: baseOptions,
            },
        });
        super(argument);
    }
    get(path, { queryParameters, options, 
    //cancelToken,
    onReceiveProgress, } = {}) {
        return this.request(path, {
            options: this.checkOptions('get', options),
            queryParameters: queryParameters,
            //cancelToken: cancelToken,
            onReceiveProgress: onReceiveProgress,
        });
    }
    post(path, { data, queryParameters, // Map<String, dynamic>
    options, //Options
    //cancelToken,
    onSendProgress, //ProgressCallback
    onReceiveProgress, } = {}) {
        return this.request(path, {
            data: data,
            options: this.checkOptions('post', options),
            queryParameters: queryParameters,
            //cancelToken: cancelToken,
            onSendProgress: onSendProgress,
            onReceiveProgress: onReceiveProgress,
        });
    }
    request(path, { data, queryParameters, // Map<String, dynamic>
    options, //Options
    onSendProgress, //ProgressCallback
    onReceiveProgress, } = {}) {
        let onSendProgressCallbackID = this.addCallback(onSendProgress);
        let onReceiveProgressCallbackID = this.addCallback(onReceiveProgress);
        let argument = new MXMirrorObjMethodCall({
            className: 'Dio',
            funcName: 'request',
            args: {
                path: path,
                data: data,
                options: options,
                queryParameters: queryParameters,
                onSendProgress: onSendProgressCallbackID,
                onReceiveProgress: onReceiveProgressCallbackID,
            },
        });
        let that = this;
        let promiseResult = new Promise(function (resolve, reject) {
            that.invokeMirrorObjMethod(argument, function (value) {
                if (value != null) {
                    let jsonMap = JSON.parse(value);
                    let response = MXResponse.fromJSON(jsonMap);
                    if (response) {
                        response.options = options;
                    }
                    if (options.responseType == MXResponseType.bytes) {
                        response.data = convert.base64Encode(response.data);
                    }
                    resolve(response);
                }
                else {
                    resolve(null);
                }
                setTimeout(function () {
                    that.removeCallback(onSendProgressCallbackID);
                    that.removeCallback(onReceiveProgressCallbackID);
                }, 1000);
            });
        });
        return promiseResult;
    }
    checkOptions(method, options) {
        options = options ? options : new MXOptions();
        options.method = method;
        return options;
    }
}
function MXFDio(baseOptions) {
    return new MXDio(baseOptions);
}
//手写JS使用的导出
exports.MXDio = MXFDio;
exports.MXBaseOptions = MXBaseOptions;
exports.MXOptions = MXOptions;
exports.MXHeaders = MXHeaders;
exports.MXResponse = MXResponse;
exports.MXRequestOptions = MXRequestOptions;
exports.MXResponseType = MXResponseType;


/***/ }),

/***/ "../mxflutter-packages/mxflutter-pull-to-refresh/index.js":
/*!****************************************************************!*\
  !*** ../mxflutter-packages/mxflutter-pull-to-refresh/index.js ***!
  \****************************************************************/
/*! default exports */
/*! export ClassicFooter [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ClassicHeader [provided] [no usage info] [missing usage info prevents renaming] */
/*! export IconPosition [provided] [no usage info] [missing usage info prevents renaming] */
/*! export LoadStatus [provided] [no usage info] [missing usage info prevents renaming] */
/*! export LoadStyle [provided] [no usage info] [missing usage info prevents renaming] */
/*! export RefreshConfiguration [provided] [no usage info] [missing usage info prevents renaming] */
/*! export RefreshController [provided] [no usage info] [missing usage info prevents renaming] */
/*! export RefreshStatus [provided] [no usage info] [missing usage info prevents renaming] */
/*! export SmartRefresher [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


var smartRefresherExports = __webpack_require__(/*! ./lib/smart_refresher.js */ "../mxflutter-packages/mxflutter-pull-to-refresh/lib/smart_refresher.js");
var classIndicatorExports = __webpack_require__(/*! ./lib/indicator/class_indicator.js */ "../mxflutter-packages/mxflutter-pull-to-refresh/lib/indicator/class_indicator.js");

exports.SmartRefresher = smartRefresherExports.SmartRefresher;
exports.RefreshController = smartRefresherExports.RefreshController;
exports.RefreshConfiguration = smartRefresherExports.RefreshConfiguration;
exports.LoadStatus = smartRefresherExports.LoadStatus;
exports.LoadStyle = smartRefresherExports.LoadStyle;
exports.IconPosition = smartRefresherExports.IconPosition;
exports.RefreshStatus = smartRefresherExports.RefreshStatus;

exports.ClassicHeader = classIndicatorExports.ClassicHeader;
exports.ClassicFooter = classIndicatorExports.ClassicFooter;


/***/ }),

/***/ "../mxflutter-packages/mxflutter-pull-to-refresh/lib/indicator/class_indicator.js":
/*!****************************************************************************************!*\
  !*** ../mxflutter-packages/mxflutter-pull-to-refresh/lib/indicator/class_indicator.js ***!
  \****************************************************************************************/
/*! default exports */
/*! export ClassicFooter [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ClassicHeader [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

//  MXFlutterFramework
//  Copyright 2019 The MXFlutter Authors. All rights reserved.
//
//  Use of this source code is governed by a MIT-style license that can be
//  found in the LICENSE file.
const { MXMirrorWidget, MXLifecycleWidgetBase, MXMirrorObjMethodCall } = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
class ClassicHeader extends MXMirrorWidget {
    constructor({ key, refreshStyle, height, completeDuration, outerBuilder, textStyle, releaseText, refreshingText, canTwoLevelIcon, twoLevelView, canTwoLevelText, completeText, failedText, idleText, iconPos, spacing, refreshingIcon, failedIcon, completeIcon, idleIcon, releaseIcon, } = {}) {
        super();
        this.key = key;
        this.refreshStyle = refreshStyle;
        this.height = height;
        this.completeDuration = completeDuration;
        this.outerBuilder = outerBuilder;
        this.textStyle = textStyle;
        this.releaseText = releaseText;
        this.refreshingText = refreshingText;
        this.canTwoLevelIcon = canTwoLevelIcon;
        this.twoLevelView = twoLevelView;
        this.canTwoLevelText = canTwoLevelText;
        this.completeText = completeText;
        this.failedText = failedText;
        this.idleText = idleText;
        this.iconPos = iconPos;
        this.spacing = spacing;
        this.refreshingIcon = refreshingIcon;
        this.failedIcon = failedIcon;
        this.completeIcon = completeIcon;
        this.idleIcon = idleIcon;
        this.releaseIcon = releaseIcon;
    }
}
ClassicHeader.new = function (arg) {
    return new ClassicHeader(arg);
};
class ClassicFooter extends MXMirrorWidget {
    constructor({ key, onClick, loadStyle, height, outerBuilder, textStyle, loadingText, noDataText, noMoreIcon, idleText, failedText, canLoadingText, failedIcon, iconPos, spacing, completeDuration, loadingIcon, canLoadingIcon, idleIcon, } = {}) {
        super();
        this.key = key;
        this.onClick = onClick;
        this.loadStyle = loadStyle;
        this.height = height;
        this.outerBuilder = outerBuilder;
        this.textStyle = textStyle;
        this.loadingText = loadingText;
        this.noDataText = noDataText;
        this.noMoreIcon = noMoreIcon;
        this.idleText = idleText;
        this.failedText = failedText;
        this.canLoadingText = canLoadingText;
        this.failedIcon = failedIcon;
        this.iconPos = iconPos;
        this.spacing = spacing;
        this.completeDuration = completeDuration;
        this.loadingIcon = loadingIcon;
        this.canLoadingIcon = canLoadingIcon;
        this.idleIcon = idleIcon;
    }
}
ClassicFooter.new = function (arg) {
    return new ClassicFooter(arg);
};
// src__indicator__classic_indicator = Object.create(null);
// src__indicator__classic_indicator.ClassicHeader = ClassicHeader;
// src__indicator__classic_indicator.ClassicFooter = ClassicFooter;
// exports.src__indicator__classic_indicator = src__indicator__classic_indicator;
exports.ClassicHeader = ClassicHeader;
exports.ClassicFooter = ClassicFooter;


/***/ }),

/***/ "../mxflutter-packages/mxflutter-pull-to-refresh/lib/smart_refresher.js":
/*!******************************************************************************!*\
  !*** ../mxflutter-packages/mxflutter-pull-to-refresh/lib/smart_refresher.js ***!
  \******************************************************************************/
/*! default exports */
/*! export IconPosition [provided] [no usage info] [missing usage info prevents renaming] */
/*! export LoadStatus [provided] [no usage info] [missing usage info prevents renaming] */
/*! export LoadStyle [provided] [no usage info] [missing usage info prevents renaming] */
/*! export RefreshConfiguration [provided] [no usage info] [missing usage info prevents renaming] */
/*! export RefreshController [provided] [no usage info] [missing usage info prevents renaming] */
/*! export RefreshStatus [provided] [no usage info] [missing usage info prevents renaming] */
/*! export SmartRefresher [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

//  MXFlutterFramework
//  Copyright 2019 The MXFlutter Authors. All rights reserved.
//
//  Use of this source code is governed by a MIT-style license that can be
//  found in the LICENSE file.
const { MXMirrorWidget, MXLifecycleWidgetBase, MXMirrorObjMethodCall } = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter");
LoadStatus = {
    start: {
        _name: "CrossAxisAlignment.idle",
        index: 0
    },
    end: {
        _name: "CrossAxisAlignment.canLoading",
        index: 1
    },
    center: {
        _name: "CrossAxisAlignment.loading",
        index: 2
    },
    stretch: {
        _name: "CrossAxisAlignment.noMore",
        index: 3
    },
    baseline: {
        _name: "CrossAxisAlignment.failed",
        index: 4
    }
};
class RefreshConfiguration extends MXMirrorWidget {
    constructor({ child, headerBuilder, footerBuilder, dragSpeedRatio, shouldFooterFollowWhenNotFull, enableScrollWhenTwoLevel, enableLoadingWhenNoData, enableBallisticRefresh, springDescription, enableScrollWhenRefreshCompleted, enableLoadingWhenFailed, twiceTriggerDistance, closeTwoLevelDistance, skipCanRefresh, autoLoad, maxOverScrollExtent, enableBallisticLoad, maxUnderScrollExtent, headerTriggerDistance, footerTriggerDistance, hideFooterWhenNotFull, topHitBoundary, bottomHitBoundary, } = {}) {
        super();
        this.child = child;
        this.headerBuilder = headerBuilder;
        this.footerBuilder = footerBuilder;
        this.dragSpeedRatio = dragSpeedRatio;
        this.shouldFooterFollowWhenNotFull = shouldFooterFollowWhenNotFull;
        this.enableScrollWhenTwoLevel = enableScrollWhenTwoLevel;
        this.enableLoadingWhenNoData = enableLoadingWhenNoData;
        this.enableBallisticRefresh = enableBallisticRefresh;
        this.springDescription = springDescription;
        this.enableScrollWhenRefreshCompleted = enableScrollWhenRefreshCompleted;
        this.enableLoadingWhenFailed = enableLoadingWhenFailed;
        this.twiceTriggerDistance = twiceTriggerDistance;
        this.closeTwoLevelDistance = closeTwoLevelDistance;
        this.skipCanRefresh = skipCanRefresh;
        this.autoLoad = autoLoad;
        this.maxOverScrollExtent = maxOverScrollExtent;
        this.enableBallisticLoad = enableBallisticLoad;
        this.maxUnderScrollExtent = maxUnderScrollExtent;
        this.headerTriggerDistance = headerTriggerDistance;
        this.footerTriggerDistance = footerTriggerDistance;
        this.hideFooterWhenNotFull = hideFooterWhenNotFull;
        this.topHitBoundary = topHitBoundary;
        this.bottomHitBoundary = bottomHitBoundary;
    }
    preBuild(buildContext) {
        if (this.headerBuilder) {
            this.headerBuilderChild = this.headerBuilder();
            delete this.headerBuilder;
        }
        if (this.footerBuilder) {
            this.footerBuilderChild = this.footerBuilder();
            delete this.footerBuilder;
        }
    }
}
RefreshConfiguration.new = function (arg) {
    return new RefreshConfiguration(arg);
};
class SmartRefresher extends MXMirrorWidget {
    constructor({ key, controller, child, header, footer, enablePullDown, enablePullUp, enableTwoLevel, onRefresh, onLoading, onTwoLevel, onOffsetChange, dragStartBehavior, primary, cacheExtent, semanticChildCount, reverse, physics, scrollDirection, scrollController, } = {}) {
        super();
        this.key = key;
        this.controller = controller;
        this.child = child;
        this.header = header;
        this.footer = footer;
        this.enablePullDown = enablePullDown;
        this.enablePullUp = enablePullUp;
        this.enableTwoLevel = enableTwoLevel;
        this.onRefresh = onRefresh;
        this.onLoading = onLoading;
        this.onTwoLevel = onTwoLevel;
        this.onOffsetChange = onOffsetChange;
        this.dragStartBehavior = dragStartBehavior;
        this.primary = primary;
        this.cacheExtent = cacheExtent;
        this.semanticChildCount = semanticChildCount;
        this.reverse = reverse;
        this.physics = physics;
        this.scrollDirection = scrollDirection;
        this.scrollController = scrollController;
    }
}
SmartRefresher.new = function (arg) {
    return new SmartRefresher(arg);
};
LoadStyle = {
    ShowAlways: {
        _name: "LoadStyle.ShowAlways",
        index: 0
    },
    HideAlways: {
        _name: "LoadStyle.HideAlways",
        index: 1
    },
    ShowWhenLoading: {
        _name: "LoadStyle.ShowWhenLoading",
        index: 2
    },
};
IconPosition = {
    left: {
        _name: "IconPosition.left",
        index: 0
    },
    right: {
        _name: "IconPosition.right",
        index: 1
    },
    top: {
        _name: "IconPosition.top",
        index: 2
    },
    bottom: {
        _name: "IconPosition.bottom",
        index: 3
    },
};
class RefreshController extends MXLifecycleWidgetBase {
    constructor({ initialRefresh, initialRefreshStatus, initialLoadStatus, } = {}) {
        super();
        this.initialRefresh = initialRefresh;
        this.initialRefreshStatus = initialRefreshStatus;
        this.initialLoadStatus = initialLoadStatus;
    }
    /// request complete,the header will enter complete state,
    ///
    /// resetFooterState : it will set the footer state from noData to idle
    refreshCompleted({ resetFooterState = false } = {}) {
        var argument = new MXMirrorObjMethodCall({
            mirrorID: this.mirrorID,
            className: "RefreshController",
            funcName: "refreshCompleted",
            args: arguments
        });
        this.invokeMirrorObjMethod(argument);
    }
    /// end twoLeveling,will return back first floor
    twoLevelComplete({ duration = new Duration({ milliseconds: 500 }), curve } = {}) {
        var argument = new MXMirrorObjMethodCall({
            mirrorID: this.mirrorID,
            className: "RefreshController",
            funcName: "twoLevelComplete",
            args: arguments
        });
        this.invokeMirrorObjMethod(argument);
    }
    /// request failed,the header display failed state
    refreshFailed() {
        var argument = new MXMirrorObjMethodCall({
            mirrorID: this.mirrorID,
            className: "RefreshController",
            funcName: "refreshFailed",
            args: arguments
        });
        this.invokeMirrorObjMethod(argument);
    }
    /// not show success or failed, it will set header state to idle and spring back at once
    refreshToIdle() {
        var argument = new MXMirrorObjMethodCall({
            mirrorID: this.mirrorID,
            className: "RefreshController",
            funcName: "refreshToIdle",
            args: arguments
        });
        this.invokeMirrorObjMethod(argument);
    }
    loadComplete() {
        var argument = new MXMirrorObjMethodCall({
            mirrorID: this.mirrorID,
            className: "RefreshController",
            funcName: "loadComplete",
            args: {}
        });
        this.invokeMirrorObjMethod(argument);
    }
    loadFailed() {
        var argument = new MXMirrorObjMethodCall({
            mirrorID: this.mirrorID,
            className: "RefreshController",
            funcName: "loadFailed",
            args: {}
        });
        this.invokeMirrorObjMethod(argument);
    }
    loadNoData() {
        var argument = new MXMirrorObjMethodCall({
            mirrorID: this.mirrorID,
            className: "RefreshController",
            funcName: "loadNoData",
            args: {}
        });
        this.invokeMirrorObjMethod(argument);
    }
    resetNoData() {
        var argument = new MXMirrorObjMethodCall({
            mirrorID: this.mirrorID,
            className: "RefreshController",
            funcName: "resetNoData",
            args: {}
        });
        this.invokeMirrorObjMethod(argument);
    }
    dispose() {
        var argument = new MXMirrorObjMethodCall({
            mirrorID: this.mirrorID,
            className: "RefreshController",
            funcName: "dispose",
            args: {}
        });
        this.invokeMirrorObjMethod(argument);
    }
}
RefreshController.new = function (arg) {
    return new RefreshController(arg);
};
RefreshStatus = {
    idle: { _name: "RefreshStatus.idle", index: 0 },
    canRefresh: { _name: "RefreshStatus.canRefresh", index: 1 },
    refreshing: { _name: "RefreshStatus.refreshing", index: 2 },
    completed: { _name: "RefreshStatus.completed", index: 3 },
    failed: { _name: "RefreshStatus.failed", index: 4 },
    canTwoLevel: { _name: "RefreshStatus.canTwoLevel", index: 5 },
    twoLevelOpening: { _name: "RefreshStatus.twoLevelOpening", index: 6 },
    twoLeveling: { _name: "RefreshStatus.twoLeveling", index: 7 },
    twoLevelClosing: { _name: "RefreshStatus.twoLevelClosing", index: 8 },
};
// src__smart_refresher = Object.create(null);
// src__smart_refresher.SmartRefresher = SmartRefresher;
// src__smart_refresher.RefreshConfiguration = RefreshConfiguration;
// src__smart_refresher.RefreshController = RefreshController;
// src__smart_refresher.LoadStatus = LoadStatus;
// src__smart_refresher.LoadStyle = LoadStyle;
// src__smart_refresher.IconPosition = IconPosition;
// src__smart_refresher.RefreshStatus = RefreshStatus;
// exports.src__smart_refresher = src__smart_refresher;
exports.SmartRefresher = SmartRefresher;
exports.RefreshController = RefreshController;
exports.RefreshConfiguration = RefreshConfiguration;
exports.LoadStatus = LoadStatus;
exports.LoadStyle = LoadStyle;
exports.IconPosition = IconPosition;
exports.RefreshStatus = RefreshStatus;


/***/ }),

/***/ "@tencent/mxflutter":
/*!****************************************************!*\
  !*** external "globalThis.MXFlutterSDK.MXFlutter" ***!
  \****************************************************/
/*! dynamic exports */
/*! exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
module.exports = globalThis.MXFlutterSDK.MXFlutter;

/***/ }),

/***/ "@tencent/mxflutter-widgets/animation":
/*!*********************************************************************!*\
  !*** external "globalThis.MXFlutterSDK.MXFlutterWidgets.animation" ***!
  \*********************************************************************/
/*! dynamic exports */
/*! exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
module.exports = globalThis.MXFlutterSDK.MXFlutterWidgets.animation;

/***/ }),

/***/ "@tencent/mxflutter-widgets/foundation":
/*!**********************************************************************!*\
  !*** external "globalThis.MXFlutterSDK.MXFlutterWidgets.foundation" ***!
  \**********************************************************************/
/*! dynamic exports */
/*! exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
module.exports = globalThis.MXFlutterSDK.MXFlutterWidgets.foundation;

/***/ }),

/***/ "@tencent/mxflutter-widgets/material":
/*!********************************************************************!*\
  !*** external "globalThis.MXFlutterSDK.MXFlutterWidgets.material" ***!
  \********************************************************************/
/*! dynamic exports */
/*! exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
module.exports = globalThis.MXFlutterSDK.MXFlutterWidgets.material;

/***/ }),

/***/ "@tencent/mxflutter-widgets/mx-dart-sdk":
/*!*********************************************************************!*\
  !*** external "globalThis.MXFlutterSDK.MXFlutterWidgets.mxDartSdk" ***!
  \*********************************************************************/
/*! dynamic exports */
/*! exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
module.exports = globalThis.MXFlutterSDK.MXFlutterWidgets.mxDartSdk;

/***/ }),

/***/ "@tencent/mxflutter-widgets/painting":
/*!********************************************************************!*\
  !*** external "globalThis.MXFlutterSDK.MXFlutterWidgets.painting" ***!
  \********************************************************************/
/*! dynamic exports */
/*! exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
module.exports = globalThis.MXFlutterSDK.MXFlutterWidgets.painting;

/***/ }),

/***/ "@tencent/mxflutter-widgets/rendering":
/*!*********************************************************************!*\
  !*** external "globalThis.MXFlutterSDK.MXFlutterWidgets.rendering" ***!
  \*********************************************************************/
/*! dynamic exports */
/*! exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
module.exports = globalThis.MXFlutterSDK.MXFlutterWidgets.rendering;

/***/ }),

/***/ "@tencent/mxflutter-widgets/services":
/*!********************************************************************!*\
  !*** external "globalThis.MXFlutterSDK.MXFlutterWidgets.services" ***!
  \********************************************************************/
/*! dynamic exports */
/*! exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
module.exports = globalThis.MXFlutterSDK.MXFlutterWidgets.services;

/***/ }),

/***/ "@tencent/mxflutter-widgets/widgets":
/*!*******************************************************************!*\
  !*** external "globalThis.MXFlutterSDK.MXFlutterWidgets.widgets" ***!
  \*******************************************************************/
/*! dynamic exports */
/*! exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
module.exports = globalThis.MXFlutterSDK.MXFlutterWidgets.widgets;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
(() => {
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_require__ */
var mxflutter = __webpack_require__(/*! @tencent/mxflutter */ "@tencent/mxflutter").default;
var homePageModule = __webpack_require__(/*! ./lib/home_page */ "./lib/home_page.js");

mxflutter.regist({
  name: 'mxflutter-js-demo',
  RootWidget: homePageModule.MXJSWidgetHomePage,
});
})();

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,