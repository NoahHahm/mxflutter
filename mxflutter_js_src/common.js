exports.id = "common";
exports.ids = ["common"];
exports.modules = {

/***/ "./node_modules/@tencent/mxflutter-widgets/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@tencent/mxflutter-widgets/index.js ***!
  \**********************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

let animationExports = __webpack_require__(/*! ./lib/js_flutter_animation */ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_animation.js");
let basicExports = __webpack_require__(/*! ./lib/js_flutter_basic_types */ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_basic_types.js");
let contextExports = __webpack_require__(/*! ./lib/js_flutter_context */ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_context.js");
let cupertinoExports = __webpack_require__(/*! ./lib/js_flutter_cupertino */ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_cupertino.js");
let iconsExports = __webpack_require__(/*! ./lib/js_flutter_icons */ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_icons.js");
let imageExports = __webpack_require__(/*! ./lib/js_flutter_image */ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_image.js");
let layoutExports = __webpack_require__(/*! ./lib/js_flutter_layout */ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_layout.js");
let materialExports = __webpack_require__(/*! ./lib/js_flutter_material */ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_material.js");
let textExports = __webpack_require__(/*! ./lib/js_flutter_text */ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_text.js");
let widgetExports = __webpack_require__(/*! ./lib/js_flutter_widget */ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_widget.js");

module.exports = Object.assign(
  animationExports,
  basicExports,
  contextExports,
  cupertinoExports,
  iconsExports,
  imageExports,
  layoutExports,
  materialExports,
  textExports,
  widgetExports,
);


/***/ }),

/***/ "./node_modules/@tencent/mxflutter-widgets/lib/global_context.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tencent/mxflutter-widgets/lib/global_context.js ***!
  \***********************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const { invokeFlutterFunction } = __webpack_require__(/*! @tencent/mxflutter */ "./node_modules/@tencent/mxflutter/lib/index.js");

module.exports = {
  invokeFlutterFunction,
};


/***/ }),

/***/ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_animation.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_animation.js ***!
  \*****************************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

//  MXFlutterFramework
//  Copyright 2019 The MXFlutter Authors. All rights reserved.
//
//  Use of this source code is governed by a MIT-style license that can be
//  found in the LICENSE file.

const dart_sdk = __webpack_require__(/*! dart_sdk */ "dart_sdk");
const { FlutterWidget,MXWidgetControllerLifeCycle, FlutterCallArgs, Alignment } = __webpack_require__(/*! ./js_flutter_basic_types.js */ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_basic_types.js");
const { invokeFlutterFunction } = __webpack_require__(/*! ./global_context.js */ "./node_modules/@tencent/mxflutter-widgets/lib/global_context.js");

const dart = dart_sdk.dart;
const ui = dart_sdk.ui;
const dartx = dart_sdk.dartx;
const core = dart_sdk.core;
const $clamp = dartx.clamp;

class Animation extends MXWidgetControllerLifeCycle {
  constructor({ tween, controller } = {}) {
    super();

    this.tween = tween;
    this.controller = controller;
    this.statusListenerList = [];
    this.listenerList = [];
  }

  statusListenerCallback(status) {
    for (let funcKey in this.statusListenerList) {
      this.statusListenerList[funcKey](status);
    }
  }

  listenerCallback(status) {
    for (let funcKey in this.listenerList) {
      this.listenerList[funcKey](status);
    }
  }

  value() {
    return 'animation.value';
  }

  addListener(callback) {
    this.listenerList.push(callback);
  }

  removeListener(callback) {
    const index = this.listenerList.indexOf(callback);
    this.listenerList.splice(index);
  }

  addStatusListener(callback) {
    this.statusListenerList.push(callback);
  }

  removeStatusListener(callback) {
    let index = this.statusListenerList.indexOf(callback);
    this.statusListenerList.splice(index);
  }
}

class Tween extends FlutterWidget {
  constructor({ begin, end } = {}) {
    super();

    this.begin = begin;
    this.end = end;
  }
  lerp(t) {
    return dart.dsend(this.begin, '+', [dart.dsend(dart.dsend(this.end, '-', [this.begin]), '*', [t])]);
  }
  transform(t) {
    if (t === 0.0) return this.begin;
    if (t === 1.0) return this.end;
    return this.lerp(t);
  }
}

Tween.new = function (args) {
  return new Tween(args);
};

class RectTween extends FlutterWidget {
  constructor({ begin, end } = {}) {
    super();

    this.begin = begin;
    this.end = end;
  }

  lerp(t) {
    return ui.Rect.lerp(this.begin, this.end, t);
  }
}

RectTween.new = function (args) {
  return new RectTween(args);
};

class AnimationController extends MXWidgetControllerLifeCycle {
  constructor({ value, duration, debugLabel, lowerBound, upperBound, animationBehavior, vsync } = {}) {
    super();

    this.value = value;
    this.duration = duration;
    this.debugLabel = debugLabel;
    this.lowerBound = lowerBound;
    this.upperBound = upperBound;
    this.animationBehavior = animationBehavior;
    this.vsync = vsync;
  }

  ///TODO:
  dispose() {}

  forward(from) {
    var argument = new FlutterCallArgs({
      mirrorID: this.mirrorID,
      className: 'AnimationController',
      funcName: 'forward',
      args: {
        from: from,
      },
    });
    invokeFlutterFunction(argument);
  }

  reverse(from) {
    var argument = new FlutterCallArgs({
      mirrorID: this.mirrorID,
      className: 'AnimationController',
      funcName: 'reverse',
      args: {
        from: from,
      },
    });
    invokeFlutterFunction(argument);
  }

  repeat(min, max, period) {
    var argument = new FlutterCallArgs({
      mirrorID: this.mirrorID,
      className: 'AnimationController',
      funcName: 'repeat',
      args: {
        min: min,
        max: max,
        period: period,
      },
    });
    invokeFlutterFunction(argument);
  }

  drive(animatable) {
    var argument = new FlutterCallArgs({
      mirrorID: this.mirrorID,
      className: 'AnimationController',
      funcName: 'drive',
      args: {
        animatable: animatable,
      },
    });
    invokeFlutterFunction(argument);
  }
}

class AnimatedBuilder extends FlutterWidget {
  constructor({ key, animation, builder, child, widget } = {}) {
    super();

    this.key = key;
    this.animation = animation;
    this.builder = builder;
    this.child = child;
    this.widget = widget;
  }
}

class Duration extends FlutterWidget {
  constructor({ days, hours, minutes, seconds, milliseconds } = {}) {
    super();

    this.days = days;
    this.hours = hours;
    this.minutes = minutes;
    this.seconds = seconds;
    this.milliseconds = milliseconds;
  }
}

// AnimationStatus = {
//   dismissed: "AnimationStatus.dismissed",
//   forward: "AnimationStatus.forward",
//   reverse: "AnimationStatus.reverse",
//   completed: "AnimationStatus.completed"
// };
AnimationStatus = {
  dismissed: { _name: 'AnimationStatus.dismissed', index: 0 },
  forward: { _name: 'AnimationStatus.forward', index: 1 },
  reverse: { _name: 'AnimationStatus.reverse', index: 2 },
  completed: { _name: 'AnimationStatus.completed', index: 3 },
};

class CurveTween extends FlutterWidget {
  constructor({ curve } = {}) {
    super();

    this.curve = curve;
  }
}

class Curve extends FlutterWidget {
  constructor() {
    super();
  }

  transform(t) {
    if (t === 0.0 || t === 1.0) {
      return t;
    }
    return this.transformInternal(t);
  }

  transformInternal(t) {
    dart.throw(new core.UnimplementedError.new());
  }
}

class Interval extends Curve {
  constructor(begin, end, { curve } = {}) {
    super();

    this.begin = begin;
    this.end = end;
    this.curve = curve;
  }

  transformInternal(t) {
    if (!(dart.notNull(this.begin) >= 0.0)) dart.assertFailed(null, 'org-dartlang-app:///packages/flutter/src/animation/curves.dart', 147, 12, 'begin >= 0.0');
    if (!(dart.notNull(this.begin) <= 1.0)) dart.assertFailed(null, 'org-dartlang-app:///packages/flutter/src/animation/curves.dart', 148, 12, 'begin <= 1.0');
    if (!(dart.notNull(this.end) >= 0.0)) dart.assertFailed(null, 'org-dartlang-app:///packages/flutter/src/animation/curves.dart', 149, 12, 'end >= 0.0');
    if (!(dart.notNull(this.end) <= 1.0)) dart.assertFailed(null, 'org-dartlang-app:///packages/flutter/src/animation/curves.dart', 150, 12, 'end <= 1.0');
    if (!(dart.notNull(this.end) >= dart.notNull(this.begin)))
      dart.assertFailed(null, 'org-dartlang-app:///packages/flutter/src/animation/curves.dart', 151, 12, 'end >= begin');
    t = ((dart.notNull(t) - dart.notNull(this.begin)) / (dart.notNull(this.end) - dart.notNull(this.begin)))[$clamp](0.0, 1.0);
    if (t === 0.0 || t === 1.0) return t;
    return this.curve.transform(t);
  }
}

// Curves = {
//   linear: "Curves.linear",
//   decelerate: "Curves.decelerate",
//   ease: "Curves.ease",
//   easeIn: "Curves.easeIn",
//   easeOut: "Curves.easeOut",
//   easeInOut: "Curves.easeInOut",
//   fastOutSlowIn: "Curves.fastOutSlowIn",
//   bounceIn: "Curves.bounceIn",
//   bounceOut: "Curves.bounceOut",
//   bounceInOut: "Curves.bounceInOut",
//   elasticIn: "Curves.elasticIn",
//   elasticOut: "Curves.elasticOut",
//   elasticInOut: "Curves.elasticInOut"
// };

Curves = {
  linear: { _name: 'Curves.linear', index: 0 },
  decelerate: { _name: 'Curves.decelerate', index: 1 },
  ease: { _name: 'Curves.ease', index: 2 },
  easeIn: { _name: 'Curves.easeIn', index: 3 },
  easeOut: { _name: 'Curves.easeOut', index: 4 },
  easeInOut: { _name: 'Curves.easeInOut', index: 5 },
  fastOutSlowIn: { _name: 'Curves.fastOutSlowIn', index: 6 },
  bounceIn: { _name: 'Curves.bounceIn', index: 7 },
  bounceOut: { _name: 'Curves.bounceOut', index: 8 },
  bounceInOut: { _name: 'Curves.bounceInOut', index: 9 },
  elasticIn: { _name: 'Curves.elasticIn', index: 10 },
  elasticOut: { _name: 'Curves.elasticOut', index: 11 },
  elasticInOut: { _name: 'Curves.elasticInOut', index: 12 },
};

class FadeTransition extends FlutterWidget {
  constructor({ key, opacity, alwaysIncludeSemantics, child } = {}) {
    super();

    this.key = key;
    this.opacity = opacity;
    this.alwaysIncludeSemantics = alwaysIncludeSemantics;
    this.child = child;
  }
}

class SlideTransition extends FlutterWidget {
  constructor({ key, position, transformHitTests, textDirection, child } = {}) {
    super();

    this.key = key;
    this.position = position;
    this.transformHitTests = transformHitTests;
    this.textDirection = textDirection;
    this.child = child;
  }
}

class Cubic extends Curve {
  constructor(a, b, c, d) {
    super();

    this.a = a;
    this.b = b;
    this.c = c;
    this.d = d;
  }

  _evaluateCubic(a, b, m) {
    return 3 * a * (1 - m) * (1 - m) * m + 3 * b * (1 - m) * m * m + m * m * m;
  }

  transformInternal(t) {
    let start = 0.0;
    let end = 1.0;
    while (true) {
      let midpoint = (start + end) / 2;
      let estimate = this._evaluateCubic(this.a, this.c, midpoint);
      if (Math.abs(t - estimate) < 0.001) return this._evaluateCubic(this.b, this.d, midpoint);
      if (estimate < t) start = midpoint;
      else end = midpoint;
    }
  }
}

/**
 Key key,
 this.alignment,
 this.padding,
 Color color,
 Decoration decoration,
 this.foregroundDecoration,
 double width,
 double height,
 BoxConstraints constraints,
 this.margin,
 this.transform,
 this.child,
 Curve curve = Curves.linear,
 @required Duration duration,
 VoidCallback onEnd,
 */
class AnimatedContainer extends FlutterWidget {
  constructor({
    key,
    alignment,
    padding,
    color,
    decoration,
    foregroundDecoration,
    width,
    height,
    constraints,
    margin,
    transform,
    child,
    curve,
    duration,
    onEnd,
  } = {}) {
    super();

    this.key = key;
    this.alignment = alignment;
    this.padding = padding;
    this.color = color;
    this.decoration = decoration;
    this.foregroundDecoration = foregroundDecoration;
    this.width = width;
    this.height = height;
    this.constraints = constraints;
    this.margin = margin;
    this.transform = transform;
    this.child = child;
    this.curve = curve;
    this.duration = duration; //@required
    this.onEnd = onEnd;
  }
}

class AnimatedCrossFade extends FlutterWidget {
  constructor(
    {
      key,
      firstChild, //@required
      secondChild, //@required
      firstCurve,
      secondCurve,
      sizeCurve,
      alignment,
      crossFadeState, //@required
      duration, //@required
      reverseDuration,
      layoutBuilder,
    } = {
      firstCurve: Curves.linear,
      secondCurve: Curves.linear,
      sizeCurve: Curves.linear,
      alignment: Alignment.topCenter,
    },
  ) {
    super();

    this.key = key;
    this.firstChild = firstChild;
    this.secondChild = secondChild;
    this.firstCurve = firstCurve;
    this.secondCurve = secondCurve;
    this.sizeCurve = sizeCurve;
    this.crossFadeState = crossFadeState;
    this.duration = duration;
    this.reverseDuration = reverseDuration;
    this.layoutBuilder = layoutBuilder;
  }
}

const CrossFadeState = {
  /// Show the first child ([AnimatedCrossFade.firstChild]) and hide the second
  /// ([AnimatedCrossFade.secondChild]]).
  showFirst: 'CrossFadeState.showFirst',
  /// Show the second child ([AnimatedCrossFade.secondChild]) and hide the first
  /// ([AnimatedCrossFade.firstChild]).
  showSecond: 'CrossFadeState.showSecond',
};

class AnimatedDefaultTextStyle extends FlutterWidget {
  constructor({
    key,
    child, //@required
    style, //@required
    textAlign,
    softWrap,
    overflow,
    maxLines,
    duration,
    onEnd,
  } = {}) {
    super();
    this.key = key;
    this.child = child;
    this.style = style;
    this.textAlign = textAlign;
    this.softWrap = softWrap;
    this.overflow = overflow;
    this.maxLines = maxLines;
    this.duration = duration;
    this.onEnd = onEnd;
  }
}

class AnimatedOpacity extends FlutterWidget {
  constructor({ key, child, opacity, curve, duration, onEnd, alwaysIncludeSemantics } = {}) {
    super();

    this.key = key;
    this.child = child;
    this.opacity = opacity;
    this.curve = curve;
    this.duration = duration;
    this.onEnd = onEnd;
    this.alwaysIncludeSemantics = alwaysIncludeSemantics;
  }
}

class AnimatedPhysicalModel extends FlutterWidget {
  constructor({ key, child, shape, clipBehavior, borderRadius, elevation, color, animateColor, shadowColor, animateShadowColor, curve, duration, onEnd } = {}) {
    super();

    this.key = key;
    this.child = child;
    this.shape = shape;
    this.clipBehavior = clipBehavior;
    this.borderRadius = borderRadius;
    this.elevation = elevation;
    this.color = color;
    this.animateColor = animateColor;
    this.shadowColor = shadowColor;
    this.animateShadowColor = animateShadowColor;
    this.curve = curve;
    this.duration = duration;
    this.onEnd = onEnd;
  }
}

class AnimatedPositioned extends FlutterWidget {
  constructor({ key, child, left, top, right, bottom, width, height, curve, duration, onEnd } = {}) {
    super();

    this.key = key;
    this.child = child;
    this.left = left;
    this.top = top;
    this.right = right;
    this.bottom = bottom;
    this.width = width;
    this.height = height;
    this.curve = curve;
    this.duration = duration;
    this.onEnd = onEnd;
  }
}

class AnimatedSize extends FlutterWidget {
  constructor({ key, child, alignment, curve, duration, reverseDuration, vsync } = {}) {
    super();

    this.key = key;
    this.child = child;
    this.alignment = alignment;
    this.curve = curve;
    this.duration = duration;
    this.reverseDuration = reverseDuration;
    this.vsync = vsync;
  }
}

class DecoratedBoxTransition extends FlutterWidget {
  constructor({ key, decoration, position, child } = {}) {
    super();

    this.key = key;
    this.decoration = decoration;
    this.position = position;
    this.child = child;
  }
}

class DecorationTween extends FlutterWidget {
  constructor({ begin, end } = {}) {
    super();

    this.begin = begin;
    this.end = end;

    //MXFlutter特殊逻辑
    this.controller = null;
  }

  // animate(parent) {
  //   const argument = new FlutterCallArgs({
  //     mirrorID: this.mirrorID,
  //     className: 'DecorationTween',
  //     funcName: 'animate',
  //     args: {
  //       parent: parent,
  //     },
  //   });
  //   invokeFlutterFunction(argument);
  // }

  //MXFlutter特殊逻辑
  animate(controller) {
    this.controller = controller;
    return this;
  }
}

module.exports = {
  Animation,
  Tween,
  AnimationController,
  AnimatedBuilder,
  Duration,
  AnimationStatus,
  CurveTween,
  Interval,
  Curves,
  FadeTransition,
  SlideTransition,
  RectTween,
  Curve,
  Cubic,
  AnimatedContainer,
  AnimatedCrossFade,
  CrossFadeState,
  AnimatedDefaultTextStyle,
  AnimatedOpacity,
  AnimatedPhysicalModel,
  AnimatedPositioned,
  AnimatedSize,
  DecorationTween,
  DecoratedBoxTransition,
};


/***/ }),

/***/ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_basic_types.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_basic_types.js ***!
  \*******************************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

//  MXFlutterFramework
//  Copyright 2019 The MXFlutter Authors. All rights reserved.
//
//  Use of this source code is governed by a MIT-style license that can be
//  found in the LICENSE file.

//-------------------------------------------
//TODO: class Paint

//-------------------------------------------
//不依赖任何文件的放这里
//dart widget 封装
const dart_sdk = __webpack_require__(/*! dart_sdk */ "dart_sdk");
const core = dart_sdk.core;
const dart = dart_sdk.dart;
const dartx = dart_sdk.dartx;
const ui = dart_sdk.ui;
const $clamp = dartx.clamp;

var $forEach = dartx.forEach;
var dynamicAnddynamicToNull = () => (dynamicAnddynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic, dart.dynamic])))();
var dynamicToNull = () => (dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))();

const { DartClass, MXWidgetControllerLifeCycle, FlutterWidget, FlutterCallArgs, FlutterWidgetMirrorMgr, MXBaseKey } = __webpack_require__(/*! @tencent/mxflutter */ "./node_modules/@tencent/mxflutter/lib/index.js");

//包装类
class Key extends MXBaseKey {
  constructor(value) {
    super('Key');
    this.value = value;
  }

  //mx特殊逻辑，Key只能是String类型
  toString() {
    return 'Key:' + this.value;
  }
}

Key.new = function (args) {
  return new Key(args);
};

class AlignmentDirectional extends DartClass {
  constructor({ start, y } = {}) {
    super();

    this.start = start;
    this.y = y;
  }
}

AlignmentDirectional.new = function (args) {
  return new AlignmentDirectional(args);
};

class EdgeInsetsDirectional extends DartClass {
  constructor(start, top, end, bottom) {
    super();

    this.start = start;
    this.top = top;
    this.end = end;
    this.bottom = bottom;
  }
}

EdgeInsetsDirectional.new = function (start, top, end, bottom) {
  return new EdgeInsetsDirectional(start, top, end, bottom);
};

EdgeInsetsDirectional.fromSTEB = function ({ start, top, end, bottom } = {}) {
  let v = new EdgeInsetsDirectional();
  v.constructorName = 'fromSTEB';

  v.start = start;
  v.top = top;
  v.end = end;
  v.bottom = bottom;
  return v;
};

EdgeInsetsDirectional.only = function ({ start = 0.0, top = 0.0, end = 0.0, bottom = 0.0 } = {}) {
  let v = new EdgeInsetsDirectional();
  v.constructorName = 'only';
  v.start = start;
  v.top = top;
  v.end = end;
  v.bottom = bottom;
  return v;
};

class EdgeInsets extends DartClass {
  constructor(left, top, right, bottom) {
    super();

    this.left = left;
    this.top = top;
    this.right = right;
    this.bottom = bottom;
  }
}

EdgeInsets.new = function (left, top, right, bottom) {
  return new EdgeInsets(left, top, right, bottom);
};

EdgeInsets.fromLTRB = function (left, top, right, bottom) {
  let jsObj = new EdgeInsets();
  jsObj.constructorName = 'fromLTRB';

  jsObj.left = left;
  jsObj.top = top;
  jsObj.right = right;
  jsObj.bottom = bottom;

  return jsObj;
};

EdgeInsets.all = function (value) {
  let jsObj = new EdgeInsets();
  jsObj.constructorName = 'all';

  jsObj.value = value;

  return jsObj;
};

EdgeInsets.only = function ({ left, top, right, bottom } = {}) {
  let jsObj = new EdgeInsets();
  jsObj.constructorName = 'only';

  jsObj.left = left;
  jsObj.top = top;
  jsObj.right = right;
  jsObj.bottom = bottom;

  return jsObj;
};

EdgeInsets.symmetric = function ({ vertical, horizontal } = {}) {
  let jsObj = new EdgeInsets();
  jsObj.constructorName = 'symmetric';

  jsObj.vertical = vertical;
  jsObj.horizontal = horizontal;

  return jsObj;
};

EdgeInsets.fromJson = function (mapObj) {
  if (mapObj == null || mapObj == undefined) {
    return null;
  }

  let obj = new EdgeInsets();

  for (var p in mapObj) {
    if (mapObj.hasOwnProperty(p)) {
      let v = mapObj[p];
      obj[p] = v;
    }
  }

  return obj;
};

class Color extends DartClass {
  constructor(value) {
    super();
    this.value = value;
  }

  /// Construct a color from the lower 8 bits of four integers.
  ///
  /// * `a` is the alpha value, with 0 being transparent and 255 being fully
  ///   opaque.
  /// * `r` is [red], from 0 to 255.
  /// * `g` is [green], from 0 to 255.
  /// * `b` is [blue], from 0 to 255.
  ///
  /// Out of range values are brought into range using modulo 255.
  ///
  /// See also [fromRGBO], which takes the alpha value as a floating point
  /// value.
}

Color.new = function (args) {
  return new Color(args);
};

///const Color.fromARGB(int a, int r, int g, int b)
Color.fromARGB = function (a, r, g, b) {
  let c = new Color();
  c.constructorName = 'fromARGB';

  c.a = a;
  c.r = r;
  c.g = g;
  c.b = b;
  return c;
};

Color.fromRGBO = function (r, g, b, opacity) {
  let c = new Color();
  c.constructorName = 'fromRGBO';
  c.opacity = opacity;
  c.r = r;
  c.g = g;
  c.b = b;

  return c;
};

Color.fromJson = function (mapObj) {
  if (mapObj == null || mapObj == undefined) {
    return null;
  }

  let obj = new Color();

  for (var p in mapObj) {
    if (mapObj.hasOwnProperty(p)) {
      let v = mapObj[p];
      obj[p] = v;
    }
  }

  return obj;
};

// BlendMode = {
//   clear: "BlendMode.clear",
//   src: "BlendMode.src",
//   dst: "BlendMode.dst",
//   srcOver: "BlendMode.srcOver",
//   dstOver: "BlendMode.dstOver",
//   srcIn: "BlendMode.srcIn",
//   dstIn: "BlendMode.dstIn",
//   srcOut: "BlendMode.srcOut",
//   dstOut: "BlendMode.dstOut",
//   srcATop: "BlendMode.srcATop",
//   dstATop: "BlendMode.dstATop",
//   xor: "BlendMode.xor",
//   plus: "BlendMode.plus",
//   modulate: "BlendMode.modulate",
//   screen: "BlendMode.screen",
//   overlay: "BlendMode.overlay",
//   darken: "BlendMode.darken",
//   lighten: "BlendMode.lighten",
//   colorDodge: "BlendMode.colorDodge",
//   colorBurn: "BlendMode.colorBurn",
//   hardLight: "BlendMode.hardLight",
//   softLight: "BlendMode.softLight",
//   difference: "BlendMode.difference",
//   exclusion: "BlendMode.exclusion",
//   multiply: "BlendMode.multiply",
//   hue: "BlendMode.hue",
//   saturation: "BlendMode.saturation",
//   color: "BlendMode.color",
//   luminosity: "BlendMode.luminosity"
// };

// FilterQuality = {
//   none: "FilterQuality.none",
//   low: "FilterQuality.low",
//   medium: "FilterQuality.medium",
//   high: "FilterQuality.high"
// };

// BlurStyle = {
//   normal: "BlurStyle.normal",
//   solid: "BlurStyle.solid",
//   outer: "BlurStyle.outer",
//   inner: "BlurStyle.inner"
// };
BlendMode = {
  clear: { _name: 'BlendMode.clear', index: 0 },
  src: { _name: 'BlendMode.src', index: 1 },
  dst: { _name: 'BlendMode.dst', index: 2 },
  srcOver: { _name: 'BlendMode.srcOver', index: 3 },
  dstOver: { _name: 'BlendMode.dstOver', index: 4 },
  srcIn: { _name: 'BlendMode.srcIn', index: 5 },
  dstIn: { _name: 'BlendMode.dstIn', index: 6 },
  srcOut: { _name: 'BlendMode.srcOut', index: 7 },
  dstOut: { _name: 'BlendMode.dstOut', index: 8 },
  srcATop: { _name: 'BlendMode.srcATop', index: 9 },
  dstATop: { _name: 'BlendMode.dstATop', index: 10 },
  xor: { _name: 'BlendMode.xor', index: 11 },
  plus: { _name: 'BlendMode.plus', index: 12 },
  modulate: { _name: 'BlendMode.modulate', index: 13 },
  screen: { _name: 'BlendMode.screen', index: 14 },
  overlay: { _name: 'BlendMode.overlay', index: 15 },
  darken: { _name: 'BlendMode.darken', index: 16 },
  lighten: { _name: 'BlendMode.lighten', index: 17 },
  colorDodge: { _name: 'BlendMode.colorDodge', index: 18 },
  colorBurn: { _name: 'BlendMode.colorBurn', index: 19 },
  hardLight: { _name: 'BlendMode.hardLight', index: 20 },
  softLight: { _name: 'BlendMode.softLight', index: 21 },
  difference: { _name: 'BlendMode.difference', index: 22 },
  exclusion: { _name: 'BlendMode.exclusion', index: 23 },
  multiply: { _name: 'BlendMode.multiply', index: 24 },
  hue: { _name: 'BlendMode.hue', index: 25 },
  saturation: { _name: 'BlendMode.saturation', index: 26 },
  color: { _name: 'BlendMode.color', index: 27 },
  luminosity: { _name: 'BlendMode.luminosity', index: 28 },
};

FilterQuality = {
  none: { _name: 'FilterQuality.none', index: 0 },
  low: { _name: 'FilterQuality.low', index: 1 },
  medium: { _name: 'FilterQuality.medium', index: 2 },
  high: { _name: 'FilterQuality.high', index: 3 },
};

BlurStyle = {
  normal: { _name: 'BlurStyle.normal', index: 0 },
  solid: { _name: 'BlurStyle.solid', index: 1 },
  outer: { _name: 'BlurStyle.outer', index: 2 },
  inner: { _name: 'BlurStyle.inner', index: 3 },
};

class Alignment extends DartClass {
  constructor(x, y) {
    super();

    this.x = x;
    this.y = y;
  }
}

Alignment.new = function (x, y) {
  return new Alignment(x, y);
};

/// The top left corner.
Alignment.topLeft = new Alignment(-1.0, -1.0);

/// The center point along the top edge.
Alignment.topCenter = new Alignment(0.0, -1.0);

/// The top right corner.
Alignment.topRight = new Alignment(1.0, -1.0);

/// The center point along the left edge.
Alignment.centerLeft = new Alignment(-1.0, 0.0);

/// The center point, both horizontally and vertically.
Alignment.center = new Alignment(0.0, 0.0);

/// The center point along the right edge.
Alignment.centerRight = new Alignment(1.0, 0.0);

/// The bottom left corner.
Alignment.bottomLeft = new Alignment(-1.0, 1.0);

/// The center point along the bottom edge.
Alignment.bottomCenter = new Alignment(0.0, 1.0);

/// The bottom right corner.
Alignment.bottomRight = new Alignment(1.0, 1.0);

// StrokeCap = {
//   butt: "StrokeCap.butt",
//   round: "StrokeCap.round",
//   square: "StrokeCap.square"
// };

// StrokeJoin = {
//   miter: "StrokeJoin.miter",
//   round: "StrokeJoin.round",
//   bevel: "StrokeJoin.bevel"
// };

// PaintingStyle = {
//   fill: "PaintingStyle.fill",
//   stroke: "PaintingStyle.stroke"
// };
StrokeCap = {
  butt: { _name: 'StrokeCap.butt', index: 0 },
  round: { _name: 'StrokeCap.round', index: 1 },
  square: { _name: 'StrokeCap.square', index: 2 },
};

StrokeJoin = {
  miter: { _name: 'StrokeJoin.miter', index: 0 },
  round: { _name: 'StrokeJoin.round', index: 1 },
  bevel: { _name: 'StrokeJoin.bevel', index: 2 },
};

PaintingStyle = {
  fill: { _name: 'PaintingStyle.fill', index: 0 },
  stroke: { _name: 'PaintingStyle.stroke', index: 1 },
};
class Paint {
  constructor(argsMap) {
    argsMap.forEach((k, v) => {
      this[k] = v;
    });
  }
}

Paint.new = function (args) {
  return new Paint(args);
};

class ColorFilter extends DartClass {
  constructor(color, blendMode) {
    super();

    this.color = color;
    this.blendMode = blendMode;
  }
}

ColorFilter.new = function (color, blendMode) {
  return new ColorFilter(color, blendMode);
};

ColorFilter.mode = function (color, blendMode) {
  let v = new ColorFilter(color, blendMode);
  v.constructorName = 'mode';
  return v;
};

class MaskFilter extends DartClass {
  constructor(style, sigma) {
    super();

    this.style = style;
    this.sigma = sigma;
  }
}

MaskFilter.new = function (style, sigma) {
  return new MaskFilter(style, sigma);
};

MaskFilter.blur = function (style, sigma) {
  let v = new MaskFilter(style, sigma);
  v.constructorName = 'blur';
  return v;
};

// TileMode = {
//   clamp: "TileMode.clamp",
//   repeated: "TileMode.repeated",
//   mirror: "TileMode.mirror"
// };
TileMode = {
  clamp: { _name: 'TileMode.clamp', index: 0 },
  repeated: { _name: 'TileMode.repeated', index: 1 },
  mirror: { _name: 'TileMode.mirror', index: 2 },
};
class LinearGradient extends DartClass {
  constructor({ begin, end, colors, stops, tileMode } = {}) {
    super();

    this.begin = begin;
    this.end = end;
    this.colors = colors;
    this.stops = stops;
    this.tileMode = tileMode;
  }
}

LinearGradient.new = function (args) {
  return new LinearGradient(args);
};

class RadialGradient extends DartClass {
  constructor({ center, radius, colors, stops, tileMode, focal, focalRadius } = {}) {
    super();

    this.center = center;
    this.radius = radius;
    this.colors = colors;
    this.stops = stops;
    this.tileMode = tileMode;
    this.focal = focal;
    this.focalRadius = focalRadius;
  }
}

RadialGradient.new = function (args) {
  return new RadialGradient(args);
};

class SweepGradient extends DartClass {
  constructor({ center, startAngle, endAngle, colors, stops, tileMode } = {}) {
    super();

    this.center = center;
    this.startAngle = startAngle;
    this.endAngle = endAngle;
    this.colors = colors;
    this.stops = stops;
    this.tileMode = tileMode;
  }
}

SweepGradient.new = function (args) {
  return new SweepGradient(args);
};

class ImageShader extends DartClass {
  constructor({ image, tmx, tmy, matrix4 } = {}) {
    super();

    this.image = image;
    this.tmx = tmx;
    this.tmy = tmy;
    this.matrix4 = matrix4;
  }
}

ImageShader.new = function (args) {
  return new ImageShader(args);
};

class BoxDecoration extends DartClass {
  constructor({ color, image, border, borderRadius, boxShadow, gradient, backgroundBlendMode, shape } = {}) {
    super();

    this.color = color;
    this.image = image;
    this.border = border;
    this.borderRadius = borderRadius;
    this.boxShadow = boxShadow;
    this.gradient = gradient;
    this.backgroundBlendMode = backgroundBlendMode;
    this.shape = shape;
  }
}

BoxDecoration.new = function (args) {
  return new BoxDecoration(args);
};

class Locale extends DartClass {
  constructor(languageCode, countryCode) {
    super();

    this.languageCode = languageCode;
    this.countryCode = countryCode;
  }
}

Locale.new = function (args) {
  return new Locale(args);
};

Locale.fromJson = function (mapObj) {
  if (mapObj == null || mapObj == undefined) {
    return null;
  }

  let obj = new Locale({
    languageCode: mapObj['languageCode'],
    countryCode: mapObj['countryCode'],
  });

  return obj;
};

// MainAxisAlignment = {
//   start: "MainAxisAlignment.start",
//   end: "MainAxisAlignment.end",
//   center: "MainAxisAlignment.center",
//   spaceBetween: "MainAxisAlignment.spaceBetween",
//   spaceAround: "MainAxisAlignment.spaceAround",
//   spaceEvenly: "MainAxisAlignment.spaceEvenly"
// };

// MainAxisSize = {
//   min: "MainAxisSize.min",
//   max: "MainAxisSize.max"
// };

// CrossAxisAlignment = {
//   start: "CrossAxisAlignment.start",
//   end: "CrossAxisAlignment.end",
//   center: "CrossAxisAlignment.center",
//   stretch: "CrossAxisAlignment.stretch",
//   baseline: "CrossAxisAlignment.baseline"
// };

// VerticalDirection = {
//   up: "VerticalDirection.up",
//   down: "VerticalDirection.down"
// };
MainAxisAlignment = {
  start: { _name: 'MainAxisAlignment.start', index: 0 },
  end: { _name: 'MainAxisAlignment.end', index: 1 },
  center: { _name: 'MainAxisAlignment.center', index: 2 },
  spaceBetween: { _name: 'MainAxisAlignment.spaceBetween', index: 3 },
  spaceAround: { _name: 'MainAxisAlignment.spaceAround', index: 4 },
  spaceEvenly: { _name: 'MainAxisAlignment.spaceEvenly', index: 5 },
};

MainAxisSize = {
  min: { _name: 'MainAxisSize.min', index: 0 },
  max: { _name: 'MainAxisSize.max', index: 1 },
};

CrossAxisAlignment = {
  start: { _name: 'CrossAxisAlignment.start', index: 0 },
  end: { _name: 'CrossAxisAlignment.end', index: 1 },
  center: { _name: 'CrossAxisAlignment.center', index: 2 },
  stretch: { _name: 'CrossAxisAlignment.stretch', index: 3 },
  baseline: { _name: 'CrossAxisAlignment.baseline', index: 4 },
};

VerticalDirection = {
  up: { _name: 'VerticalDirection.up', index: 0 },
  down: { _name: 'VerticalDirection.down', index: 1 },
};

class BoxConstraints extends DartClass {
  constructor({ minWidth, maxWidth, minHeight, maxHeight } = {}) {
    super();

    this.minWidth = minWidth;
    this.maxWidth = maxWidth;
    this.minHeight = minHeight;
    this.maxHeight = maxHeight;
  }

  constrainWidth(width) {
    if (width === void 0) width = 1 / 0;
    return width[$clamp](this.minWidth, this.maxWidth);
  }
  constrainHeight(height) {
    if (height === void 0) height = 1 / 0;
    return height[$clamp](this.minHeight, this.maxHeight);
  }
  get biggest() {
    return new ui.Size.new(this.constrainWidth(), this.constrainHeight());
  }
  get smallest() {
    return new ui.Size.new(this.constrainWidth(0.0), this.constrainHeight(0.0));
  }
}

BoxConstraints.new = function (args) {
  return new BoxConstraints(args);
};

class Size extends DartClass {
  constructor(width, height) {
    super();

    this.width = width;
    this.height = height;
  }
}

Size.new = function (width, height) {
  return new Size(width, height);
};

Size.fromJson = function (mapObj) {
  if (mapObj == null || mapObj == undefined) {
    return null;
  }

  let obj = new EdgeInsets();

  for (var p in mapObj) {
    if (mapObj.hasOwnProperty(p)) {
      let v = mapObj[p];
      obj[p] = v;
    }
  }

  return obj;
};

class Offset extends DartClass {
  constructor(dx, dy) {
    super();

    this.dx = dx;
    this.dy = dy;
  }
}

Offset.new = function (dx, dy) {
  return new Offset(dx, dy);
};

class TableRow extends DartClass {
  constructor({ key, decoration, children } = {}) {
    super();

    this.key = key;
    this.decoration = decoration;
    this.children = children;
  }
}

TableRow.new = function (args) {
  return new TableRow(args);
};

// BoxFit = {
//   fill: "BoxFit.fill",
//   contain: "BoxFit.contain",
//   cover: "BoxFit.cover",
//   fitWidth: "BoxFit.fitWidth",
//   fitHeight: "BoxFit.fitHeight",
//   none: "BoxFit.none",
//   scaleDown: "BoxFit.scaleDown"
// };

// Overflow = {
//   visible: "Overflow.visible",
//   clip: "Overflow.clip"
// };

// StackFit = {
//   loose: "StackFit.loose",
//   expand: "StackFit.expand",
//   passthrough: "StackFit.passthrough"
// };

// Axis = {
//   horizontal: "Axis.horizontal",
//   vertical: "Axis.vertical"
// };

// TableCellVerticalAlignment = {
//   top: "TableCellVerticalAlignment.top",
//   middle: "TableCellVerticalAlignment.middle",
//   bottom: "TableCellVerticalAlignment.bottom",
//   baseline: "TableCellVerticalAlignment.baseline",
//   fill: "TableCellVerticalAlignment.fill"
// };

BoxFit = {
  fill: { _name: 'BoxFit.fill', index: 0 },
  contain: { _name: 'BoxFit.contain', index: 1 },
  cover: { _name: 'BoxFit.cover', index: 2 },
  fitWidth: { _name: 'BoxFit.fitWidth', index: 3 },
  fitHeight: { _name: 'BoxFit.fitHeight', index: 4 },
  none: { _name: 'BoxFit.none', index: 5 },
  scaleDown: { _name: 'BoxFit.scaleDown', index: 6 },
};

Overflow = {
  visible: { _name: 'Overflow.visible', index: 0 },
  clip: { _name: 'Overflow.clip', index: 1 },
};

StackFit = {
  loose: { _name: 'StackFit.loose', index: 0 },
  expand: { _name: 'StackFit.expand', index: 1 },
  passthrough: { _name: 'StackFit.passthrough', index: 2 },
};

Axis = {
  horizontal: { _name: 'Axis.horizontal', index: 0 },
  vertical: { _name: 'Axis.vertical', index: 1 },
};

TableCellVerticalAlignment = {
  top: { _name: 'TableCellVerticalAlignment.top', index: 0 },
  middle: { _name: 'TableCellVerticalAlignment.middle', index: 1 },
  bottom: { _name: 'TableCellVerticalAlignment.bottom', index: 2 },
  baseline: { _name: 'TableCellVerticalAlignment.baseline', index: 3 },
  fill: { _name: 'TableCellVerticalAlignment.fill', index: 4 },
};
class TableBorder extends DartClass {
  constructor({ top, right, bottom, left, horizontalInside, verticalInside } = {}) {
    super();

    this.top = top;
    this.right = right;
    this.bottom = bottom;
    this.left = left;
    this.horizontalInside = horizontalInside;
    this.verticalInside = verticalInside;
  }
}

TableBorder.new = function (args) {
  return new TableBorder(args);
};

class BorderSide extends DartClass {
  constructor({ color, width, style } = {}) {
    super();

    this.color = color;
    this.width = width;
    this.style = style;
  }
}

BorderSide.new = function (args) {
  return new BorderSide(args);
};

// BorderStyle = {
//   none: "BorderStyle.none",
//   solid: "BorderStyle.solid"
// };
BorderStyle = {
  none: { _name: 'BorderStyle.none', index: 0 },
  solid: { _name: 'BorderStyle.solid', index: 1 },
};
class FlexColumnWidth extends DartClass {
  constructor(value) {
    super();

    this.value = value;
  }
}

FlexColumnWidth.new = function (args) {
  return new FlexColumnWidth(args);
};

class FixedColumnWidth extends FlutterWidget {
  constructor(value) {
    super();

    this.value = value;
  }
}

FixedColumnWidth.new = function (args) {
  return new FixedColumnWidth(args);
};

// WrapAlignment = {
//   start: "WrapAlignment.start",
//   end: "WrapAlignment.end",
//   center: "WrapAlignment.center",
//   spaceBetween: "WrapAlignment.spaceBetween",
//   spaceAround: "WrapAlignment.spaceAround",
//   spaceEvenly: "WrapAlignment.spaceEvenly"
// };

// WrapCrossAlignment = {
//   start: "WrapCrossAlignment.start",
//   end: "WrapCrossAlignment.end",
//   center: "WrapCrossAlignment.center"
// };

WrapAlignment = {
  start: { _name: 'WrapAlignment.start', index: 0 },
  end: { _name: 'WrapAlignment.end', index: 1 },
  center: { _name: 'WrapAlignment.center', index: 2 },
  spaceBetween: { _name: 'WrapAlignment.spaceBetween', index: 3 },
  spaceAround: { _name: 'WrapAlignment.spaceAround', index: 4 },
  spaceEvenly: { _name: 'WrapAlignment.spaceEvenly', index: 5 },
};

WrapCrossAlignment = {
  start: { _name: 'WrapCrossAlignment.start', index: 0 },
  end: { _name: 'WrapCrossAlignment.end', index: 1 },
  center: { _name: 'WrapCrossAlignment.center', index: 2 },
};

class Matrix4 extends DartClass {
  constructor({ arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15 } = {}) {
    super();

    this.arg0 = arg0;
    this.arg1 = arg1;
    this.arg2 = arg2;
    this.arg3 = arg3;
    this.arg4 = arg4;
    this.arg5 = arg5;
    this.arg6 = arg6;
    this.arg7 = arg7;
    this.arg8 = arg8;
    this.arg9 = arg9;
    this.arg10 = arg10;
    this.arg11 = arg11;
    this.arg12 = arg12;
    this.arg13 = arg13;
    this.arg14 = arg14;
    this.arg15 = arg15;
  }

  scale(x, y, z) {
    let sx = null;
    let sy = null;
    let sz = null;
    let sw = x instanceof Vector4 ? x.w : 1.0;
    if (x instanceof Vector3) {
      sx = x.x;
      sy = x.y;
      sz = x.z;
    } else if (x instanceof Vector4) {
      sx = x.x;
      sy = x.y;
      sz = x.z;
    } else if (typeof x == 'number') {
      sx = x;
      sy = y == null ? x : y;
      sz = z == null ? x : z;
    }

    this.arg0 *= sx;
    this.arg1 *= sx;
    this.arg2 *= sx;
    this.arg3 *= sx;
    this.arg4 *= sy;
    this.arg5 *= sy;
    this.arg6 *= sy;
    this.arg7 *= sy;
    this.arg8 *= sz;
    this.arg9 *= sz;
    this.arg10 *= sz;
    this.arg11 *= sz;
    this.arg12 *= sw;
    this.arg13 *= sw;
    this.arg14 *= sw;
    this.arg15 *= sw;
  }
}

Matrix4.new = function (args) {
  return new Matrix4(args);
};

Matrix4.identity = function () {
  let v = new Matrix4();
  v.arg0 = 1.0;
  v.arg1 = 0.0;
  v.arg2 = 0.0;
  v.arg3 = 0.0;
  v.arg4 = 0.0;
  v.arg5 = 1.0;
  v.arg6 = 0.0;
  v.arg7 = 0.0;
  v.arg8 = 0.0;
  v.arg9 = 0.0;
  v.arg10 = 1.0;
  v.arg11 = 0.0;
  v.arg12 = 0.0;
  v.arg13 = 0.0;
  v.arg14 = 0.0;
  v.arg15 = 1.0;
  return v;
};

//factory Matrix4.fromList(List<double> values)
Matrix4.fromList = function (values) {
  let v = new Matrix4();
  v.constructorName = 'fromList';
  v.values = List_double_values;
  return v;
};

/// Zero matrix.
Matrix4.zero = function () {
  let v = new Matrix4();
  v.constructorName = 'zero';
  return v;
};

/// Identity matrix.
///factory Matrix4.identity() => new Matrix4.zero()..setIdentity();
// Matrix4.identity = function() {
//   let v = new Matrix4();
//   v.constructorName = "identity";
//   return v;
// };

/// Constructs a new mat4 from columns.
Matrix4.columns = function (arg0, arg1, arg2, arg3) {
  let v = new Matrix4();
  v.constructorName = 'columns';

  v.arg0 = arg0;
  v.arg1 = arg1;
  v.arg2 = arg2;
  v.arg3 = arg3;

  return v;
};

/// Outer product of [u] and [v].
Matrix4.outer = function (u, v) {
  let jsObj = new Matrix4();
  jsObj.constructorName = 'outer';

  jsObj.u = u;
  jsObj.v = v;

  return jsObj;
};

Matrix4.rotationX = function (radians) {
  let v = new Matrix4();
  v.constructorName = 'rotationX';

  v.radians = radians;

  return v;
};
Matrix4.rotationY = function (radians) {
  let v = new Matrix4();
  v.constructorName = 'rotationY';

  v.radians = radians;
  return v;
};
Matrix4.rotationZ = function (radians) {
  let v = new Matrix4();
  v.constructorName = 'rotationZ';

  v.radians = radians;

  return v;
};
Matrix4.translation = function (translation) {
  let v = new Matrix4();
  v.constructorName = 'translation';

  v.translation = translation;

  return v;
};
Matrix4.translationValues = function (x, y, z) {
  let v = new Matrix4();
  v.constructorName = 'translationValues';

  v.x = x;
  v.y = y;
  v.z = z;

  return v;
};
Matrix4.diagonal3 = function (scale) {
  let v = new Matrix4();
  v.constructorName = 'diagonal3';

  v.scale = scale;

  return v;
};
Matrix4.diagonal3Values = function (x, y, z) {
  let v = new Matrix4();
  v.constructorName = 'diagonal3Values';

  v.x = x;
  v.y = y;
  v.z = z;

  return v;
};
Matrix4.skewX = function (alpha) {
  let v = new Matrix4();
  v.constructorName = 'skewX';

  v.alpha = alpha;

  return v;
};
Matrix4.skewY = function (beta) {
  let v = new Matrix4();
  v.constructorName = 'skewY';

  v.beta = beta;
  return v;
};
Matrix4.skew = function (alpha, beta) {
  let v = new Matrix4();
  v.constructorName = 'skew';

  v.alpha = alpha;
  v.beta = beta;

  return v;
};
Matrix4.compose = function (translation, rotation, scale) {
  let v = new Matrix4();
  v.constructorName = 'compose';

  v.translation = translation;
  v.rotation = rotation;
  v.scale = scale;

  return v;
};

class Vector4 extends DartClass {
  constructor(x, y, z, w) {
    super();

    this.x = x;
    this.y = y;
    this.z = z;
    this.w = w;
  }
}

Vector4.new = function (x, y, z, w) {
  return new Vector4(x, y, z, w);
};

Vector4.array = function (array, offset) {
  let v = new Vector4();
  v.constructorName = 'array';

  v.array = array;
  v.offset = offset;

  return v;
};

Vector4.identity = function () {
  let v = new Vector4();
  v.constructorName = 'identity';

  return v;
};

Vector4.random = function (rng) {
  let v = new Vector4();
  v.constructorName = 'random';

  v.rng = rng;

  return v;
};

class Vector3 extends DartClass {
  constructor(x, y, z) {
    super();

    this.x = x;
    this.y = y;
    this.z = z;
  }
}

Vector3.new = function (x, y, z) {
  return new Vector3(x, y, z);
};

Vector3.zero = function () {
  let v = new Vector3();
  v.constructorName = 'zero';

  return v;
};

Vector3.all = function (value) {
  let v = new Vector3();
  v.constructorName = 'all';

  v.value = value;

  return v;
};

Vector3.random = function (rng) {
  let v = new Vector3();
  v.constructorName = 'random';

  v.rng = rng;

  return v;
};

// Clip = {
//   none: "Clip.none",
//   hardEdge: "Clip.hardEdge",
//   antiAlias: "Clip.antiAlias",
//   antiAliasWithSaveLayer: "Clip.antiAliasWithSaveLayer"
// };
Clip = {
  none: { _name: 'Clip.none', index: 0 },
  hardEdge: { _name: 'Clip.hardEdge', index: 1 },
  antiAlias: { _name: 'Clip.antiAlias', index: 2 },
  antiAliasWithSaveLayer: { _name: 'Clip.antiAliasWithSaveLayer', index: 3 },
};

class Rect extends DartClass {
  constructor() {
    super();
  }
}

Rect.new = function (args) {
  return new Rect(args);
};

Rect.fromLTRB = function (left, top, right, bottom) {
  let v = new Rect();
  v.constructorName = 'fromLTRB';

  v.left = left;
  v.top = top;
  v.right = right;
  v.bottom = bottom;

  return v;
};

Rect.fromLTWH = function (left, top, width, height) {
  let v = new Rect();
  v.constructorName = 'fromLTWH';

  v.left = left;
  v.top = top;
  v.width = width;
  v.height = height;

  return v;
};

Rect.fromCircle = function ({ center, radius } = {}) {
  let v = new Rect();
  v.constructorName = 'fromCircle';

  v.center = center;
  v.radius = radius;

  return v;
};

Rect.fromPoints = function (a, b) {
  let v = new Rect();
  v.constructorName = 'fromPoints';

  v.a = a;
  v.b = b;

  return v;
};

class PlatformAssetBundle extends DartClass {
  constructor() {
    super();
  }
}

PlatformAssetBundle.new = function (args) {
  return new PlatformAssetBundle(args);
};

class NetworkAssetBundle extends DartClass {
  constructor(baseUrl) {
    super();

    this.baseUrl = baseUrl;
  }
}

NetworkAssetBundle.new = function (args) {
  return new NetworkAssetBundle(args);
};

class File extends DartClass {
  constructor(path) {
    super();

    this.path = path;
  }
}

File.new = function (args) {
  return new File(args);
};

File.fromUri = function (uri) {
  let v = new File();
  v.constructorName = 'fromUri';

  v.uri = uri;

  return v;
};
File.fromRawPath = function (Uint8List, rawPath) {
  let v = new File();
  v.constructorName = 'fromRawPath';

  v.Uint8List = Uint8List;
  v.rawPath = rawPath;

  return v;
};

class Uint8List extends DartClass {
  constructor(length) {
    super();

    this.length = length;
  }
}

Uint8List.new = function (args) {
  return new Uint8List(args);
};

Uint8List.fromList = function (elements) {
  let v = new Uint8List();
  v.constructorName = 'fromList';

  v.elements = elements;

  return v;
};
Uint8List.view = function (buffer, offsetInBytes, length) {
  let v = new Uint8List();
  v.constructorName = 'view';

  v.buffer = buffer;
  v.offsetInBytes = offsetInBytes;
  v.length = length;

  return v;
};

class Radius extends DartClass {
  constructor() {
    super();
  }
}

Radius.new = function (args) {
  return new Radius(args);
};

Radius.circular = function (radius) {
  let v = new Radius();
  v.constructorName = 'circular';

  v.radius = radius;

  return v;
};
Radius.elliptical = function (x, y) {
  let v = new Radius();
  v.constructorName = 'elliptical';

  v.x = x;
  v.y = y;

  return v;
};
class BorderRadius extends DartClass {
  constructor() {
    super();
  }
}

BorderRadius.new = function (args) {
  return new BorderRadius(args);
};

BorderRadius.all = function (radius) {
  let v = new BorderRadius();
  v.constructorName = 'all';

  v.radius = radius;

  return v;
};

BorderRadius.circular = function (radius) {
  let v = new BorderRadius();
  v.constructorName = 'circular';

  v.radius = radius;

  return v;
};

BorderRadius.vertical = function ({ top, bottom } = {}) {
  let v = new BorderRadius();
  v.constructorName = 'vertical';

  v.top = top;
  v.bottom = bottom;

  return v;
};

BorderRadius.horizontal = function ({ left, right } = {}) {
  let v = new BorderRadius();
  v.constructorName = 'horizontal';

  v.left = left;
  v.right = right;

  return v;
};
BorderRadius.only = function ({ topLeft, topRight, bottomLeft, bottomRight } = {}) {
  let v = new BorderRadius();
  v.constructorName = 'only';

  v.topLeft = topLeft;
  v.topRight = topRight;
  v.bottomLeft = bottomLeft;
  v.bottomRight = bottomRight;

  return v;
};
class BottomNavigationBarItem extends DartClass {
  constructor({ icon, title, activeIcon, backgroundColor } = {}) {
    super();

    this.icon = icon;
    this.title = title;
    this.activeIcon = activeIcon;
    this.backgroundColor = backgroundColor;
  }
}

BottomNavigationBarItem.new = function (args) {
  return new BottomNavigationBarItem(args);
};

// BottomNavigationBarType = {
//   fixed: "BottomNavigationBarType.fixed",
//   shifting: "BottomNavigationBarType.shifting"
// };
BottomNavigationBarType = {
  fixed: { _name: 'BottomNavigationBarType.fixed', index: 0 },
  shifting: { _name: 'BottomNavigationBarType.shifting', index: 1 },
};
class IconData extends DartClass {
  constructor(codePoint, { fontFamily, fontPackage, matchTextDirection } = {}) {
    super();

    this.codePoint = codePoint;
    this.fontFamily = fontFamily;
    this.fontPackage = fontPackage;
    this.matchTextDirection = matchTextDirection;
  }
}

IconData.new = function (codePoint, args) {
  return new IconData(codePoint, args);
};

// TabBarIndicatorSize = {
//   tab: "TabBarIndicatorSize.tab",
//   label: "TabBarIndicatorSize.label"
// };
TabBarIndicatorSize = {
  tab: { _name: 'TabBarIndicatorSize.tab', index: 0 },
  label: { _name: 'TabBarIndicatorSize.label', index: 1 },
};

class Border extends FlutterWidget {
  constructor({ top, right, bottom, left } = {}) {
    super();

    this.top = top;
    this.right = right;
    this.bottom = bottom;
    this.left = left;
  }
}

Border.new = function (args) {
  return new Border(args);
};

Border.all = function ({ color, width, style }) {
  let side = new BorderSide({
    color: color,
    width: width,
    style: style,
  });
  return new Border({
    top: side,
    right: side,
    bottom: side,
    left: side,
  });
};

class AnnotatedRegion extends DartClass {
  constructor({ key, child, value, sized } = {}) {
    super();

    this.key = key;
    this.child = child;
    this.value = value;
    this.sized = sized;
  }
}

AnnotatedRegion.new = function (args) {
  return new AnnotatedRegion(args);
};

// Brightness = {
//     dark: "Brightness.dark",
//     light: "Brightness.light"
// };

Brightness = {
  dark: { _name: 'Brightness.dark', index: 0 },
  light: { _name: 'Brightness.light', index: 1 },
};

class SystemUiOverlayStyle extends DartClass {
  constructor({
    systemNavigationBarColor,
    systemNavigationBarDividerColor,
    systemNavigationBarIconBrightness,
    statusBarColor,
    statusBarBrightness,
    statusBarIconBrightness,
  } = {}) {
    super();

    this.systemNavigationBarColor = systemNavigationBarColor;
    this.systemNavigationBarDividerColor = systemNavigationBarDividerColor;
    this.systemNavigationBarIconBrightness = systemNavigationBarIconBrightness;
    this.statusBarColor = statusBarColor;
    this.statusBarBrightness = statusBarBrightness;
    this.statusBarIconBrightness = statusBarIconBrightness;
  }

  // static light() {
  //     let w = new SystemUiOverlayStyle({
  //         systemNavigationBarColor: new Color(0xFF000000),
  //         systemNavigationBarDividerColor: null,
  //         statusBarColor: null,
  //         systemNavigationBarIconBrightness: Brightness.light,
  //         statusBarIconBrightness: Brightness.light,
  //         statusBarBrightness:Brightness.dark
  //     });
  //     return w;
  // }

  // static dark() {
  //     let w = new SystemUiOverlayStyle({
  //         systemNavigationBarColor: new Color(0xFF000000),
  //         systemNavigationBarDividerColor: null,
  //         statusBarColor: null,
  //         systemNavigationBarIconBrightness: Brightness.light,
  //         statusBarIconBrightness: Brightness.dark,
  //         statusBarBrightness:Brightness.light
  //     });
  //     return w;
  // }
}

SystemUiOverlayStyle.new = function (args) {
  return new SystemUiOverlayStyle(args);
};

SystemUiOverlayStyle.light = new SystemUiOverlayStyle({
  systemNavigationBarColor: new Color(0xff000000),
  systemNavigationBarDividerColor: null,
  statusBarColor: null,
  systemNavigationBarIconBrightness: Brightness.light,
  statusBarIconBrightness: Brightness.light,
  statusBarBrightness: Brightness.dark,
});

SystemUiOverlayStyle.dark = new SystemUiOverlayStyle({
  systemNavigationBarColor: new Color(0xff000000),
  systemNavigationBarDividerColor: null,
  statusBarColor: null,
  systemNavigationBarIconBrightness: Brightness.light,
  statusBarIconBrightness: Brightness.dark,
  statusBarBrightness: Brightness.light,
});

class MaterialColor extends DartClass {
  constructor(primary, swatch) {
    super();

    this.primary = primary;
    this.swatch = swatch;
  }
}

MaterialColor.new = function (primary, swatch) {
  return new MaterialColor(primary, swatch);
};

class MaterialAccentColor extends DartClass {
  constructor(primary, swatch) {
    super();

    this.primary = primary;
    this.swatch = swatch;
  }
}

MaterialAccentColor.new = function (primary, swatch) {
  return new MaterialAccentColor(primary, swatch);
};

class InputDecorationTheme extends DartClass {
  constructor({
    labelStyle,
    helperStyle,
    hintStyle,
    errorStyle,
    errorMaxLines,
    hasFloatingPlaceholder,
    isDense,
    contentPadding,
    isCollapsed,
    prefixStyle,
    suffixStyle,
    counterStyle,
    filled,
    fillColor,
    errorBorder,
    focusedBorder,
    focusedErrorBorder,
    disabledBorder,
    enabledBorder,
    border,
  } = {}) {
    super();

    this.labelStyle = labelStyle;
    this.helperStyle = helperStyle;
    this.hintStyle = hintStyle;
    this.errorStyle = errorStyle;
    this.errorMaxLines = errorMaxLines;
    this.hasFloatingPlaceholder = hasFloatingPlaceholder;
    this.isDense = isDense;
    this.contentPadding = contentPadding;
    this.isCollapsed = isCollapsed;
    this.prefixStyle = prefixStyle;
    this.suffixStyle = suffixStyle;
    this.counterStyle = counterStyle;
    this.filled = filled;
    this.fillColor = fillColor;
    this.errorBorder = errorBorder;
    this.focusedBorder = focusedBorder;
    this.focusedErrorBorder = focusedErrorBorder;
    this.disabledBorder = disabledBorder;
    this.enabledBorder = enabledBorder;
    this.border = border;
  }
}

InputDecorationTheme.new = function (args) {
  return new InputDecorationTheme(args);
};

InputDecorationTheme.fromJson = function (mapObj) {
  if (mapObj == null || mapObj == undefined) {
    return null;
  }

  let obj = new InputDecorationTheme({
    labelStyle: mapObj['labelStyle'],
    helperStyle: mapObj['helperStyle'],
    hintStyle: mapObj['hintStyle'],
    errorStyle: mapObj['errorStyle'],
    errorMaxLines: mapObj['errorMaxLines'],
    hasFloatingPlaceholder: mapObj['hasFloatingPlaceholder'],
    isDense: mapObj['isDense'],
    contentPadding: mapObj['contentPadding'],
    isCollapsed: mapObj['isCollapsed'],
    prefixStyle: mapObj['prefixStyle'],
    suffixStyle: mapObj['suffixStyle'],
    counterStyle: mapObj['counterStyle'],
    filled: mapObj['filled'],
    fillColor: mapObj['fillColor'],
    errorBorder: mapObj['errorBorder'],
    focusedBorder: mapObj['focusedBorder'],
    focusedErrorBorder: mapObj['focusedErrorBorder'],
    disabledBorder: mapObj['disabledBorder'],
    enabledBorder: mapObj['enabledBorder'],
    border: mapObj['border'],
  });

  return obj;
};
// TargetPlatform = {
//   android: "TargetPlatform.android",
//   fuchsia: "TargetPlatform.fuchsia",
//   iOS: "TargetPlatform.iOS"
// };

TargetPlatform = {
  android: { _name: 'TargetPlatform.android', index: 0 },
  fuchsia: { _name: 'TargetPlatform.fuchsia', index: 1 },
  iOS: { _name: 'TargetPlatform.iOS', index: 2 },
};

// FloatingActionButtonLocation = {
//   endDocked: { className: "FloatingActionButtonLocation.endDocked" },
//   centerDocked: { className: "FloatingActionButtonLocation.centerDocked" },
//   endFloat: { className: "FloatingActionButtonLocation.endFloat" },
//   centerFloat: { className: "FloatingActionButtonLocation.centerFloat" }
// };

FloatingActionButtonLocation = {
  endDocked: { _name: 'FloatingActionButtonLocation.endDocked', index: 0 },
  centerDocked: {
    _name: 'FloatingActionButtonLocation.centerDocked',
    index: 1,
  },
  endFloat: { _name: 'FloatingActionButtonLocation.endFloat', index: 2 },
  centerFloat: { _name: 'FloatingActionButtonLocation.centerFloat', index: 3 },
  startTop: { _name: 'FloatingActionButtonLocation.startTop', index: 4 },
  miniStartTop: { _name: 'FloatingActionButtonLocation.miniStartTop', index: 5 },
  endTop: { _name: 'FloatingActionButtonLocation.endTop', index: 6 },
};

class Colors {
  get transparent() {
    return new Color(0x00000000);
  }

  get black() {
    return new Color(0xff000000);
  }

  get black87() {
    return new Color(0xdd000000);
  }

  get black54() {
    return new Color(0x8a000000);
  }

  get black45() {
    return new Color(0x73000000);
  }

  get black38() {
    return new Color(0x61000000);
  }

  get black26() {
    return new Color(0x42000000);
  }

  get black12() {
    return new Color(0x1f000000);
  }

  get white() {
    return new Color(0xffffffff);
  }

  get white70() {
    return new Color(0xb3ffffff);
  }

  get white54() {
    return new Color(0x8affffff);
  }

  get white30() {
    return new Color(0x4dffffff);
  }

  get white24() {
    return new Color(0x3dffffff);
  }

  get white12() {
    return new Color(0x1fffffff);
  }

  get white10() {
    return new Color(0x1affffff);
  }

  get orange() {
    return new Color(0xffff9800);
  }

  get red() {
    return new Color(0xfff44336);
  }

  get purple() {
    return new Color(0xff9c27b0);
  }

  get pink() {
    return new Color(0xffe91e63);
  }

  get indigo() {
    return new Color(0xff3f51b5);
  }

  get deepPurple() {
    return new Color(0xff673ab7);
  }

  get blue() {
    return new Color(0xff2196f3);
  }

  get lightBlue() {
    return new Color(0xff03a9f4);
  }

  get cyan() {
    return new Color(0xff00bcd4);
  }

  get green() {
    return new Color(0xff4caf50);
  }

  get lightGreen() {
    return new Color(0xff8bc34a);
  }

  get lime() {
    return new Color(0xffcddc39);
  }

  get yellow() {
    return new Color(0xffffeb3b);
  }

  get deepOrange() {
    return new Color(0xffff5722);
  }

  get teal() {
    return new Color(0xff009688);
  }

  get indigo() {
    return new Color(0xff3f51b5);
  }

  get amber() {
    return new Color(0xffffc107);
  }

  get brown() {
    return new Color(0xff795548);
  }

  get grey() {
    return new Color(0xff9e9e9e);
  }

  get blueGrey() {
    return new Color(0xff607d8b);
  }
}

Colors.transparent = new Color(0x00000000);
Colors.black = new Color(0xff000000);
Colors.black87 = new Color(0xdd000000);
Colors.black54 = new Color(0x8a000000);
Colors.black45 = new Color(0x73000000);
Colors.black38 = new Color(0x61000000);
Colors.black26 = new Color(0x42000000);
Colors.black12 = new Color(0x1f000000);
Colors.white = new Color(0xffffffff);
Colors.white70 = new Color(0xb3ffffff);
Colors.white54 = new Color(0x8affffff);
Colors.white30 = new Color(0x4dffffff);
Colors.white24 = new Color(0x3dffffff);
Colors.white12 = new Color(0x1fffffff);
Colors.white10 = new Color(0x1affffff);

Colors.red = new MaterialColor(0xfff44336, {
  50: new Color(0xffffebee),
  100: new Color(0xffffcdd2),
  200: new Color(0xffef9a9a),
  300: new Color(0xffe57373),
  400: new Color(0xffef5350),
  500: new Color(0xfff44336),
  600: new Color(0xffe53935),
  700: new Color(0xffd32f2f),
  800: new Color(0xffc62828),
  900: new Color(0xffb71c1c),
});

Colors.redAccent = new MaterialAccentColor(0xffff5252, {
  100: new Color(0xffff8a80),
  200: new Color(0xffff5252),
  400: new Color(0xffff1744),
  700: new Color(0xffd50000),
});

Colors.pink = new MaterialAccentColor(0xffe91e63, {
  50: new Color(0xfffce4ec),
  100: new Color(0xfff8bbd0),
  200: new Color(0xfff48fb1),
  300: new Color(0xfff06292),
  400: new Color(0xffec407a),
  500: new Color(0xffe91e63),
  600: new Color(0xffd81b60),
  700: new Color(0xffc2185b),
  800: new Color(0xffad1457),
  900: new Color(0xff880e4f),
});

Colors.pinkAccent = new MaterialAccentColor(0xffff4081, {
  100: new Color(0xffff80ab),
  200: new Color(0xffff4081),
  400: new Color(0xfff50057),
  700: new Color(0xffc51162),
});

Colors.purple = new MaterialAccentColor(0xff9c27b0, {
  50: new Color(0xfff3e5f5),
  100: new Color(0xffe1bee7),
  200: new Color(0xffce93d8),
  300: new Color(0xffba68c8),
  400: new Color(0xffab47bc),
  500: new Color(0xff9c27b0),
  600: new Color(0xff8e24aa),
  700: new Color(0xff7b1fa2),
  800: new Color(0xff6a1b9a),
  900: new Color(0xff4a148c),
});

Colors.purpleAccent = new MaterialAccentColor(0xffe040fb, {
  100: new Color(0xffea80fc),
  200: new Color(0xffe040fb),
  400: new Color(0xffd500f9),
  700: new Color(0xffaa00ff),
});

Colors.deepPurple = new MaterialAccentColor(0xff673ab7, {
  50: new Color(0xffede7f6),
  100: new Color(0xffd1c4e9),
  200: new Color(0xffb39ddb),
  300: new Color(0xff9575cd),
  400: new Color(0xff7e57c2),
  500: new Color(0xff673ab7),
  600: new Color(0xff5e35b1),
  700: new Color(0xff512da8),
  800: new Color(0xff4527a0),
  900: new Color(0xff311b92),
});

Colors.deepPurpleAccent = new MaterialAccentColor(0xff7c4dff, {
  100: new Color(0xffb388ff),
  200: new Color(0xff7c4dff),
  400: new Color(0xff651fff),
  700: new Color(0xff6200ea),
});

Colors.indigo = new MaterialColor(0xff3f51b5, {
  50: new Color(0xffe8eaf6),
  100: new Color(0xffc5cae9),
  200: new Color(0xff9fa8da),
  300: new Color(0xff7986cb),
  400: new Color(0xff5c6bc0),
  500: new Color(0xff3f51b5),
  600: new Color(0xff3949ab),
  700: new Color(0xff303f9f),
  800: new Color(0xff283593),
  900: new Color(0xff1a237e),
});

Colors.indigoAccent = new MaterialAccentColor(0xff536dfe, {
  100: new Color(0xff8c9eff),
  200: new Color(0xff536dfe),
  400: new Color(0xff3d5afe),
  700: new Color(0xff304ffe),
});

Colors.blue = new MaterialColor(0xff2196f3, {
  50: new Color(0xffe3f2fd),
  100: new Color(0xffbbdefb),
  200: new Color(0xff90caf9),
  300: new Color(0xff64b5f6),
  400: new Color(0xff42a5f5),
  500: new Color(0xff2196f3),
  600: new Color(0xff1e88e5),
  700: new Color(0xff1976d2),
  800: new Color(0xff1565c0),
  900: new Color(0xff0d47a1),
});

Colors.blueAccent = new MaterialAccentColor(0xff448aff, {
  100: new Color(0xff82b1ff),
  200: new Color(0xff448aff),
  400: new Color(0xff2979ff),
  700: new Color(0xff2962ff),
});

Colors.lightBlue = new MaterialColor(0xff03a9f4, {
  50: new Color(0xffe1f5fe),
  100: new Color(0xffb3e5fc),
  200: new Color(0xff81d4fa),
  300: new Color(0xff4fc3f7),
  400: new Color(0xff29b6f6),
  500: new Color(0xff03a9f4),
  600: new Color(0xff039be5),
  700: new Color(0xff0288d1),
  800: new Color(0xff0277bd),
  900: new Color(0xff01579b),
});

Colors.lightBlueAccent = new MaterialAccentColor(0xff40c4ff, {
  100: new Color(0xff80d8ff),
  200: new Color(0xff40c4ff),
  400: new Color(0xff00b0ff),
  700: new Color(0xff0091ea),
});

Colors.cyan = new MaterialColor(0xff00bcd4, {
  50: new Color(0xffe0f7fa),
  100: new Color(0xffb2ebf2),
  200: new Color(0xff80deea),
  300: new Color(0xff4dd0e1),
  400: new Color(0xff26c6da),
  500: new Color(0xff00bcd4),
  600: new Color(0xff00acc1),
  700: new Color(0xff0097a7),
  800: new Color(0xff00838f),
  900: new Color(0xff006064),
});

Colors.cyanAccent = new MaterialAccentColor(0xff18ffff, {
  100: new Color(0xff84ffff),
  200: new Color(0xff18ffff),
  400: new Color(0xff00e5ff),
  700: new Color(0xff00b8d4),
});

Colors.teal = new MaterialColor(0xff009688, {
  50: new Color(0xffe0f2f1),
  100: new Color(0xffb2dfdb),
  200: new Color(0xff80cbc4),
  300: new Color(0xff4db6ac),
  400: new Color(0xff26a69a),
  500: new Color(0xff009688),
  600: new Color(0xff00897b),
  700: new Color(0xff00796b),
  800: new Color(0xff00695c),
  900: new Color(0xff004d40),
});

Colors.tealAccent = new MaterialAccentColor(0xff64ffda, {
  100: new Color(0xff84ffff),
  200: new Color(0xff64ffda),
  400: new Color(0xff00e5ff),
  700: new Color(0xff00b8d4),
});

Colors.green = new MaterialColor(0xff4caf50, {
  50: new Color(0xffe8f5e9),
  100: new Color(0xffc8e6c9),
  200: new Color(0xffa5d6a7),
  300: new Color(0xff81c784),
  400: new Color(0xff66bb6a),
  500: new Color(0xff4caf50),
  600: new Color(0xff43a047),
  700: new Color(0xff388e3c),
  800: new Color(0xff2e7d32),
  900: new Color(0xff1b5e20),
});

Colors.greenAccent = new MaterialAccentColor(0xff69f0ae, {
  100: new Color(0xffb9f6ca),
  200: new Color(0xff69f0ae),
  400: new Color(0xff00e676),
  700: new Color(0xff00c853),
});

Colors.lightGreen = new MaterialColor(0xff8bc34a, {
  50: new Color(0xfff1f8e9),
  100: new Color(0xffdcedc8),
  200: new Color(0xffc5e1a5),
  300: new Color(0xffaed581),
  400: new Color(0xff9ccc65),
  500: new Color(0xff8bc34a),
  600: new Color(0xff7cb342),
  700: new Color(0xff689f38),
  800: new Color(0xff558b2f),
  900: new Color(0xff33691e),
});

Colors.lightGreenAccent = new MaterialAccentColor(0xffb2ff59, {
  100: new Color(0xffccff90),
  200: new Color(0xffb2ff59),
  400: new Color(0xff76ff03),
  700: new Color(0xff64dd17),
});

Colors.lime = new MaterialColor(0xffcddc39, {
  50: new Color(0xfff9fbe7),
  100: new Color(0xfff0f4c3),
  200: new Color(0xffe6ee9c),
  300: new Color(0xffdce775),
  400: new Color(0xffd4e157),
  500: new Color(0xffcddc39),
  600: new Color(0xffc0ca33),
  700: new Color(0xffafb42b),
  800: new Color(0xff9e9d24),
  900: new Color(0xff827717),
});

Colors.limeAccent = new MaterialAccentColor(0xffeeff41, {
  100: new Color(0xfff4ff81),
  200: new Color(0xffeeff41),
  400: new Color(0xffc6ff00),
  700: new Color(0xffaeea00),
});

Colors.yellow = new MaterialColor(0xffffeb3b, {
  50: new Color(0xfffffde7),
  100: new Color(0xfffff9c4),
  200: new Color(0xfffff59d),
  300: new Color(0xfffff176),
  400: new Color(0xffffee58),
  500: new Color(0xffffeb3b),
  600: new Color(0xfffdd835),
  700: new Color(0xfffbc02d),
  800: new Color(0xfff9a825),
  900: new Color(0xfff57f17),
});

Colors.yellowAccent = new MaterialAccentColor(0xffffff00, {
  100: new Color(0xffffff8d),
  200: new Color(0xffffff00),
  400: new Color(0xffffea00),
  700: new Color(0xffffd600),
});

Colors.amber = new MaterialColor(0xffffc107, {
  50: new Color(0xfffff8e1),
  100: new Color(0xffffecb3),
  200: new Color(0xffffe082),
  300: new Color(0xffffd54f),
  400: new Color(0xffffca28),
  500: new Color(0xffffc107),
  600: new Color(0xffffb300),
  700: new Color(0xffffa000),
  800: new Color(0xffff8f00),
  900: new Color(0xffff6f00),
});

Colors.amberAccent = new MaterialAccentColor(0xffffd740, {
  100: new Color(0xffffe57f),
  200: new Color(0xffffd740),
  400: new Color(0xffffc400),
  700: new Color(0xffffab00),
});

Colors.orange = new MaterialColor(0xffff9800, {
  50: new Color(0xfffff3e0),
  100: new Color(0xffffe0b2),
  200: new Color(0xffffcc80),
  300: new Color(0xffffb74d),
  400: new Color(0xffffa726),
  500: new Color(0xffff9800),
  600: new Color(0xfffb8c00),
  700: new Color(0xfff57c00),
  800: new Color(0xffef6c00),
  900: new Color(0xffe65100),
});

Colors.orangeAccent = new MaterialAccentColor(0xffffab40, {
  100: new Color(0xffffd180),
  200: new Color(0xffffab40),
  400: new Color(0xffff9100),
  700: new Color(0xffff6d00),
});

Colors.deepOrange = new MaterialColor(0xffff5722, {
  50: new Color(0xfffbe9e7),
  100: new Color(0xffffccbc),
  200: new Color(0xffffab91),
  300: new Color(0xffff8a65),
  400: new Color(0xffff7043),
  500: new Color(0xffff5722),
  600: new Color(0xfff4511e),
  700: new Color(0xffe64a19),
  800: new Color(0xffd84315),
  900: new Color(0xffbf360c),
});

Colors.deepOrangeAccent = new MaterialAccentColor(0xffff6e40, {
  100: new Color(0xffff9e80),
  200: new Color(0xffff6e40),
  400: new Color(0xffff3d00),
  700: new Color(0xffdd2c00),
});

Colors.brown = new MaterialColor(0xff795548, {
  50: new Color(0xffefebe9),
  100: new Color(0xffd7ccc8),
  200: new Color(0xffbcaaa4),
  300: new Color(0xffa1887f),
  400: new Color(0xff8d6e63),
  500: new Color(0xff795548),
  600: new Color(0xff6d4c41),
  700: new Color(0xff5d4037),
  800: new Color(0xff4e342e),
  900: new Color(0xff3e2723),
});

Colors.grey = new MaterialColor(0xff9e9e9e, {
  50: new Color(0xfffafafa),
  100: new Color(0xfff5f5f5),
  200: new Color(0xffeeeeee),
  300: new Color(0xffe0e0e0),
  350: new Color(0xffd6d6d6), // only for raised button while pressed in light theme
  400: new Color(0xffbdbdbd),
  500: new Color(0xff9e9e9e),
  600: new Color(0xff757575),
  700: new Color(0xff616161),
  800: new Color(0xff424242),
  850: new Color(0xff303030), // only for background color in dark theme
  900: new Color(0xff212121),
});

Colors.blueGrey = new MaterialColor(0xff607d8b, {
  50: new Color(0xffeceff1),
  100: new Color(0xffcfd8dc),
  200: new Color(0xffb0bec5),
  300: new Color(0xff90a4ae),
  400: new Color(0xff78909c),
  500: new Color(0xff607d8b),
  600: new Color(0xff546e7a),
  700: new Color(0xff455a64),
  800: new Color(0xff37474f),
  900: new Color(0xff263238),
});

Colors.primaries = [
  Colors.red,
  Colors.pink,
  Colors.purple,
  Colors.deepPurple,
  Colors.indigo,
  Colors.blue,
  Colors.lightBlue,
  Colors.cyan,
  Colors.teal,
  Colors.green,
  Colors.lightGreen,
  Colors.lime,
  Colors.yellow,
  Colors.amber,
  Colors.orange,
  Colors.deepOrange,
  Colors.brown,
  // The grey swatch is intentionally omitted because when picking a color
  // randomly from this list to colorize an application, picking grey suddenly
  // makes the app look disabled.
  Colors.blueGrey,
];

Colors.accents = [
  Colors.redAccent,
  Colors.pinkAccent,
  Colors.purpleAccent,
  Colors.deepPurpleAccent,
  Colors.indigoAccent,
  Colors.blueAccent,
  Colors.lightBlueAccent,
  Colors.cyanAccent,
  Colors.tealAccent,
  Colors.greenAccent,
  Colors.lightGreenAccent,
  Colors.limeAccent,
  Colors.yellowAccent,
  Colors.amberAccent,
  Colors.orangeAccent,
  Colors.deepOrangeAccent,
  Colors.brownAccent,
  // The grey swatch is intentionally omitted because when picking a color
  // randomly from this list to colorize an application, picking grey suddenly
  // makes the app look disabled.
  Colors.blueGrey,
];

class CircularNotchedRectangle extends DartClass {
  constructor({} = {}) {
    super();
  }
}

CircularNotchedRectangle.new = function (args) {
  return new CircularNotchedRectangle(args);
};

class IconTheme extends DartClass {
  constructor({ key, data, child } = {}) {
    super();

    this.key = key;
    this.data = data;
    this.child = child;
  }
}

IconTheme.new = function (args) {
  return new IconTheme(args);
};

IconTheme.of = function (context) {
  return context.iconThemeData;
};

class IconThemeData extends DartClass {
  constructor({ color, opacity, size } = {}) {
    super();

    this.color = color;
    this.opacity = opacity;
    this.size = size;
  }
}

IconThemeData.new = function (args) {
  return new IconThemeData(args);
};

//TODO
IconThemeData.fromJson = function (mapObj) {
  if (mapObj == null || mapObj == undefined) {
    return null;
  }

  let obj = new IconThemeData();

  for (var p in mapObj) {
    if (mapObj.hasOwnProperty(p)) {
      let v = mapObj[p];
      switch (p) {
        case 'color':
          obj[p] = new Color(v);
          break;

        default:
          obj[p] = v;
          break;
      }
    }
  }

  return obj;
};

class DropdownMenuItem extends DartClass {
  constructor({ key, value, child } = {}) {
    super();

    this.key = key;
    this.value = value;
    this.child = child;
  }
}

DropdownMenuItem.new = function (args) {
  return new DropdownMenuItem(args);
};

function assert(condition, message) {
  if (!condition) {
    message = message || 'Assertion failed';
    if (typeof Error !== 'undefined') {
      throw new Error(message);
    }
    throw message; // Fallback
  }
}

class BoxShadow extends DartClass {
  constructor({ color, offset, blurRadius, spreadRadius } = {}) {
    super();

    this.color = color;
    this.offset = offset;
    this.blurRadius = blurRadius;
    this.spreadRadius = spreadRadius;
  }
}

BoxShadow.new = function (args) {
  return new BoxShadow(args);
};

// BoxShape = {
//   circle: "BoxShape.circle",
//   rectangle: "BoxShape.rectangle"
// };

BoxShape = {
  circle: { _name: 'BoxShape.circle', index: 0 },
  rectangle: { _name: 'BoxShape.rectangle', index: 1 },
};

class Quaternion extends DartClass {
  constructor(x, y, z, w) {
    super();

    this.x = x;
    this.y = y;
    this.z = z;
    this.w = w;
  }
}

Quaternion.new = function (x, y, z, w) {
  return new Quaternion(x, y, z, w);
};

class Slider extends FlutterWidget {
  constructor({ key, value, onChanged, onChangeStart, onChangeEnd, min, max, divisions, label, activeColor, inactiveColor, semanticFormatterCallback } = {}) {
    super();

    this.key = key;
    this.value = value;
    this.onChanged = onChanged;
    this.onChangeStart = onChangeStart;
    this.onChangeEnd = onChangeEnd;
    this.min = min;
    this.max = max;
    this.divisions = divisions;
    this.label = label;
    this.activeColor = activeColor;
    this.inactiveColor = inactiveColor;
    this.semanticFormatterCallback = semanticFormatterCallback;
  }
}

Slider.new = function (arg) {
  return new Slider(arg);
};

class CircleAvatar extends DartClass {
  constructor({ key, child, backgroundColor, backgroundImage, foregroundColor, radius, minRadius, maxRadius } = {}) {
    super();

    this.key = key;
    this.child = child;
    this.backgroundColor = backgroundColor;
    this.backgroundImage = backgroundImage;
    this.foregroundColor = foregroundColor;
    this.radius = radius;
    this.minRadius = minRadius;
    this.maxRadius = maxRadius;
  }
}

CircleAvatar.new = function (args) {
  return new CircleAvatar(args);
};

class BorderDirectional extends DartClass {
  constructor({ top, start, end, bottom } = {}) {
    super();

    this.top = top;
    this.start = start;
    this.end = end;
    this.bottom = bottom;
  }
}

BorderDirectional.new = function (args) {
  return new BorderDirectional(args);
};

// ButtonTextTheme = {
//   normal: "ButtonTextTheme.normal",
//   accent: "ButtonTextTheme.accent",
//   primary: "ButtonTextTheme.primary"
// };

ButtonTextTheme = {
  normal: { _name: 'ButtonTextTheme.normal', index: 0 },
  accent: { _name: 'ButtonTextTheme.accent', index: 1 },
  primary: { _name: 'ButtonTextTheme.primary', index: 2 },
};

class Chip extends DartClass {
  constructor({
    key,
    avatar,
    label,
    labelStyle,
    labelPadding,
    deleteIcon,
    onDeleted,
    deleteIconColor,
    deleteButtonTooltipMessage,
    shape,
    clipBehavior,
    backgroundColor,
    padding,
    materialTapTargetSize,
    elevation,
  } = {}) {
    super();

    this.key = key;
    this.avatar = avatar;
    this.label = label;
    this.labelStyle = labelStyle;
    this.labelPadding = labelPadding;
    this.deleteIcon = deleteIcon;
    this.onDeleted = onDeleted;
    this.deleteIconColor = deleteIconColor;
    this.deleteButtonTooltipMessage = deleteButtonTooltipMessage;
    this.shape = shape;
    this.clipBehavior = clipBehavior;
    this.backgroundColor = backgroundColor;
    this.padding = padding;
    this.materialTapTargetSize = materialTapTargetSize;
    this.elevation = elevation;
  }
}

Chip.new = function (arg) {
  return new Chip(arg);
};

class InputBorder extends DartClass {
  constructor({
    // borderSide,
  } = {}) {
    super();

    // this.borderSide = borderSide;
  }
}

InputBorder.new = function (args) {
  return new InputBorder(args);
};

InputBorder.none = function () {
  let v = new InputBorder();
  v.staticFunctionName = 'none';

  return v;
};

class Positioned extends DartClass {
  constructor({ key, left, top, right, bottom, width, height, child } = {}) {
    super();

    this.key = key;
    this.left = left;
    this.top = top;
    this.right = right;
    this.bottom = bottom;
    this.width = width;
    this.height = height;
    this.child = child;
  }
}

Positioned.new = function (args) {
  return new Positioned(args);
};

Positioned.fromRect = function ({ key, rect, child } = {}) {
  let positioned = new Positioned();
  positioned.key = key;
  (positioned.left = rect.left), (positioned.top = rect.top), (positioned.width = rect.width), (positioned.height = rect.height), (positioned.child = child);
  return positioned;
};

class Opacity extends DartClass {
  constructor({ key, opacity, alwaysIncludeSemantics, child } = {}) {
    super();

    this.key = key;
    this.opacity = opacity;
    this.alwaysIncludeSemantics = alwaysIncludeSemantics;
    this.child = child;
  }
}

Opacity.new = function (args) {
  return new Opacity(args);
};

class TableColumnWidth extends DartClass {
  constructor() {
    super();
  }
}

TableColumnWidth.new = function (args) {
  return new TableColumnWidth(args);
};

class ColorScheme extends DartClass {
  constructor({
    primary,
    primaryVariant,
    secondary,
    secondaryVariant,
    surface,
    background,
    error,
    onPrimary,
    onSecondary,
    onSurface,
    onBackground,
    onError,
    brightness,
  } = {}) {
    super();

    this.primary = primary;
    this.primaryVariant = primaryVariant;
    this.secondary = secondary;
    this.secondaryVariant = secondaryVariant;
    this.surface = surface;
    this.background = background;
    this.error = error;
    this.onPrimary = onPrimary;
    this.onSecondary = onSecondary;
    this.onSurface = onSurface;
    this.onBackground = onBackground;
    this.onError = onError;
    this.brightness = brightness;
  }

  static fromSwatch({ primarySwatch, accentColor, cardColor, backgroundColor, errorColor, brightness } = {}) {
    let jsObj = new ColorScheme();
    jsObj.constructorName = 'fromSwatch';

    jsObj.primarySwatch = primarySwatch;
    jsObj.accentColor = accentColor;
    jsObj.cardColor = cardColor;
    jsObj.backgroundColor = backgroundColor;
    jsObj.errorColor = errorColor;
    jsObj.brightness = brightness;

    return jsObj;
  }
}

ColorScheme.new = function (args) {
  return new ColorScheme(args);
};

ButtonBarLayoutBehavior = {
  constrained: { _name: 'ButtonBarLayoutBehavior.constrained', index: 0 },
  padded: { _name: 'ButtonBarLayoutBehavior.padded', index: 1 },
};

class ButtonThemeData extends DartClass {
  constructor({
    textTheme,
    minWidth,
    height,
    padding,
    shape,
    layoutBehavior,
    alignedDropdown,
    buttonColor,
    disabledColor,
    focusColor,
    hoverColor,
    highlightColor,
    splashColor,
    colorScheme,
    materialTapTargetSize,
  } = {}) {
    super();

    this.textTheme = textTheme;
    this.minWidth = minWidth;
    this.height = height;
    this.padding = padding;
    this.shape = shape;
    this.layoutBehavior = layoutBehavior;
    this.alignedDropdown = alignedDropdown;
    this.buttonColor = buttonColor;
    this.disabledColor = disabledColor;
    this.focusColor = focusColor;
    this.hoverColor = hoverColor;
    this.highlightColor = highlightColor;
    this.splashColor = splashColor;
    this.colorScheme = colorScheme;
    this.materialTapTargetSize = materialTapTargetSize;
  }
}

ButtonThemeData.new = function (args) {
  return new ButtonThemeData(args);
};

class NotificationListener extends DartClass {
  constructor({ key, child, onNotification } = {}) {
    super();

    this.key = key;
    this.child = child;
    this.onNotification = onNotification;
  }
}

NotificationListener.new = function (arg) {
  return new NotificationListener(arg);
};

class PreferredSize extends DartClass {
  constructor({ key, child, preferredSize } = {}) {
    super();

    this.key = key;
    this.child = child;
    this.preferredSize = preferredSize;
  }
}

PreferredSize.new = function (arg) {
  return new PreferredSize(arg);
};

class PreferredSizeWidget extends DartClass {
  constructor() {
    super();
  }
}

PreferredSizeWidget.new = function (args) {
  return PreferredSizeWidget(args);
};

class Notification extends DartClass {
  constructor() {
    super();
  }
}

Notification.new = function (arg) {
  return new Notification(arg);
};

class ClipRRect extends DartClass {
  constructor({ key, borderRadius, clipper, clipBehavior, child } = {}) {
    super();

    this.key = key;
    this.borderRadius = borderRadius;
    this.clipper = clipper;
    this.clipBehavior = clipBehavior;
    this.child = child;
  }
}

ClipRRect.new = function (arg) {
  return new ClipRRect(arg);
};

class SpringDescription extends DartClass {
  constructor({ mass, stiffness, damping } = {}) {
    super();

    this.mass = mass;
    this.stiffness = stiffness;
    this.damping = damping;
  }
}

SpringDescription.new = function (arg) {
  return new SpringDescription(arg);
};

class UniqueKey extends MXBaseKey {
  constructor() {
    super();
  }

  //mx特殊逻辑，Key只能是String类型
  toString() {
    return 'Key:' + ++UniqueKey._uniqueKeyFeed;
  }
}

UniqueKey._uniqueKeyFeed = 0;

UniqueKey.new = function (arg) {
  return new UniqueKey(arg);
};

class MXEncodeParam {
  static encodeParam(param) {
    if (param === null || param == undefined) {
      return param;
    }

    if (param.innerValue) {
      param = param.innerValue();
    }

    if (core.Map.is(param)) {
      param = this.mapToObj(param);
    }
    return param;
  }

  static mapToObj(map) {
    let obj = Object.create(null);
    map[$forEach](
      dart.fn((key, value) => {
        if (core.Map.is(value)) {
          obj[key] = this.mapToObj(value);
        } else if (core.List.is(value)) {
          obj[key] = this.arrayMapToObj(value);
        } else {
          obj[key] = value;
        }
      }, dynamicAnddynamicToNull()),
    );
    return obj;
  }

  static arrayMapToObj(list) {
    let array = new Array();
    list[$forEach](
      dart.fn((element) => {
        array.push(this.encodeParam(element));
      }, dynamicToNull()),
    );
    return array;
  }
}

module.exports = {
  DartClass,
  FlutterWidget,
  Key,
  AlignmentDirectional,
  EdgeInsetsDirectional,
  EdgeInsets,
  Color,
  BlendMode,
  FilterQuality,
  BlurStyle,
  Alignment,
  StrokeCap,
  StrokeJoin,
  PaintingStyle,
  Paint,
  ColorFilter,
  MaskFilter,
  TileMode,
  LinearGradient,
  RadialGradient,
  SweepGradient,
  ImageShader,
  BoxDecoration,
  Locale,
  MainAxisAlignment,
  MainAxisSize,
  CrossAxisAlignment,
  VerticalDirection,
  BoxConstraints,
  Size,
  Offset,
  TableRow,
  BoxFit,
  Overflow,
  StackFit,
  Axis,
  TableCellVerticalAlignment,
  TableBorder,
  BorderSide,
  BorderStyle,
  FlexColumnWidth,
  FixedColumnWidth,
  WrapAlignment,
  WrapCrossAlignment,
  Matrix4,
  Vector4,
  Vector3,
  Clip,
  Rect,
  PlatformAssetBundle,
  NetworkAssetBundle,
  File,
  Uint8List,
  Radius,
  BorderRadius,
  BottomNavigationBarItem,
  BottomNavigationBarType,
  IconData,
  TabBarIndicatorSize,
  Border,
  AnnotatedRegion,
  SystemUiOverlayStyle,
  Brightness,
  MaterialColor,
  MaterialAccentColor,
  InputDecorationTheme,
  TargetPlatform,
  FloatingActionButtonLocation,
  Colors,
  CircularNotchedRectangle,
  FlutterCallArgs,
  FlutterWidgetMirrorMgr,
  IconTheme,
  IconThemeData,
  DropdownMenuItem,
  BoxShadow,
  BoxShape,
  Quaternion,
  Slider,
  CircleAvatar,
  BorderDirectional,
  ButtonTextTheme,
  Chip,
  InputBorder,
  Positioned,
  Opacity,
  TableColumnWidth,
  ColorScheme,
  ButtonThemeData,
  ButtonBarLayoutBehavior,
  NotificationListener,
  PreferredSize,
  PreferredSizeWidget,
  Notification,
  ClipRRect,
  SpringDescription,
  UniqueKey,
  assert,
  MXEncodeParam,
  MXBaseKey,
  MXWidgetControllerLifeCycle
};


/***/ }),

/***/ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_context.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_context.js ***!
  \***************************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const { DartClass, Size, Color, EdgeInsets, Brightness, Colors, ColorScheme, ButtonThemeData, IconThemeData ,MXBaseKey} = __webpack_require__(/*! ./js_flutter_basic_types.js */ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_basic_types.js");
const { TextTheme } = __webpack_require__(/*! ./js_flutter_text.js */ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_text.js");

//逻辑
class MediaQuery extends DartClass {
  constructor({
    key,
    data, //MediaQueryData
    child,
  } = {}) {
    super();

    this.key = key;
    this.data = data; //MediaQueryData
    this.child = child;
  }

  static of(context) {
    //TODO 重构
    return  MediaQueryData.fromJson(context.mediaQueryData);
  }
}

MediaQuery.new = function (arg) {
  return new MediaQuery(arg);
};

class MediaQueryData extends DartClass {
  constructor({
    size,
    devicePixelRatio,
    textScaleFactor,
    padding,
    viewInsets,
    alwaysUse24HourFormat,
    accessibleNavigation,
    invertColors,
    disableAnimations,
    boldText,
  } = {}) {
    super();

    this.size = size;
    this.devicePixelRatio = devicePixelRatio;
    this.textScaleFactor = textScaleFactor;
    this.padding = padding;
    this.viewInsets = viewInsets;
    this.alwaysUse24HourFormat = alwaysUse24HourFormat;
    this.accessibleNavigation = accessibleNavigation;
    this.invertColors = invertColors;
    this.disableAnimations = disableAnimations;
    this.boldText = boldText;
  }

  static fromJson(mapObj) {
    if (mapObj == null || mapObj == undefined) {
      return null;
    }
    let obj = new MediaQueryData();

    for (var p in mapObj) {
      if (mapObj.hasOwnProperty(p)) {
        let v = mapObj[p];
        switch (p) {
          case 'size':
            obj[p] = Size.fromJson(v);
            break;
          case 'padding':
          case 'viewInsets':
            obj[p] = EdgeInsets.fromJson(v);
            break;
          default:
            obj[p] = v;
        }
      }
    }

    return obj;
  }
}

MediaQueryData.new = function (arg) {
  return new MediaQueryData(arg);
};

class Theme extends DartClass {
  constructor({ key, data, isMaterialAppTheme, child } = {}) {
    super();

    this.key = key;
    this.data = data;
    this.isMaterialAppTheme = isMaterialAppTheme;
    this.child = child;
  }

  static of(context) {
    return ThemeData.fromJson( context.themeData);
  }
}

Theme.new = function (arg) {
  return new Theme(arg);
};

class ThemeData extends DartClass {
  constructor({
    brightness,
    primarySwatch,
    primaryColor,
    primaryColorBrightness,
    primaryColorLight,
    primaryColorDark,
    accentColor,
    accentColorBrightness,
    canvasColor,
    scaffoldBackgroundColor,
    bottomAppBarColor,
    cardColor,
    dividerColor,
    focusColor,
    hoverColor,
    highlightColor,
    splashColor,
    splashFactory,
    selectedRowColor,
    unselectedWidgetColor,
    disabledColor,
    buttonColor,
    buttonTheme,
    toggleButtonsTheme,
    secondaryHeaderColor,
    textSelectionColor,
    cursorColor,
    textSelectionHandleColor,
    backgroundColor,
    dialogBackgroundColor,
    indicatorColor,
    hintColor,
    errorColor,
    toggleableActiveColor,
    fontFamily,
    textTheme,
    primaryTextTheme,
    accentTextTheme,
    inputDecorationTheme,
    iconTheme,
    primaryIconTheme,
    accentIconTheme,
    sliderTheme,
    tabBarTheme,
    tooltipTheme,
    cardTheme,
    chipTheme,
    platform,
    materialTapTargetSize,
    applyElevationOverlayColor,
    pageTransitionsTheme,
    appBarTheme,
    bottomAppBarTheme,
    colorScheme,
    dialogTheme,
    floatingActionButtonTheme,
    typography,
    cupertinoOverrideTheme,
    snackBarTheme,
    bottomSheetTheme,
    popupMenuTheme,
    bannerTheme,
    dividerTheme,
    buttonBarTheme,
  } = {}) {
    super();

    // TODO: 其他参数默认的取值
    this.brightness = brightness;
    var isDark = brightness == Brightness.dark;
    this.primarySwatch = primarySwatch != null ? primarySwatch : Colors.blue;
    this.primaryColor = primaryColor != null ? primaryColor : isDark ? Colors.grey[900] : primarySwatch;
    this.primaryColorBrightness = primaryColorBrightness;
    this.primaryColorLight = primaryColorLight;
    this.primaryColorDark = primaryColorDark;
    this.accentColor = accentColor;
    this.accentColorBrightness = accentColorBrightness;
    this.canvasColor = canvasColor;
    this.scaffoldBackgroundColor = scaffoldBackgroundColor;
    this.bottomAppBarColor = bottomAppBarColor;
    this.cardColor = cardColor;
    this.dividerColor = dividerColor;
    this.focusColor = focusColor;
    this.hoverColor = hoverColor;
    this.highlightColor = highlightColor;
    this.splashColor = splashColor;
    this.splashFactory = splashFactory;
    this.selectedRowColor = selectedRowColor;
    this.unselectedWidgetColor = unselectedWidgetColor;
    this.disabledColor = disabledColor;
    this.buttonColor = buttonColor;
    this.toggleButtonsTheme = toggleButtonsTheme;
    this.secondaryHeaderColor = secondaryHeaderColor;
    this.textSelectionColor = textSelectionColor;
    this.cursorColor = cursorColor;
    this.textSelectionHandleColor = textSelectionHandleColor;
    this.backgroundColor = backgroundColor;
    this.dialogBackgroundColor = dialogBackgroundColor;
    this.indicatorColor = indicatorColor;
    this.hintColor = hintColor;
    this.errorColor = errorColor;
    this.toggleableActiveColor = toggleableActiveColor;
    this.fontFamily = fontFamily;
    this.textTheme = textTheme;
    this.primaryTextTheme = primaryTextTheme;
    this.accentTextTheme = accentTextTheme;
    this.inputDecorationTheme = inputDecorationTheme;
    this.iconTheme = iconTheme;
    this.primaryIconTheme = primaryIconTheme;
    this.accentIconTheme = accentIconTheme;
    this.sliderTheme = sliderTheme;
    this.tabBarTheme = tabBarTheme;
    this.tooltipTheme = tooltipTheme;
    this.cardTheme = cardTheme;
    this.chipTheme = chipTheme;
    this.platform = platform;
    this.materialTapTargetSize = materialTapTargetSize;
    this.applyElevationOverlayColor = applyElevationOverlayColor;
    this.pageTransitionsTheme = pageTransitionsTheme;
    this.appBarTheme = appBarTheme;
    this.bottomAppBarTheme = bottomAppBarTheme;
    this.colorScheme =
      colorScheme != null
        ? colorScheme
        : ColorScheme.fromSwatch({
            primarySwatch: primarySwatch,
            primaryColorDark: primaryColorDark,
            accentColor: accentColor,
            cardColor: cardColor,
            backgroundColor: backgroundColor,
            errorColor: errorColor,
            brightness: brightness,
          });
    this.buttonTheme =
      buttonTheme != null
        ? buttonTheme
        : new ButtonThemeData({
            colorScheme: this.colorScheme,
            buttonColor: buttonColor,
            disabledColor: disabledColor,
            focusColor: focusColor,
            hoverColor: hoverColor,
            highlightColor: highlightColor,
            splashColor: splashColor,
            materialTapTargetSize: materialTapTargetSize,
          });
    this.dialogTheme = dialogTheme;
    this.floatingActionButtonTheme = floatingActionButtonTheme;
    this.typography = typography;
    this.cupertinoOverrideTheme = cupertinoOverrideTheme;
    this.snackBarTheme = snackBarTheme;
    this.bottomSheetTheme = bottomSheetTheme;
    this.popupMenuTheme = popupMenuTheme;
    this.bannerTheme = bannerTheme;
    this.dividerTheme = dividerTheme;
    this.buttonBarTheme = buttonBarTheme;
  }

  copyWith({
    brightness,
    primaryColor,
    primaryColorBrightness,
    primaryColorLight,
    primaryColorDark,
    accentColor,
    accentColorBrightness,
    canvasColor,
    scaffoldBackgroundColor,
    bottomAppBarColor,
    cardColor,
    dividerColor,
    focusColor,
    hoverColor,
    highlightColor,
    splashColor,
    splashFactory,
    selectedRowColor,
    unselectedWidgetColor,
    disabledColor,
    buttonTheme,
    toggleButtonsTheme,
    buttonColor,
    secondaryHeaderColor,
    textSelectionColor,
    cursorColor,
    textSelectionHandleColor,
    backgroundColor,
    dialogBackgroundColor,
    indicatorColor,
    hintColor,
    errorColor,
    toggleableActiveColor,
    textTheme,
    primaryTextTheme,
    accentTextTheme,
    inputDecorationTheme,
    iconTheme,
    primaryIconTheme,
    accentIconTheme,
    sliderTheme,
    tabBarTheme,
    tooltipTheme,
    cardTheme,
    chipTheme,
    platform,
    materialTapTargetSize,
    applyElevationOverlayColor,
    pageTransitionsTheme,
    appBarTheme,
    bottomAppBarTheme,
    colorScheme,
    dialogTheme,
    floatingActionButtonTheme,
    typography,
    cupertinoOverrideTheme,
    snackBarTheme,
    bottomSheetTheme,
    popupMenuTheme,
    bannerTheme,
    dividerTheme,
    buttonBarTheme,
  } = {}) {
    let obj = new ThemeData({
      brightness: brightness != null ? brightness : this.brightness,
      primarySwatch: this.primarySwatch,
      primaryColor: primaryColor != null ? primaryColor : this.primaryColor,
      primaryColorBrightness: primaryColorBrightness != null ? primaryColorBrightness : this.primaryColorBrightness,
      primaryColorLight: primaryColorLight != null ? primaryColorLight : this.primaryColorLight,
      primaryColorDark: primaryColorDark != null ? primaryColorDark : this.primaryColorDark,
      accentColor: accentColor != null ? accentColor : this.accentColor,
      accentColorBrightness: accentColorBrightness != null ? accentColorBrightness : this.accentColorBrightness,
      canvasColor: canvasColor != null ? canvasColor : this.canvasColor,
      scaffoldBackgroundColor: scaffoldBackgroundColor != null ? scaffoldBackgroundColor : this.scaffoldBackgroundColor,
      bottomAppBarColor: bottomAppBarColor != null ? bottomAppBarColor : this.bottomAppBarColor,
      cardColor: cardColor != null ? cardColor : this.cardColor,
      dividerColor: dividerColor != null ? dividerColor : this.dividerColor,
      focusColor: focusColor != null ? focusColor : this.focusColor,
      hoverColor: hoverColor != null ? hoverColor : this.hoverColor,
      highlightColor: highlightColor != null ? highlightColor : this.highlightColor,
      splashColor: splashColor != null ? splashColor : this.splashColor,
      splashFactory: splashFactory != null ? splashFactory : this.splashFactory,
      selectedRowColor: selectedRowColor != null ? selectedRowColor : this.selectedRowColor,
      unselectedWidgetColor: unselectedWidgetColor != null ? unselectedWidgetColor : this.unselectedWidgetColor,
      disabledColor: disabledColor != null ? disabledColor : this.disabledColor,
      buttonColor: buttonColor != null ? buttonColor : this.buttonColor,
      buttonTheme: buttonTheme != null ? buttonTheme : this.buttonTheme,
      toggleButtonsTheme: toggleButtonsTheme != null ? toggleButtonsTheme : this.toggleButtonsTheme,
      secondaryHeaderColor: secondaryHeaderColor != null ? secondaryHeaderColor : this.secondaryHeaderColor,
      textSelectionColor: textSelectionColor != null ? textSelectionColor : this.textSelectionColor,
      cursorColor: cursorColor != null ? cursorColor : this.cursorColor,
      textSelectionHandleColor: textSelectionHandleColor != null ? textSelectionHandleColor : this.textSelectionHandleColor,
      backgroundColor: backgroundColor != null ? backgroundColor : this.backgroundColor,
      dialogBackgroundColor: dialogBackgroundColor != null ? dialogBackgroundColor : this.dialogBackgroundColor,
      indicatorColor: indicatorColor != null ? indicatorColor : this.indicatorColor,
      hintColor: hintColor != null ? hintColor : this.hintColor,
      errorColor: errorColor != null ? errorColor : this.errorColor,
      toggleableActiveColor: toggleableActiveColor != null ? toggleableActiveColor : this.toggleableActiveColor,
      textTheme: textTheme != null ? textTheme : this.textTheme,
      primaryTextTheme: primaryTextTheme != null ? primaryTextTheme : this.primaryTextTheme,
      accentTextTheme: accentTextTheme != null ? accentTextTheme : this.accentTextTheme,
      inputDecorationTheme: inputDecorationTheme != null ? inputDecorationTheme : this.inputDecorationTheme,
      iconTheme: iconTheme != null ? iconTheme : this.iconTheme,
      primaryIconTheme: primaryIconTheme != null ? primaryIconTheme : this.primaryIconTheme,
      accentIconTheme: accentIconTheme != null ? accentIconTheme : this.accentIconTheme,
      sliderTheme: sliderTheme != null ? sliderTheme : this.sliderTheme,
      tabBarTheme: tabBarTheme != null ? tabBarTheme : this.tabBarTheme,
      tooltipTheme: tooltipTheme != null ? tooltipTheme : this.tooltipTheme,
      cardTheme: cardTheme != null ? cardTheme : this.cardTheme,
      chipTheme: chipTheme != null ? chipTheme : this.chipTheme,
      platform: platform != null ? platform : this.platform,
      materialTapTargetSize: materialTapTargetSize != null ? materialTapTargetSize : this.materialTapTargetSize,
      applyElevationOverlayColor: applyElevationOverlayColor != null ? applyElevationOverlayColor : this.applyElevationOverlayColor,
      pageTransitionsTheme: pageTransitionsTheme != null ? pageTransitionsTheme : this.pageTransitionsTheme,
      appBarTheme: appBarTheme != null ? appBarTheme : this.appBarTheme,
      bottomAppBarTheme: bottomAppBarTheme != null ? bottomAppBarTheme : this.bottomAppBarTheme,
      colorScheme: colorScheme != null ? colorScheme : this.colorScheme,
      dialogTheme: dialogTheme != null ? dialogTheme : this.dialogTheme,
      floatingActionButtonTheme: floatingActionButtonTheme != null ? floatingActionButtonTheme : this.floatingActionButtonTheme,
      typography: typography != null ? typography : this.typography,
      cupertinoOverrideTheme: cupertinoOverrideTheme != null ? cupertinoOverrideTheme : this.cupertinoOverrideTheme,
      snackBarTheme: snackBarTheme != null ? snackBarTheme : this.snackBarTheme,
      bottomSheetTheme: bottomSheetTheme != null ? bottomSheetTheme : this.bottomSheetTheme,
      popupMenuTheme: popupMenuTheme != null ? popupMenuTheme : this.popupMenuTheme,
      bannerTheme: bannerTheme != null ? bannerTheme : this.bannerTheme,
      dividerTheme: dividerTheme != null ? dividerTheme : this.dividerTheme,
      buttonBarTheme: buttonBarTheme != null ? buttonBarTheme : this.buttonBarTheme,
    });
    return obj;
  }
}

ThemeData.new = function (arg) {
  return new ThemeData(arg);
};

ThemeData.light = function () {
  return new ThemeData({ brightness: Brightness.light });
};

ThemeData.dark = function () {
  return new ThemeData({ brightness: Brightness.dark });
};

//TODO
ThemeData.fromJson = function (mapObj) {
  if (mapObj == null || mapObj == undefined) {
    return null;
  }

  let obj = new ThemeData();

  for (var p in mapObj) {
    if (mapObj.hasOwnProperty(p)) {
      let v = mapObj[p];
      switch (p) {
        case 'primaryColor':
        case 'primaryColorLight':
        case 'primaryColorDark':
        case 'accentColor':
        case 'canvasColor':
        case 'scaffoldBackgroundColor':
        case 'bottomAppBarColor':
        case 'cardColor':
        case 'dividerColor':
        case 'highlightColor':
        case 'splashColor':
        case 'selectedRowColor':
        case 'unselectedWidgetColor':
        case 'disabledColor':
        case 'buttonColor':
        case 'secondaryHeaderColor':
        case 'textSelectionColor':
        case 'cursorColor':
        case 'textSelectionHandleColor':
        case 'backgroundColor':
        case 'dialogBackgroundColor':
        case 'indicatorColor':
        case 'hintColor':
        case 'errorColor':
        case 'toggleableActiveColor':
          obj[p] = new Color(v);
          break;

        case 'textTheme':
        case 'primaryTextTheme':
        case 'accentTextTheme':
          obj[p] = TextTheme.fromJson(v);
          break;

        default:
          obj[p] = v;
          break;
      }
    }
  }

  return obj;
};

class GlobalKey extends MXBaseKey {
  constructor({ debugLabel } = {}) {
    super();

    this.debugLabel = debugLabel;
  }

  //mx特殊逻辑，Key只能是String类型
  toString() {
    return "GlobalKey:" + this.debugLabel;
  }
  
}

GlobalKey.new = function (arg) {
  return new GlobalKey(arg);
};

module.exports = {
  MediaQuery,
  MediaQueryData,
  Theme,
  ThemeData,
  GlobalKey,
};


/***/ }),

/***/ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_cupertino.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_cupertino.js ***!
  \*****************************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

//  MXFlutterFramework
//  Copyright 2019 The MXFlutter Authors. All rights reserved.
//
//  Use of this source code is governed by a MIT-style license that can be
//  found in the LICENSE file.

let { DartClass, FlutterWidget } = __webpack_require__(/*! ./js_flutter_basic_types.js */ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_basic_types.js");

class CupertinoActivityIndicator extends FlutterWidget {
  constructor({ key, animating, radius } = {}) {
    super();

    this.key = key;
    this.animating = animating;
    this.radius = radius;
  }
}

class CupertinoAlertDialog extends FlutterWidget {
  constructor({ key, title, content, actions, scrollController, actionScrollController } = {}) {
    super();

    this.key = key;
    this.title = title;
    this.content = content;
    this.actions = actions;
    this.scrollController = scrollController;
    this.actionScrollController = actionScrollController;
  }
}

class CupertinoButton extends FlutterWidget {
  constructor({ child, padding, color, disabledColor, minSize, pressedOpacity, borderRadius, onPressed } = {}) {
    super();

    this.child = child;
    this.padding = padding;
    this.color = color;
    this.disabledColor = disabledColor;
    this.minSize = minSize;
    this.pressedOpacity = pressedOpacity;
    this.borderRadius = borderRadius;
    this.onPressed = onPressed;
  }
}

class CupertinoDialog extends FlutterWidget {
  constructor({ key, child } = {}) {
    super();

    this.key = key;
    this.child = child;
  }
}

class CupertinoDialogAction extends FlutterWidget {
  constructor({ onPressed, isDefaultAction, isDestructiveAction, textStyle, child } = {}) {
    super();

    this.onPressed = onPressed;
    this.isDefaultAction = isDefaultAction;
    this.isDestructiveAction = isDestructiveAction;
    this.textStyle = textStyle;
    this.child = child;
  }
}

class CupertinoSlider extends FlutterWidget {
  constructor({ key, value, onChanged, onChangeStart, onChangeEnd, min, max, divisions, activeColor } = {}) {
    super();

    this.key = key;
    this.value = value;
    this.onChanged = onChanged;
    this.onChangeStart = onChangeStart;
    this.onChangeEnd = onChangeEnd;
    this.min = min;
    this.max = max;
    this.divisions = divisions;
    this.activeColor = activeColor;
  }
}

class CupertinoSwitch extends FlutterWidget {
  constructor({ key, value, onChanged, activeColor, dragStartBehavior } = {}) {
    super();

    this.key = key;
    this.value = value;
    this.onChanged = onChanged;
    this.activeColor = activeColor;
    this.dragStartBehavior = dragStartBehavior;
  }
}

class CupertinoPageTransition extends FlutterWidget {
  constructor({ key, primaryRouteAnimation, secondaryRouteAnimation, child, linearTransition } = {}) {
    super();

    this.key = key;
    this.primaryRouteAnimation = primaryRouteAnimation;
    this.secondaryRouteAnimation = secondaryRouteAnimation;
    this.child = child;
    this.linearTransition = linearTransition;
  }
}

class CupertinoFullscreenDialogTransition extends FlutterWidget {
  constructor({ key, primaryRouteAnimation, secondaryRouteAnimation, child, linearTransition } = {}) {
    super();

    this.key = key;
    this.primaryRouteAnimation = primaryRouteAnimation;
    this.secondaryRouteAnimation = secondaryRouteAnimation;
    this.child = child;
    this.linearTransition = linearTransition;
  }
}

class CupertinoNavigationBar extends FlutterWidget {
  constructor({
    key,
    leading,
    automaticallyImplyLeading,
    automaticallyImplyMiddle,
    previousPageTitle,
    middle,
    trailing,
    border,
    backgroundColor,
    padding,
    actionsForegroundColor,
    transitionBetweenRoutes,
    heroTag,
  } = {}) {
    super();

    this.key = key;
    this.leading = leading;
    this.automaticallyImplyLeading = automaticallyImplyLeading;
    this.automaticallyImplyMiddle = automaticallyImplyMiddle;
    this.previousPageTitle = previousPageTitle;
    this.middle = middle;
    this.trailing = trailing;
    this.border = border;
    this.backgroundColor = backgroundColor;
    this.padding = padding;
    this.actionsForegroundColor = actionsForegroundColor;
    this.transitionBetweenRoutes = transitionBetweenRoutes;
    this.heroTag = heroTag;
  }
}

class CupertinoTabBar extends FlutterWidget {
  constructor({ key, items, onTap, currentIndex, backgroundColor, activeColor, inactiveColor, iconSize, border } = {}) {
    super();

    this.key = key;
    this.items = items;
    this.onTap = onTap;
    this.currentIndex = currentIndex;
    this.backgroundColor = backgroundColor;
    this.activeColor = activeColor;
    this.inactiveColor = inactiveColor;
    this.iconSize = iconSize;
    this.border = border;
  }
}

class CupertinoPageScaffold extends FlutterWidget {
  constructor({ key, navigationBar, backgroundColor, resizeToAvoidBottomInset, child } = {}) {
    super();

    this.key = key;
    this.navigationBar = navigationBar;
    this.backgroundColor = backgroundColor;
    this.resizeToAvoidBottomInset = resizeToAvoidBottomInset;
    this.child = child;
  }
}

class CupertinoTabScaffold extends FlutterWidget {
  constructor({ key, tabBar, tabBuilder, backgroundColor, resizeToAvoidBottomInset } = {}) {
    super();

    this.key = key;
    this.tabBar = tabBar;
    this.tabBuilder = tabBuilder;
    this.backgroundColor = backgroundColor;
    this.resizeToAvoidBottomInset = resizeToAvoidBottomInset;

    // 本地创建的，供flutter使用
    this.children = [];
  }

  preBuild(jsWidgetHelper, buildContext) {
    if (this.tabBuilder) {
      this.children = this.tabBuilder(buildContext);
      delete this.tabBuilder;
    }

    super.preBuild(jsWidgetHelper, buildContext);
  }
}

class CupertinoTabView extends FlutterWidget {
  constructor({ key, builder, navigatorKey, defaultTitle, routes, onGenerateRoute, onUnknownRoute, navigatorObservers } = {}) {
    super();

    this.key = key;
    this.builder = builder;
    this.navigatorKey = navigatorKey;
    this.defaultTitle = defaultTitle;
    this.routes = routes;
    this.onGenerateRoute = onGenerateRoute;
    this.onUnknownRoute = onUnknownRoute;
    this.navigatorObservers = navigatorObservers;
  }
}

module.exports = {
  CupertinoActivityIndicator,
  CupertinoAlertDialog,
  CupertinoButton,
  CupertinoDialog,
  CupertinoDialogAction,
  CupertinoSlider,
  CupertinoSwitch,
  CupertinoPageTransition,
  CupertinoFullscreenDialogTransition,
  CupertinoNavigationBar,
  CupertinoTabBar,
  CupertinoPageScaffold,
  CupertinoTabScaffold,
  CupertinoTabView,
};


/***/ }),

/***/ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_icons.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_icons.js ***!
  \*************************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

//  MXFlutterFramework
//  Copyright 2019 The MXFlutter Authors. All rights reserved.
//
//  Use of this source code is governed by a MIT-style license that can be
//  found in the LICENSE file.

let { IconData } = __webpack_require__(/*! ./js_flutter_basic_types.js */ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_basic_types.js");

const Icons = {
  get threesixty() {
    return new IconData(0xe577, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">3d_rotation</i> &#x2014; material icon named "3d rotation".
  get threed_rotation() {
    return new IconData(0xe84d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">4k</i> &#x2014; material icon named "4k".
  get four_k() {
    return new IconData(0xe072, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">ac_unit</i> &#x2014; material icon named "ac unit".
  get ac_unit() {
    return new IconData(0xeb3b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">access_alarm</i> &#x2014; material icon named "access alarm".
  get access_alarm() {
    return new IconData(0xe190, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">access_alarms</i> &#x2014; material icon named "access alarms".
  get access_alarms() {
    return new IconData(0xe191, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">access_time</i> &#x2014; material icon named "access time".
  get access_time() {
    return new IconData(0xe192, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">accessibility</i> &#x2014; material icon named "accessibility".
  get accessibility() {
    return new IconData(0xe84e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">accessibility_new</i> &#x2014; material icon named "accessibility new".
  get accessibility_new() {
    return new IconData(0xe92c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">accessible</i> &#x2014; material icon named "accessible".
  get accessible() {
    return new IconData(0xe914, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">accessible_forward</i> &#x2014; material icon named "accessible forward".
  get accessible_forward() {
    return new IconData(0xe934, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">account_balance</i> &#x2014; material icon named "account balance".
  get account_balance() {
    return new IconData(0xe84f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">account_balance_wallet</i> &#x2014; material icon named "account balance wallet".
  get account_balance_wallet() {
    return new IconData(0xe850, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">account_box</i> &#x2014; material icon named "account box".
  get account_box() {
    return new IconData(0xe851, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">account_circle</i> &#x2014; material icon named "account circle".
  get account_circle() {
    return new IconData(0xe853, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">adb</i> &#x2014; material icon named "adb".
  get adb() {
    return new IconData(0xe60e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add</i> &#x2014; material icon named "add".
  get add() {
    return new IconData(0xe145, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_a_photo</i> &#x2014; material icon named "add a photo".
  get add_a_photo() {
    return new IconData(0xe439, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_alarm</i> &#x2014; material icon named "add alarm".
  get add_alarm() {
    return new IconData(0xe193, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_alert</i> &#x2014; material icon named "add alert".
  get add_alert() {
    return new IconData(0xe003, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_box</i> &#x2014; material icon named "add box".
  get add_box() {
    return new IconData(0xe146, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_call</i> &#x2014; material icon named "add call".
  get add_call() {
    return new IconData(0xe0e8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_circle</i> &#x2014; material icon named "add circle".
  get add_circle() {
    return new IconData(0xe147, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_circle_outline</i> &#x2014; material icon named "add circle outline".
  get add_circle_outline() {
    return new IconData(0xe148, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_comment</i> &#x2014; material icon named "add comment".
  get add_comment() {
    return new IconData(0xe266, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_location</i> &#x2014; material icon named "add location".
  get add_location() {
    return new IconData(0xe567, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_photo_alternate</i> &#x2014; material icon named "add photo alternate".
  get add_photo_alternate() {
    return new IconData(0xe43e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_shopping_cart</i> &#x2014; material icon named "add shopping cart".
  get add_shopping_cart() {
    return new IconData(0xe854, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_to_home_screen</i> &#x2014; material icon named "add to home screen".
  get add_to_home_screen() {
    return new IconData(0xe1fe, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_to_photos</i> &#x2014; material icon named "add to photos".
  get add_to_photos() {
    return new IconData(0xe39d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_to_queue</i> &#x2014; material icon named "add to queue".
  get add_to_queue() {
    return new IconData(0xe05c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">adjust</i> &#x2014; material icon named "adjust".
  get adjust() {
    return new IconData(0xe39e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">airline_seat_flat</i> &#x2014; material icon named "airline seat flat".
  get airline_seat_flat() {
    return new IconData(0xe630, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">airline_seat_flat_angled</i> &#x2014; material icon named "airline seat flat angled".
  get airline_seat_flat_angled() {
    return new IconData(0xe631, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">airline_seat_individual_suite</i> &#x2014; material icon named "airline seat individual suite".
  get airline_seat_individual_suite() {
    return new IconData(0xe632, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">airline_seat_legroom_extra</i> &#x2014; material icon named "airline seat legroom extra".
  get airline_seat_legroom_extra() {
    return new IconData(0xe633, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">airline_seat_legroom_normal</i> &#x2014; material icon named "airline seat legroom normal".
  get airline_seat_legroom_normal() {
    return new IconData(0xe634, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">airline_seat_legroom_reduced</i> &#x2014; material icon named "airline seat legroom reduced".
  get airline_seat_legroom_reduced() {
    return new IconData(0xe635, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">airline_seat_recline_extra</i> &#x2014; material icon named "airline seat recline extra".
  get airline_seat_recline_extra() {
    return new IconData(0xe636, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">airline_seat_recline_normal</i> &#x2014; material icon named "airline seat recline normal".
  get airline_seat_recline_normal() {
    return new IconData(0xe637, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">airplanemode_active</i> &#x2014; material icon named "airplanemode active".
  get airplanemode_active() {
    return new IconData(0xe195, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">airplanemode_inactive</i> &#x2014; material icon named "airplanemode inactive".
  get airplanemode_inactive() {
    return new IconData(0xe194, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">airplay</i> &#x2014; material icon named "airplay".
  get airplay() {
    return new IconData(0xe055, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">airport_shuttle</i> &#x2014; material icon named "airport shuttle".
  get airport_shuttle() {
    return new IconData(0xeb3c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">alarm</i> &#x2014; material icon named "alarm".
  get alarm() {
    return new IconData(0xe855, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">alarm_add</i> &#x2014; material icon named "alarm add".
  get alarm_add() {
    return new IconData(0xe856, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">alarm_off</i> &#x2014; material icon named "alarm off".
  get alarm_off() {
    return new IconData(0xe857, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">alarm_on</i> &#x2014; material icon named "alarm on".
  get alarm_on() {
    return new IconData(0xe858, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">album</i> &#x2014; material icon named "album".
  get album() {
    return new IconData(0xe019, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">all_inclusive</i> &#x2014; material icon named "all inclusive".
  get all_inclusive() {
    return new IconData(0xeb3d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">all_out</i> &#x2014; material icon named "all out".
  get all_out() {
    return new IconData(0xe90b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">alternate_email</i> &#x2014; material icon named "alternate email".
  get alternate_email() {
    return new IconData(0xe0e6, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">android</i> &#x2014; material icon named "android".
  get android() {
    return new IconData(0xe859, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">announcement</i> &#x2014; material icon named "announcement".
  get announcement() {
    return new IconData(0xe85a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">apps</i> &#x2014; material icon named "apps".
  get apps() {
    return new IconData(0xe5c3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">archive</i> &#x2014; material icon named "archive".
  get archive() {
    return new IconData(0xe149, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">arrow_back</i> &#x2014; material icon named "arrow back".
  get arrow_back() {
    return new IconData(0xe5c4, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">arrow_back_ios</i> &#x2014; material icon named "arrow back ios".
  get arrow_back_ios() {
    return new IconData(0xe5e0, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">arrow_downward</i> &#x2014; material icon named "arrow downward".
  get arrow_downward() {
    return new IconData(0xe5db, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">arrow_drop_down</i> &#x2014; material icon named "arrow drop down".
  get arrow_drop_down() {
    return new IconData(0xe5c5, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">arrow_drop_down_circle</i> &#x2014; material icon named "arrow drop down circle".
  get arrow_drop_down_circle() {
    return new IconData(0xe5c6, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">arrow_drop_up</i> &#x2014; material icon named "arrow drop up".
  get arrow_drop_up() {
    return new IconData(0xe5c7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">arrow_forward</i> &#x2014; material icon named "arrow forward".
  get arrow_forward() {
    return new IconData(0xe5c8, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">arrow_forward_ios</i> &#x2014; material icon named "arrow forward ios".
  get arrow_forward_ios() {
    return new IconData(0xe5e1, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">arrow_left</i> &#x2014; material icon named "arrow left".
  get arrow_left() {
    return new IconData(0xe5de, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">arrow_right</i> &#x2014; material icon named "arrow right".
  get arrow_right() {
    return new IconData(0xe5df, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">arrow_upward</i> &#x2014; material icon named "arrow upward".
  get arrow_upward() {
    return new IconData(0xe5d8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">art_track</i> &#x2014; material icon named "art track".
  get art_track() {
    return new IconData(0xe060, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">aspect_ratio</i> &#x2014; material icon named "aspect ratio".
  get aspect_ratio() {
    return new IconData(0xe85b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">assessment</i> &#x2014; material icon named "assessment".
  get assessment() {
    return new IconData(0xe85c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">assignment</i> &#x2014; material icon named "assignment".
  get assignment() {
    return new IconData(0xe85d, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">assignment_ind</i> &#x2014; material icon named "assignment ind".
  get assignment_ind() {
    return new IconData(0xe85e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">assignment_late</i> &#x2014; material icon named "assignment late".
  get assignment_late() {
    return new IconData(0xe85f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">assignment_return</i> &#x2014; material icon named "assignment return".
  get assignment_return() {
    return new IconData(0xe860, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">assignment_returned</i> &#x2014; material icon named "assignment returned".
  get assignment_returned() {
    return new IconData(0xe861, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">assignment_turned_in</i> &#x2014; material icon named "assignment turned in".
  get assignment_turned_in() {
    return new IconData(0xe862, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">assistant</i> &#x2014; material icon named "assistant".
  get assistant() {
    return new IconData(0xe39f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">assistant_photo</i> &#x2014; material icon named "assistant photo".
  get assistant_photo() {
    return new IconData(0xe3a0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">atm</i> &#x2014; material icon named "atm".
  get atm() {
    return new IconData(0xe573, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">attach_file</i> &#x2014; material icon named "attach file".
  get attach_file() {
    return new IconData(0xe226, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">attach_money</i> &#x2014; material icon named "attach money".
  get attach_money() {
    return new IconData(0xe227, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">attachment</i> &#x2014; material icon named "attachment".
  get attachment() {
    return new IconData(0xe2bc, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">audiotrack</i> &#x2014; material icon named "audiotrack".
  get audiotrack() {
    return new IconData(0xe3a1, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">autorenew</i> &#x2014; material icon named "autorenew".
  get autorenew() {
    return new IconData(0xe863, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">av_timer</i> &#x2014; material icon named "av timer".
  get av_timer() {
    return new IconData(0xe01b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">backspace</i> &#x2014; material icon named "backspace".
  get backspace() {
    return new IconData(0xe14a, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">backup</i> &#x2014; material icon named "backup".
  get backup() {
    return new IconData(0xe864, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">battery_alert</i> &#x2014; material icon named "battery alert".
  get battery_alert() {
    return new IconData(0xe19c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">battery_charging_full</i> &#x2014; material icon named "battery charging full".
  get battery_charging_full() {
    return new IconData(0xe1a3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">battery_full</i> &#x2014; material icon named "battery full".
  get battery_full() {
    return new IconData(0xe1a4, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">battery_std</i> &#x2014; material icon named "battery std".
  get battery_std() {
    return new IconData(0xe1a5, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">battery_unknown</i> &#x2014; material icon named "battery unknown".
  get battery_unknown() {
    return new IconData(0xe1a6, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">beach_access</i> &#x2014; material icon named "beach access".
  get beach_access() {
    return new IconData(0xeb3e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">beenhere</i> &#x2014; material icon named "beenhere".
  get beenhere() {
    return new IconData(0xe52d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">block</i> &#x2014; material icon named "block".
  get block() {
    return new IconData(0xe14b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">bluetooth</i> &#x2014; material icon named "bluetooth".
  get bluetooth() {
    return new IconData(0xe1a7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">bluetooth_audio</i> &#x2014; material icon named "bluetooth audio".
  get bluetooth_audio() {
    return new IconData(0xe60f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">bluetooth_connected</i> &#x2014; material icon named "bluetooth connected".
  get bluetooth_connected() {
    return new IconData(0xe1a8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">bluetooth_disabled</i> &#x2014; material icon named "bluetooth disabled".
  get bluetooth_disabled() {
    return new IconData(0xe1a9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">bluetooth_searching</i> &#x2014; material icon named "bluetooth searching".
  get bluetooth_searching() {
    return new IconData(0xe1aa, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">blur_circular</i> &#x2014; material icon named "blur circular".
  get blur_circular() {
    return new IconData(0xe3a2, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">blur_linear</i> &#x2014; material icon named "blur linear".
  get blur_linear() {
    return new IconData(0xe3a3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">blur_off</i> &#x2014; material icon named "blur off".
  get blur_off() {
    return new IconData(0xe3a4, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">blur_on</i> &#x2014; material icon named "blur on".
  get blur_on() {
    return new IconData(0xe3a5, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">book</i> &#x2014; material icon named "book".
  get book() {
    return new IconData(0xe865, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">bookmark</i> &#x2014; material icon named "bookmark".
  get bookmark() {
    return new IconData(0xe866, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">bookmark_border</i> &#x2014; material icon named "bookmark border".
  get bookmark_border() {
    return new IconData(0xe867, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">border_all</i> &#x2014; material icon named "border all".
  get border_all() {
    return new IconData(0xe228, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">border_bottom</i> &#x2014; material icon named "border bottom".
  get border_bottom() {
    return new IconData(0xe229, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">border_clear</i> &#x2014; material icon named "border clear".
  get border_clear() {
    return new IconData(0xe22a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">border_color</i> &#x2014; material icon named "border color".
  get border_color() {
    return new IconData(0xe22b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">border_horizontal</i> &#x2014; material icon named "border horizontal".
  get border_horizontal() {
    return new IconData(0xe22c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">border_inner</i> &#x2014; material icon named "border inner".
  get border_inner() {
    return new IconData(0xe22d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">border_left</i> &#x2014; material icon named "border left".
  get border_left() {
    return new IconData(0xe22e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">border_outer</i> &#x2014; material icon named "border outer".
  get border_outer() {
    return new IconData(0xe22f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">border_right</i> &#x2014; material icon named "border right".
  get border_right() {
    return new IconData(0xe230, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">border_style</i> &#x2014; material icon named "border style".
  get border_style() {
    return new IconData(0xe231, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">border_top</i> &#x2014; material icon named "border top".
  get border_top() {
    return new IconData(0xe232, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">border_vertical</i> &#x2014; material icon named "border vertical".
  get border_vertical() {
    return new IconData(0xe233, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">branding_watermark</i> &#x2014; material icon named "branding watermark".
  get branding_watermark() {
    return new IconData(0xe06b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">brightness_1</i> &#x2014; material icon named "brightness 1".
  get brightness_1() {
    return new IconData(0xe3a6, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">brightness_2</i> &#x2014; material icon named "brightness 2".
  get brightness_2() {
    return new IconData(0xe3a7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">brightness_3</i> &#x2014; material icon named "brightness 3".
  get brightness_3() {
    return new IconData(0xe3a8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">brightness_4</i> &#x2014; material icon named "brightness 4".
  get brightness_4() {
    return new IconData(0xe3a9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">brightness_5</i> &#x2014; material icon named "brightness 5".
  get brightness_5() {
    return new IconData(0xe3aa, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">brightness_6</i> &#x2014; material icon named "brightness 6".
  get brightness_6() {
    return new IconData(0xe3ab, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">brightness_7</i> &#x2014; material icon named "brightness 7".
  get brightness_7() {
    return new IconData(0xe3ac, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">brightness_auto</i> &#x2014; material icon named "brightness auto".
  get brightness_auto() {
    return new IconData(0xe1ab, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">brightness_high</i> &#x2014; material icon named "brightness high".
  get brightness_high() {
    return new IconData(0xe1ac, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">brightness_low</i> &#x2014; material icon named "brightness low".
  get brightness_low() {
    return new IconData(0xe1ad, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">brightness_medium</i> &#x2014; material icon named "brightness medium".
  get brightness_medium() {
    return new IconData(0xe1ae, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">broken_image</i> &#x2014; material icon named "broken image".
  get broken_image() {
    return new IconData(0xe3ad, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">brush</i> &#x2014; material icon named "brush".
  get brush() {
    return new IconData(0xe3ae, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">bubble_chart</i> &#x2014; material icon named "bubble chart".
  get bubble_chart() {
    return new IconData(0xe6dd, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">bug_report</i> &#x2014; material icon named "bug report".
  get bug_report() {
    return new IconData(0xe868, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">build</i> &#x2014; material icon named "build".
  get build() {
    return new IconData(0xe869, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">burst_mode</i> &#x2014; material icon named "burst mode".
  get burst_mode() {
    return new IconData(0xe43c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">business</i> &#x2014; material icon named "business".
  get business() {
    return new IconData(0xe0af, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">business_center</i> &#x2014; material icon named "business center".
  get business_center() {
    return new IconData(0xeb3f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">cached</i> &#x2014; material icon named "cached".
  get cached() {
    return new IconData(0xe86a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">cake</i> &#x2014; material icon named "cake".
  get cake() {
    return new IconData(0xe7e9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">calendar_today</i> &#x2014; material icon named "calendar today".
  get calendar_today() {
    return new IconData(0xe935, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">calendar_view_day</i> &#x2014; material icon named "calendar view day".
  get calendar_view_day() {
    return new IconData(0xe936, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">call</i> &#x2014; material icon named "call".
  get call() {
    return new IconData(0xe0b0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">call_end</i> &#x2014; material icon named "call end".
  get call_end() {
    return new IconData(0xe0b1, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">call_made</i> &#x2014; material icon named "call made".
  get call_made() {
    return new IconData(0xe0b2, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">call_merge</i> &#x2014; material icon named "call merge".
  get call_merge() {
    return new IconData(0xe0b3, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">call_missed</i> &#x2014; material icon named "call missed".
  get call_missed() {
    return new IconData(0xe0b4, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">call_missed_outgoing</i> &#x2014; material icon named "call missed outgoing".
  get call_missed_outgoing() {
    return new IconData(0xe0e4, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">call_received</i> &#x2014; material icon named "call received".
  get call_received() {
    return new IconData(0xe0b5, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">call_split</i> &#x2014; material icon named "call split".
  get call_split() {
    return new IconData(0xe0b6, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">call_to_action</i> &#x2014; material icon named "call to action".
  get call_to_action() {
    return new IconData(0xe06c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">camera</i> &#x2014; material icon named "camera".
  get camera() {
    return new IconData(0xe3af, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">camera_alt</i> &#x2014; material icon named "camera alt".
  get camera_alt() {
    return new IconData(0xe3b0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">camera_enhance</i> &#x2014; material icon named "camera enhance".
  get camera_enhance() {
    return new IconData(0xe8fc, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">camera_front</i> &#x2014; material icon named "camera front".
  get camera_front() {
    return new IconData(0xe3b1, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">camera_rear</i> &#x2014; material icon named "camera rear".
  get camera_rear() {
    return new IconData(0xe3b2, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">camera_roll</i> &#x2014; material icon named "camera roll".
  get camera_roll() {
    return new IconData(0xe3b3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">cancel</i> &#x2014; material icon named "cancel".
  get cancel() {
    return new IconData(0xe5c9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">card_giftcard</i> &#x2014; material icon named "card giftcard".
  get card_giftcard() {
    return new IconData(0xe8f6, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">card_membership</i> &#x2014; material icon named "card membership".
  get card_membership() {
    return new IconData(0xe8f7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">card_travel</i> &#x2014; material icon named "card travel".
  get card_travel() {
    return new IconData(0xe8f8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">casino</i> &#x2014; material icon named "casino".
  get casino() {
    return new IconData(0xeb40, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">cast</i> &#x2014; material icon named "cast".
  get cast() {
    return new IconData(0xe307, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">cast_connected</i> &#x2014; material icon named "cast connected".
  get cast_connected() {
    return new IconData(0xe308, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">category</i> &#x2014; material icon named "category".
  get category() {
    return new IconData(0xe574, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">center_focus_strong</i> &#x2014; material icon named "center focus strong".
  get center_focus_strong() {
    return new IconData(0xe3b4, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">center_focus_weak</i> &#x2014; material icon named "center focus weak".
  get center_focus_weak() {
    return new IconData(0xe3b5, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">change_history</i> &#x2014; material icon named "change history".
  get change_history() {
    return new IconData(0xe86b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">chat</i> &#x2014; material icon named "chat".
  get chat() {
    return new IconData(0xe0b7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">chat_bubble</i> &#x2014; material icon named "chat bubble".
  get chat_bubble() {
    return new IconData(0xe0ca, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">chat_bubble_outline</i> &#x2014; material icon named "chat bubble outline".
  get chat_bubble_outline() {
    return new IconData(0xe0cb, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">check</i> &#x2014; material icon named "check".
  get check() {
    return new IconData(0xe5ca, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">check_box</i> &#x2014; material icon named "check box".
  get check_box() {
    return new IconData(0xe834, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">check_box_outline_blank</i> &#x2014; material icon named "check box outline blank".
  get check_box_outline_blank() {
    return new IconData(0xe835, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">check_circle</i> &#x2014; material icon named "check circle".
  get check_circle() {
    return new IconData(0xe86c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">check_circle_outline</i> &#x2014; material icon named "check circle outline".
  get check_circle_outline() {
    return new IconData(0xe92d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">chevron_left</i> &#x2014; material icon named "chevron left".
  get chevron_left() {
    return new IconData(0xe5cb, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">chevron_right</i> &#x2014; material icon named "chevron right".
  get chevron_right() {
    return new IconData(0xe5cc, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">child_care</i> &#x2014; material icon named "child care".
  get child_care() {
    return new IconData(0xeb41, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">child_friendly</i> &#x2014; material icon named "child friendly".
  get child_friendly() {
    return new IconData(0xeb42, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">chrome_reader_mode</i> &#x2014; material icon named "chrome reader mode".
  get chrome_reader_mode() {
    return new IconData(0xe86d, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">class</i> &#x2014; material icon named "class".
  get class_() {
    return new IconData(0xe86e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">clear</i> &#x2014; material icon named "clear".
  get clear() {
    return new IconData(0xe14c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">clear_all</i> &#x2014; material icon named "clear all".
  get clear_all() {
    return new IconData(0xe0b8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">close</i> &#x2014; material icon named "close".
  get close() {
    return new IconData(0xe5cd, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">closed_caption</i> &#x2014; material icon named "closed caption".
  get closed_caption() {
    return new IconData(0xe01c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">cloud</i> &#x2014; material icon named "cloud".
  get cloud() {
    return new IconData(0xe2bd, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">cloud_circle</i> &#x2014; material icon named "cloud circle".
  get cloud_circle() {
    return new IconData(0xe2be, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">cloud_done</i> &#x2014; material icon named "cloud done".
  get cloud_done() {
    return new IconData(0xe2bf, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">cloud_download</i> &#x2014; material icon named "cloud download".
  get cloud_download() {
    return new IconData(0xe2c0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">cloud_off</i> &#x2014; material icon named "cloud off".
  get cloud_off() {
    return new IconData(0xe2c1, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">cloud_queue</i> &#x2014; material icon named "cloud queue".
  get cloud_queue() {
    return new IconData(0xe2c2, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">cloud_upload</i> &#x2014; material icon named "cloud upload".
  get cloud_upload() {
    return new IconData(0xe2c3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">code</i> &#x2014; material icon named "code".
  get code() {
    return new IconData(0xe86f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">collections</i> &#x2014; material icon named "collections".
  get collections() {
    return new IconData(0xe3b6, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">collections_bookmark</i> &#x2014; material icon named "collections bookmark".
  get collections_bookmark() {
    return new IconData(0xe431, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">color_lens</i> &#x2014; material icon named "color lens".
  get color_lens() {
    return new IconData(0xe3b7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">colorize</i> &#x2014; material icon named "colorize".
  get colorize() {
    return new IconData(0xe3b8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">comment</i> &#x2014; material icon named "comment".
  get comment() {
    return new IconData(0xe0b9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">compare</i> &#x2014; material icon named "compare".
  get compare() {
    return new IconData(0xe3b9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">compare_arrows</i> &#x2014; material icon named "compare arrows".
  get compare_arrows() {
    return new IconData(0xe915, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">computer</i> &#x2014; material icon named "computer".
  get computer() {
    return new IconData(0xe30a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">confirmation_number</i> &#x2014; material icon named "confirmation number".
  get confirmation_number() {
    return new IconData(0xe638, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">contact_mail</i> &#x2014; material icon named "contact mail".
  get contact_mail() {
    return new IconData(0xe0d0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">contact_phone</i> &#x2014; material icon named "contact phone".
  get contact_phone() {
    return new IconData(0xe0cf, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">contacts</i> &#x2014; material icon named "contacts".
  get contacts() {
    return new IconData(0xe0ba, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">content_copy</i> &#x2014; material icon named "content copy".
  get content_copy() {
    return new IconData(0xe14d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">content_cut</i> &#x2014; material icon named "content cut".
  get content_cut() {
    return new IconData(0xe14e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">content_paste</i> &#x2014; material icon named "content paste".
  get content_paste() {
    return new IconData(0xe14f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">control_point</i> &#x2014; material icon named "control point".
  get control_point() {
    return new IconData(0xe3ba, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">control_point_duplicate</i> &#x2014; material icon named "control point duplicate".
  get control_point_duplicate() {
    return new IconData(0xe3bb, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">copyright</i> &#x2014; material icon named "copyright".
  get copyright() {
    return new IconData(0xe90c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">create</i> &#x2014; material icon named "create".
  get create() {
    return new IconData(0xe150, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">create_new_folder</i> &#x2014; material icon named "create new folder".
  get create_new_folder() {
    return new IconData(0xe2cc, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">credit_card</i> &#x2014; material icon named "credit card".
  get credit_card() {
    return new IconData(0xe870, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">crop</i> &#x2014; material icon named "crop".
  get crop() {
    return new IconData(0xe3be, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">crop_16_9</i> &#x2014; material icon named "crop 16 9".
  get crop_16_9() {
    return new IconData(0xe3bc, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">crop_3_2</i> &#x2014; material icon named "crop 3 2".
  get crop_3_2() {
    return new IconData(0xe3bd, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">crop_5_4</i> &#x2014; material icon named "crop 5 4".
  get crop_5_4() {
    return new IconData(0xe3bf, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">crop_7_5</i> &#x2014; material icon named "crop 7 5".
  get crop_7_5() {
    return new IconData(0xe3c0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">crop_din</i> &#x2014; material icon named "crop din".
  get crop_din() {
    return new IconData(0xe3c1, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">crop_free</i> &#x2014; material icon named "crop free".
  get crop_free() {
    return new IconData(0xe3c2, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">crop_landscape</i> &#x2014; material icon named "crop landscape".
  get crop_landscape() {
    return new IconData(0xe3c3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">crop_original</i> &#x2014; material icon named "crop original".
  get crop_original() {
    return new IconData(0xe3c4, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">crop_portrait</i> &#x2014; material icon named "crop portrait".
  get crop_portrait() {
    return new IconData(0xe3c5, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">crop_rotate</i> &#x2014; material icon named "crop rotate".
  get crop_rotate() {
    return new IconData(0xe437, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">crop_square</i> &#x2014; material icon named "crop square".
  get crop_square() {
    return new IconData(0xe3c6, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">dashboard</i> &#x2014; material icon named "dashboard".
  get dashboard() {
    return new IconData(0xe871, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">data_usage</i> &#x2014; material icon named "data usage".
  get data_usage() {
    return new IconData(0xe1af, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">date_range</i> &#x2014; material icon named "date range".
  get date_range() {
    return new IconData(0xe916, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">dehaze</i> &#x2014; material icon named "dehaze".
  get dehaze() {
    return new IconData(0xe3c7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">delete</i> &#x2014; material icon named "delete".
  get delete() {
    return new IconData(0xe872, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">delete_forever</i> &#x2014; material icon named "delete forever".
  get delete_forever() {
    return new IconData(0xe92b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">delete_outline</i> &#x2014; material icon named "delete outline".
  get delete_outline() {
    return new IconData(0xe92e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">delete_sweep</i> &#x2014; material icon named "delete sweep".
  get delete_sweep() {
    return new IconData(0xe16c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">departure_board</i> &#x2014; material icon named "departure board".
  get departure_board() {
    return new IconData(0xe576, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">description</i> &#x2014; material icon named "description".
  get description() {
    return new IconData(0xe873, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">desktop_mac</i> &#x2014; material icon named "desktop mac".
  get desktop_mac() {
    return new IconData(0xe30b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">desktop_windows</i> &#x2014; material icon named "desktop windows".
  get desktop_windows() {
    return new IconData(0xe30c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">details</i> &#x2014; material icon named "details".
  get details() {
    return new IconData(0xe3c8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">developer_board</i> &#x2014; material icon named "developer board".
  get developer_board() {
    return new IconData(0xe30d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">developer_mode</i> &#x2014; material icon named "developer mode".
  get developer_mode() {
    return new IconData(0xe1b0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">device_hub</i> &#x2014; material icon named "device hub".
  get device_hub() {
    return new IconData(0xe335, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">device_unknown</i> &#x2014; material icon named "device unknown".
  get device_unknown() {
    return new IconData(0xe339, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">devices</i> &#x2014; material icon named "devices".
  get devices() {
    return new IconData(0xe1b1, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">devices_other</i> &#x2014; material icon named "devices other".
  get devices_other() {
    return new IconData(0xe337, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">dialer_sip</i> &#x2014; material icon named "dialer sip".
  get dialer_sip() {
    return new IconData(0xe0bb, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">dialpad</i> &#x2014; material icon named "dialpad".
  get dialpad() {
    return new IconData(0xe0bc, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">directions</i> &#x2014; material icon named "directions".
  get directions() {
    return new IconData(0xe52e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">directions_bike</i> &#x2014; material icon named "directions bike".
  get directions_bike() {
    return new IconData(0xe52f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">directions_boat</i> &#x2014; material icon named "directions boat".
  get directions_boat() {
    return new IconData(0xe532, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">directions_bus</i> &#x2014; material icon named "directions bus".
  get directions_bus() {
    return new IconData(0xe530, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">directions_car</i> &#x2014; material icon named "directions car".
  get directions_car() {
    return new IconData(0xe531, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">directions_railway</i> &#x2014; material icon named "directions railway".
  get directions_railway() {
    return new IconData(0xe534, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">directions_run</i> &#x2014; material icon named "directions run".
  get directions_run() {
    return new IconData(0xe566, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">directions_subway</i> &#x2014; material icon named "directions subway".
  get directions_subway() {
    return new IconData(0xe533, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">directions_transit</i> &#x2014; material icon named "directions transit".
  get directions_transit() {
    return new IconData(0xe535, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">directions_walk</i> &#x2014; material icon named "directions walk".
  get directions_walk() {
    return new IconData(0xe536, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">disc_full</i> &#x2014; material icon named "disc full".
  get disc_full() {
    return new IconData(0xe610, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">dns</i> &#x2014; material icon named "dns".
  get dns() {
    return new IconData(0xe875, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">do_not_disturb</i> &#x2014; material icon named "do not disturb".
  get do_not_disturb() {
    return new IconData(0xe612, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">do_not_disturb_alt</i> &#x2014; material icon named "do not disturb alt".
  get do_not_disturb_alt() {
    return new IconData(0xe611, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">do_not_disturb_off</i> &#x2014; material icon named "do not disturb off".
  get do_not_disturb_off() {
    return new IconData(0xe643, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">do_not_disturb_on</i> &#x2014; material icon named "do not disturb on".
  get do_not_disturb_on() {
    return new IconData(0xe644, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">dock</i> &#x2014; material icon named "dock".
  get dock() {
    return new IconData(0xe30e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">domain</i> &#x2014; material icon named "domain".
  get domain() {
    return new IconData(0xe7ee, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">done</i> &#x2014; material icon named "done".
  get done() {
    return new IconData(0xe876, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">done_all</i> &#x2014; material icon named "done all".
  get done_all() {
    return new IconData(0xe877, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">done_outline</i> &#x2014; material icon named "done outline".
  get done_outline() {
    return new IconData(0xe92f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">donut_large</i> &#x2014; material icon named "donut large".
  get donut_large() {
    return new IconData(0xe917, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">donut_small</i> &#x2014; material icon named "donut small".
  get donut_small() {
    return new IconData(0xe918, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">drafts</i> &#x2014; material icon named "drafts".
  get drafts() {
    return new IconData(0xe151, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">drag_handle</i> &#x2014; material icon named "drag handle".
  get drag_handle() {
    return new IconData(0xe25d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">drive_eta</i> &#x2014; material icon named "drive eta".
  get drive_eta() {
    return new IconData(0xe613, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">dvr</i> &#x2014; material icon named "dvr".
  get dvr() {
    return new IconData(0xe1b2, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">edit</i> &#x2014; material icon named "edit".
  get edit() {
    return new IconData(0xe3c9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">edit_attributes</i> &#x2014; material icon named "edit attributes".
  get edit_attributes() {
    return new IconData(0xe578, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">edit_location</i> &#x2014; material icon named "edit location".
  get edit_location() {
    return new IconData(0xe568, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">eject</i> &#x2014; material icon named "eject".
  get eject() {
    return new IconData(0xe8fb, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">email</i> &#x2014; material icon named "email".
  get email() {
    return new IconData(0xe0be, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">enhanced_encryption</i> &#x2014; material icon named "enhanced encryption".
  get enhanced_encryption() {
    return new IconData(0xe63f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">equalizer</i> &#x2014; material icon named "equalizer".
  get equalizer() {
    return new IconData(0xe01d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">error</i> &#x2014; material icon named "error".
  get error() {
    return new IconData(0xe000, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">error_outline</i> &#x2014; material icon named "error outline".
  get error_outline() {
    return new IconData(0xe001, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">euro_symbol</i> &#x2014; material icon named "euro symbol".
  get euro_symbol() {
    return new IconData(0xe926, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">ev_station</i> &#x2014; material icon named "ev station".
  get ev_station() {
    return new IconData(0xe56d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">event</i> &#x2014; material icon named "event".
  get event() {
    return new IconData(0xe878, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">event_available</i> &#x2014; material icon named "event available".
  get event_available() {
    return new IconData(0xe614, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">event_busy</i> &#x2014; material icon named "event busy".
  get event_busy() {
    return new IconData(0xe615, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">event_note</i> &#x2014; material icon named "event note".
  get event_note() {
    return new IconData(0xe616, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">event_seat</i> &#x2014; material icon named "event seat".
  get event_seat() {
    return new IconData(0xe903, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">exit_to_app</i> &#x2014; material icon named "exit to app".
  get exit_to_app() {
    return new IconData(0xe879, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">expand_less</i> &#x2014; material icon named "expand less".
  get expand_less() {
    return new IconData(0xe5ce, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">expand_more</i> &#x2014; material icon named "expand more".
  get expand_more() {
    return new IconData(0xe5cf, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">explicit</i> &#x2014; material icon named "explicit".
  get explicit() {
    return new IconData(0xe01e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">explore</i> &#x2014; material icon named "explore".
  get explore() {
    return new IconData(0xe87a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">exposure</i> &#x2014; material icon named "exposure".
  get exposure() {
    return new IconData(0xe3ca, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">exposure_neg_1</i> &#x2014; material icon named "exposure neg 1".
  get exposure_neg_1() {
    return new IconData(0xe3cb, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">exposure_neg_2</i> &#x2014; material icon named "exposure neg 2".
  get exposure_neg_2() {
    return new IconData(0xe3cc, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">exposure_plus_1</i> &#x2014; material icon named "exposure plus 1".
  get exposure_plus_1() {
    return new IconData(0xe3cd, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">exposure_plus_2</i> &#x2014; material icon named "exposure plus 2".
  get exposure_plus_2() {
    return new IconData(0xe3ce, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">exposure_zero</i> &#x2014; material icon named "exposure zero".
  get exposure_zero() {
    return new IconData(0xe577, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">3d_rotation</i> &#x2014; material icon named "3d rotation".
  get threed_rotation() {
    return new IconData(0xe84d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">4k</i> &#x2014; material icon named "4k".
  get four_k() {
    return new IconData(0xe072, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">ac_unit</i> &#x2014; material icon named "ac unit".
  get ac_unit() {
    return new IconData(0xeb3b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">access_alarm</i> &#x2014; material icon named "access alarm".
  get access_alarm() {
    return new IconData(0xe190, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">access_alarms</i> &#x2014; material icon named "access alarms".
  get access_alarms() {
    return new IconData(0xe191, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">access_time</i> &#x2014; material icon named "access time".
  get access_time() {
    return new IconData(0xe192, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">accessibility</i> &#x2014; material icon named "accessibility".
  get accessibility() {
    return new IconData(0xe84e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">accessibility_new</i> &#x2014; material icon named "accessibility new".
  get accessibility_new() {
    return new IconData(0xe92c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">accessible</i> &#x2014; material icon named "accessible".
  get accessible() {
    return new IconData(0xe914, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">accessible_forward</i> &#x2014; material icon named "accessible forward".
  get accessible_forward() {
    return new IconData(0xe934, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">account_balance</i> &#x2014; material icon named "account balance".
  get account_balance() {
    return new IconData(0xe84f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">account_balance_wallet</i> &#x2014; material icon named "account balance wallet".
  get account_balance_wallet() {
    return new IconData(0xe850, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">account_box</i> &#x2014; material icon named "account box".
  get account_box() {
    return new IconData(0xe851, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">account_circle</i> &#x2014; material icon named "account circle".
  get account_circle() {
    return new IconData(0xe853, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">adb</i> &#x2014; material icon named "adb".
  get adb() {
    return new IconData(0xe60e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add</i> &#x2014; material icon named "add".
  get add() {
    return new IconData(0xe145, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_a_photo</i> &#x2014; material icon named "add a photo".
  get add_a_photo() {
    return new IconData(0xe439, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_alarm</i> &#x2014; material icon named "add alarm".
  get add_alarm() {
    return new IconData(0xe193, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_alert</i> &#x2014; material icon named "add alert".
  get add_alert() {
    return new IconData(0xe003, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_box</i> &#x2014; material icon named "add box".
  get add_box() {
    return new IconData(0xe146, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_call</i> &#x2014; material icon named "add call".
  get add_call() {
    return new IconData(0xe0e8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_circle</i> &#x2014; material icon named "add circle".
  get add_circle() {
    return new IconData(0xe147, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_circle_outline</i> &#x2014; material icon named "add circle outline".
  get add_circle_outline() {
    return new IconData(0xe148, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_comment</i> &#x2014; material icon named "add comment".
  get add_comment() {
    return new IconData(0xe266, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_location</i> &#x2014; material icon named "add location".
  get add_location() {
    return new IconData(0xe567, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_photo_alternate</i> &#x2014; material icon named "add photo alternate".
  get add_photo_alternate() {
    return new IconData(0xe43e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_shopping_cart</i> &#x2014; material icon named "add shopping cart".
  get add_shopping_cart() {
    return new IconData(0xe854, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_to_home_screen</i> &#x2014; material icon named "add to home screen".
  get add_to_home_screen() {
    return new IconData(0xe1fe, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_to_photos</i> &#x2014; material icon named "add to photos".
  get add_to_photos() {
    return new IconData(0xe39d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">add_to_queue</i> &#x2014; material icon named "add to queue".
  get add_to_queue() {
    return new IconData(0xe05c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">adjust</i> &#x2014; material icon named "adjust".
  get adjust() {
    return new IconData(0xe39e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">airline_seat_flat</i> &#x2014; material icon named "airline seat flat".
  get airline_seat_flat() {
    return new IconData(0xe630, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">airline_seat_flat_angled</i> &#x2014; material icon named "airline seat flat angled".
  get airline_seat_flat_angled() {
    return new IconData(0xe631, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">airline_seat_individual_suite</i> &#x2014; material icon named "airline seat individual suite".
  get airline_seat_individual_suite() {
    return new IconData(0xe632, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">airline_seat_legroom_extra</i> &#x2014; material icon named "airline seat legroom extra".
  get airline_seat_legroom_extra() {
    return new IconData(0xe633, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">airline_seat_legroom_normal</i> &#x2014; material icon named "airline seat legroom normal".
  get airline_seat_legroom_normal() {
    return new IconData(0xe634, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">airline_seat_legroom_reduced</i> &#x2014; material icon named "airline seat legroom reduced".
  get airline_seat_legroom_reduced() {
    return new IconData(0xe635, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">airline_seat_recline_extra</i> &#x2014; material icon named "airline seat recline extra".
  get airline_seat_recline_extra() {
    return new IconData(0xe636, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">airline_seat_recline_normal</i> &#x2014; material icon named "airline seat recline normal".
  get airline_seat_recline_normal() {
    return new IconData(0xe637, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">airplanemode_active</i> &#x2014; material icon named "airplanemode active".
  get airplanemode_active() {
    return new IconData(0xe195, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">airplanemode_inactive</i> &#x2014; material icon named "airplanemode inactive".
  get airplanemode_inactive() {
    return new IconData(0xe194, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">airplay</i> &#x2014; material icon named "airplay".
  get airplay() {
    return new IconData(0xe055, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">airport_shuttle</i> &#x2014; material icon named "airport shuttle".
  get airport_shuttle() {
    return new IconData(0xeb3c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">alarm</i> &#x2014; material icon named "alarm".
  get alarm() {
    return new IconData(0xe855, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">alarm_add</i> &#x2014; material icon named "alarm add".
  get alarm_add() {
    return new IconData(0xe856, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">alarm_off</i> &#x2014; material icon named "alarm off".
  get alarm_off() {
    return new IconData(0xe857, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">alarm_on</i> &#x2014; material icon named "alarm on".
  get alarm_on() {
    return new IconData(0xe858, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">album</i> &#x2014; material icon named "album".
  get album() {
    return new IconData(0xe019, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">all_inclusive</i> &#x2014; material icon named "all inclusive".
  get all_inclusive() {
    return new IconData(0xeb3d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">all_out</i> &#x2014; material icon named "all out".
  get all_out() {
    return new IconData(0xe90b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">alternate_email</i> &#x2014; material icon named "alternate email".
  get alternate_email() {
    return new IconData(0xe0e6, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">android</i> &#x2014; material icon named "android".
  get android() {
    return new IconData(0xe859, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">announcement</i> &#x2014; material icon named "announcement".
  get announcement() {
    return new IconData(0xe85a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">apps</i> &#x2014; material icon named "apps".
  get apps() {
    return new IconData(0xe5c3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">archive</i> &#x2014; material icon named "archive".
  get archive() {
    return new IconData(0xe149, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">arrow_back</i> &#x2014; material icon named "arrow back".
  get arrow_back() {
    return new IconData(0xe5c4, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">arrow_back_ios</i> &#x2014; material icon named "arrow back ios".
  get arrow_back_ios() {
    return new IconData(0xe5e0, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">arrow_downward</i> &#x2014; material icon named "arrow downward".
  get arrow_downward() {
    return new IconData(0xe5db, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">arrow_drop_down</i> &#x2014; material icon named "arrow drop down".
  get arrow_drop_down() {
    return new IconData(0xe5c5, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">arrow_drop_down_circle</i> &#x2014; material icon named "arrow drop down circle".
  get arrow_drop_down_circle() {
    return new IconData(0xe5c6, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">arrow_drop_up</i> &#x2014; material icon named "arrow drop up".
  get arrow_drop_up() {
    return new IconData(0xe5c7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">arrow_forward</i> &#x2014; material icon named "arrow forward".
  get arrow_forward() {
    return new IconData(0xe5c8, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">arrow_forward_ios</i> &#x2014; material icon named "arrow forward ios".
  get arrow_forward_ios() {
    return new IconData(0xe5e1, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">arrow_left</i> &#x2014; material icon named "arrow left".
  get arrow_left() {
    return new IconData(0xe5de, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">arrow_right</i> &#x2014; material icon named "arrow right".
  get arrow_right() {
    return new IconData(0xe5df, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">arrow_upward</i> &#x2014; material icon named "arrow upward".
  get arrow_upward() {
    return new IconData(0xe5d8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">art_track</i> &#x2014; material icon named "art track".
  get art_track() {
    return new IconData(0xe060, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">aspect_ratio</i> &#x2014; material icon named "aspect ratio".
  get aspect_ratio() {
    return new IconData(0xe85b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">assessment</i> &#x2014; material icon named "assessment".
  get assessment() {
    return new IconData(0xe85c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">assignment</i> &#x2014; material icon named "assignment".
  get assignment() {
    return new IconData(0xe85d, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">assignment_ind</i> &#x2014; material icon named "assignment ind".
  get assignment_ind() {
    return new IconData(0xe85e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">assignment_late</i> &#x2014; material icon named "assignment late".
  get assignment_late() {
    return new IconData(0xe85f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">assignment_return</i> &#x2014; material icon named "assignment return".
  get assignment_return() {
    return new IconData(0xe860, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">assignment_returned</i> &#x2014; material icon named "assignment returned".
  get assignment_returned() {
    return new IconData(0xe861, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">assignment_turned_in</i> &#x2014; material icon named "assignment turned in".
  get assignment_turned_in() {
    return new IconData(0xe862, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">assistant</i> &#x2014; material icon named "assistant".
  get assistant() {
    return new IconData(0xe39f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">assistant_photo</i> &#x2014; material icon named "assistant photo".
  get assistant_photo() {
    return new IconData(0xe3a0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">atm</i> &#x2014; material icon named "atm".
  get atm() {
    return new IconData(0xe573, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">attach_file</i> &#x2014; material icon named "attach file".
  get attach_file() {
    return new IconData(0xe226, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">attach_money</i> &#x2014; material icon named "attach money".
  get attach_money() {
    return new IconData(0xe227, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">attachment</i> &#x2014; material icon named "attachment".
  get attachment() {
    return new IconData(0xe2bc, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">audiotrack</i> &#x2014; material icon named "audiotrack".
  get audiotrack() {
    return new IconData(0xe3a1, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">autorenew</i> &#x2014; material icon named "autorenew".
  get autorenew() {
    return new IconData(0xe863, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">av_timer</i> &#x2014; material icon named "av timer".
  get av_timer() {
    return new IconData(0xe01b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">backspace</i> &#x2014; material icon named "backspace".
  get backspace() {
    return new IconData(0xe14a, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">backup</i> &#x2014; material icon named "backup".
  get backup() {
    return new IconData(0xe864, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">battery_alert</i> &#x2014; material icon named "battery alert".
  get battery_alert() {
    return new IconData(0xe19c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">battery_charging_full</i> &#x2014; material icon named "battery charging full".
  get battery_charging_full() {
    return new IconData(0xe1a3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">battery_full</i> &#x2014; material icon named "battery full".
  get battery_full() {
    return new IconData(0xe1a4, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">battery_std</i> &#x2014; material icon named "battery std".
  get battery_std() {
    return new IconData(0xe1a5, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">battery_unknown</i> &#x2014; material icon named "battery unknown".
  get battery_unknown() {
    return new IconData(0xe1a6, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">beach_access</i> &#x2014; material icon named "beach access".
  get beach_access() {
    return new IconData(0xeb3e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">beenhere</i> &#x2014; material icon named "beenhere".
  get beenhere() {
    return new IconData(0xe52d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">block</i> &#x2014; material icon named "block".
  get block() {
    return new IconData(0xe14b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">bluetooth</i> &#x2014; material icon named "bluetooth".
  get bluetooth() {
    return new IconData(0xe1a7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">bluetooth_audio</i> &#x2014; material icon named "bluetooth audio".
  get bluetooth_audio() {
    return new IconData(0xe60f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">bluetooth_connected</i> &#x2014; material icon named "bluetooth connected".
  get bluetooth_connected() {
    return new IconData(0xe1a8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">bluetooth_disabled</i> &#x2014; material icon named "bluetooth disabled".
  get bluetooth_disabled() {
    return new IconData(0xe1a9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">bluetooth_searching</i> &#x2014; material icon named "bluetooth searching".
  get bluetooth_searching() {
    return new IconData(0xe1aa, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">blur_circular</i> &#x2014; material icon named "blur circular".
  get blur_circular() {
    return new IconData(0xe3a2, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">blur_linear</i> &#x2014; material icon named "blur linear".
  get blur_linear() {
    return new IconData(0xe3a3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">blur_off</i> &#x2014; material icon named "blur off".
  get blur_off() {
    return new IconData(0xe3a4, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">blur_on</i> &#x2014; material icon named "blur on".
  get blur_on() {
    return new IconData(0xe3a5, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">book</i> &#x2014; material icon named "book".
  get book() {
    return new IconData(0xe865, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">bookmark</i> &#x2014; material icon named "bookmark".
  get bookmark() {
    return new IconData(0xe866, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">bookmark_border</i> &#x2014; material icon named "bookmark border".
  get bookmark_border() {
    return new IconData(0xe867, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">border_all</i> &#x2014; material icon named "border all".
  get border_all() {
    return new IconData(0xe228, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">border_bottom</i> &#x2014; material icon named "border bottom".
  get border_bottom() {
    return new IconData(0xe229, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">border_clear</i> &#x2014; material icon named "border clear".
  get border_clear() {
    return new IconData(0xe22a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">border_color</i> &#x2014; material icon named "border color".
  get border_color() {
    return new IconData(0xe22b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">border_horizontal</i> &#x2014; material icon named "border horizontal".
  get border_horizontal() {
    return new IconData(0xe22c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">border_inner</i> &#x2014; material icon named "border inner".
  get border_inner() {
    return new IconData(0xe22d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">border_left</i> &#x2014; material icon named "border left".
  get border_left() {
    return new IconData(0xe22e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">border_outer</i> &#x2014; material icon named "border outer".
  get border_outer() {
    return new IconData(0xe22f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">border_right</i> &#x2014; material icon named "border right".
  get border_right() {
    return new IconData(0xe230, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">border_style</i> &#x2014; material icon named "border style".
  get border_style() {
    return new IconData(0xe231, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">border_top</i> &#x2014; material icon named "border top".
  get border_top() {
    return new IconData(0xe232, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">border_vertical</i> &#x2014; material icon named "border vertical".
  get border_vertical() {
    return new IconData(0xe233, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">branding_watermark</i> &#x2014; material icon named "branding watermark".
  get branding_watermark() {
    return new IconData(0xe06b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">brightness_1</i> &#x2014; material icon named "brightness 1".
  get brightness_1() {
    return new IconData(0xe3a6, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">brightness_2</i> &#x2014; material icon named "brightness 2".
  get brightness_2() {
    return new IconData(0xe3a7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">brightness_3</i> &#x2014; material icon named "brightness 3".
  get brightness_3() {
    return new IconData(0xe3a8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">brightness_4</i> &#x2014; material icon named "brightness 4".
  get brightness_4() {
    return new IconData(0xe3a9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">brightness_5</i> &#x2014; material icon named "brightness 5".
  get brightness_5() {
    return new IconData(0xe3aa, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">brightness_6</i> &#x2014; material icon named "brightness 6".
  get brightness_6() {
    return new IconData(0xe3ab, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">brightness_7</i> &#x2014; material icon named "brightness 7".
  get brightness_7() {
    return new IconData(0xe3ac, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">brightness_auto</i> &#x2014; material icon named "brightness auto".
  get brightness_auto() {
    return new IconData(0xe1ab, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">brightness_high</i> &#x2014; material icon named "brightness high".
  get brightness_high() {
    return new IconData(0xe1ac, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">brightness_low</i> &#x2014; material icon named "brightness low".
  get brightness_low() {
    return new IconData(0xe1ad, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">brightness_medium</i> &#x2014; material icon named "brightness medium".
  get brightness_medium() {
    return new IconData(0xe1ae, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">broken_image</i> &#x2014; material icon named "broken image".
  get broken_image() {
    return new IconData(0xe3ad, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">brush</i> &#x2014; material icon named "brush".
  get brush() {
    return new IconData(0xe3ae, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">bubble_chart</i> &#x2014; material icon named "bubble chart".
  get bubble_chart() {
    return new IconData(0xe6dd, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">bug_report</i> &#x2014; material icon named "bug report".
  get bug_report() {
    return new IconData(0xe868, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">build</i> &#x2014; material icon named "build".
  get build() {
    return new IconData(0xe869, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">burst_mode</i> &#x2014; material icon named "burst mode".
  get burst_mode() {
    return new IconData(0xe43c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">business</i> &#x2014; material icon named "business".
  get business() {
    return new IconData(0xe0af, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">business_center</i> &#x2014; material icon named "business center".
  get business_center() {
    return new IconData(0xeb3f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">cached</i> &#x2014; material icon named "cached".
  get cached() {
    return new IconData(0xe86a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">cake</i> &#x2014; material icon named "cake".
  get cake() {
    return new IconData(0xe7e9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">calendar_today</i> &#x2014; material icon named "calendar today".
  get calendar_today() {
    return new IconData(0xe935, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">calendar_view_day</i> &#x2014; material icon named "calendar view day".
  get calendar_view_day() {
    return new IconData(0xe936, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">call</i> &#x2014; material icon named "call".
  get call() {
    return new IconData(0xe0b0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">call_end</i> &#x2014; material icon named "call end".
  get call_end() {
    return new IconData(0xe0b1, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">call_made</i> &#x2014; material icon named "call made".
  get call_made() {
    return new IconData(0xe0b2, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">call_merge</i> &#x2014; material icon named "call merge".
  get call_merge() {
    return new IconData(0xe0b3, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">call_missed</i> &#x2014; material icon named "call missed".
  get call_missed() {
    return new IconData(0xe0b4, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">call_missed_outgoing</i> &#x2014; material icon named "call missed outgoing".
  get call_missed_outgoing() {
    return new IconData(0xe0e4, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">call_received</i> &#x2014; material icon named "call received".
  get call_received() {
    return new IconData(0xe0b5, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">call_split</i> &#x2014; material icon named "call split".
  get call_split() {
    return new IconData(0xe0b6, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">call_to_action</i> &#x2014; material icon named "call to action".
  get call_to_action() {
    return new IconData(0xe06c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">camera</i> &#x2014; material icon named "camera".
  get camera() {
    return new IconData(0xe3af, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">camera_alt</i> &#x2014; material icon named "camera alt".
  get camera_alt() {
    return new IconData(0xe3b0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">camera_enhance</i> &#x2014; material icon named "camera enhance".
  get camera_enhance() {
    return new IconData(0xe8fc, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">camera_front</i> &#x2014; material icon named "camera front".
  get camera_front() {
    return new IconData(0xe3b1, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">camera_rear</i> &#x2014; material icon named "camera rear".
  get camera_rear() {
    return new IconData(0xe3b2, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">camera_roll</i> &#x2014; material icon named "camera roll".
  get camera_roll() {
    return new IconData(0xe3b3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">cancel</i> &#x2014; material icon named "cancel".
  get cancel() {
    return new IconData(0xe5c9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">card_giftcard</i> &#x2014; material icon named "card giftcard".
  get card_giftcard() {
    return new IconData(0xe8f6, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">card_membership</i> &#x2014; material icon named "card membership".
  get card_membership() {
    return new IconData(0xe8f7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">card_travel</i> &#x2014; material icon named "card travel".
  get card_travel() {
    return new IconData(0xe8f8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">casino</i> &#x2014; material icon named "casino".
  get casino() {
    return new IconData(0xeb40, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">cast</i> &#x2014; material icon named "cast".
  get cast() {
    return new IconData(0xe307, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">cast_connected</i> &#x2014; material icon named "cast connected".
  get cast_connected() {
    return new IconData(0xe308, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">category</i> &#x2014; material icon named "category".
  get category() {
    return new IconData(0xe574, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">center_focus_strong</i> &#x2014; material icon named "center focus strong".
  get center_focus_strong() {
    return new IconData(0xe3b4, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">center_focus_weak</i> &#x2014; material icon named "center focus weak".
  get center_focus_weak() {
    return new IconData(0xe3b5, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">change_history</i> &#x2014; material icon named "change history".
  get change_history() {
    return new IconData(0xe86b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">chat</i> &#x2014; material icon named "chat".
  get chat() {
    return new IconData(0xe0b7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">chat_bubble</i> &#x2014; material icon named "chat bubble".
  get chat_bubble() {
    return new IconData(0xe0ca, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">chat_bubble_outline</i> &#x2014; material icon named "chat bubble outline".
  get chat_bubble_outline() {
    return new IconData(0xe0cb, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">check</i> &#x2014; material icon named "check".
  get check() {
    return new IconData(0xe5ca, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">check_box</i> &#x2014; material icon named "check box".
  get check_box() {
    return new IconData(0xe834, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">check_box_outline_blank</i> &#x2014; material icon named "check box outline blank".
  get check_box_outline_blank() {
    return new IconData(0xe835, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">check_circle</i> &#x2014; material icon named "check circle".
  get check_circle() {
    return new IconData(0xe86c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">check_circle_outline</i> &#x2014; material icon named "check circle outline".
  get check_circle_outline() {
    return new IconData(0xe92d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">chevron_left</i> &#x2014; material icon named "chevron left".
  get chevron_left() {
    return new IconData(0xe5cb, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">chevron_right</i> &#x2014; material icon named "chevron right".
  get chevron_right() {
    return new IconData(0xe5cc, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">child_care</i> &#x2014; material icon named "child care".
  get child_care() {
    return new IconData(0xeb41, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">child_friendly</i> &#x2014; material icon named "child friendly".
  get child_friendly() {
    return new IconData(0xeb42, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">chrome_reader_mode</i> &#x2014; material icon named "chrome reader mode".
  get chrome_reader_mode() {
    return new IconData(0xe86d, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">class</i> &#x2014; material icon named "class".
  get class_() {
    return new IconData(0xe86e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">clear</i> &#x2014; material icon named "clear".
  get clear() {
    return new IconData(0xe14c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">clear_all</i> &#x2014; material icon named "clear all".
  get clear_all() {
    return new IconData(0xe0b8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">close</i> &#x2014; material icon named "close".
  get close() {
    return new IconData(0xe5cd, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">closed_caption</i> &#x2014; material icon named "closed caption".
  get closed_caption() {
    return new IconData(0xe01c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">cloud</i> &#x2014; material icon named "cloud".
  get cloud() {
    return new IconData(0xe2bd, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">cloud_circle</i> &#x2014; material icon named "cloud circle".
  get cloud_circle() {
    return new IconData(0xe2be, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">cloud_done</i> &#x2014; material icon named "cloud done".
  get cloud_done() {
    return new IconData(0xe2bf, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">cloud_download</i> &#x2014; material icon named "cloud download".
  get cloud_download() {
    return new IconData(0xe2c0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">cloud_off</i> &#x2014; material icon named "cloud off".
  get cloud_off() {
    return new IconData(0xe2c1, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">cloud_queue</i> &#x2014; material icon named "cloud queue".
  get cloud_queue() {
    return new IconData(0xe2c2, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">cloud_upload</i> &#x2014; material icon named "cloud upload".
  get cloud_upload() {
    return new IconData(0xe2c3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">code</i> &#x2014; material icon named "code".
  get code() {
    return new IconData(0xe86f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">collections</i> &#x2014; material icon named "collections".
  get collections() {
    return new IconData(0xe3b6, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">collections_bookmark</i> &#x2014; material icon named "collections bookmark".
  get collections_bookmark() {
    return new IconData(0xe431, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">color_lens</i> &#x2014; material icon named "color lens".
  get color_lens() {
    return new IconData(0xe3b7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">colorize</i> &#x2014; material icon named "colorize".
  get colorize() {
    return new IconData(0xe3b8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">comment</i> &#x2014; material icon named "comment".
  get comment() {
    return new IconData(0xe0b9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">compare</i> &#x2014; material icon named "compare".
  get compare() {
    return new IconData(0xe3b9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">compare_arrows</i> &#x2014; material icon named "compare arrows".
  get compare_arrows() {
    return new IconData(0xe915, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">computer</i> &#x2014; material icon named "computer".
  get computer() {
    return new IconData(0xe30a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">confirmation_number</i> &#x2014; material icon named "confirmation number".
  get confirmation_number() {
    return new IconData(0xe638, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">contact_mail</i> &#x2014; material icon named "contact mail".
  get contact_mail() {
    return new IconData(0xe0d0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">contact_phone</i> &#x2014; material icon named "contact phone".
  get contact_phone() {
    return new IconData(0xe0cf, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">contacts</i> &#x2014; material icon named "contacts".
  get contacts() {
    return new IconData(0xe0ba, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">content_copy</i> &#x2014; material icon named "content copy".
  get content_copy() {
    return new IconData(0xe14d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">content_cut</i> &#x2014; material icon named "content cut".
  get content_cut() {
    return new IconData(0xe14e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">content_paste</i> &#x2014; material icon named "content paste".
  get content_paste() {
    return new IconData(0xe14f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">control_point</i> &#x2014; material icon named "control point".
  get control_point() {
    return new IconData(0xe3ba, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">control_point_duplicate</i> &#x2014; material icon named "control point duplicate".
  get control_point_duplicate() {
    return new IconData(0xe3bb, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">copyright</i> &#x2014; material icon named "copyright".
  get copyright() {
    return new IconData(0xe90c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">create</i> &#x2014; material icon named "create".
  get create() {
    return new IconData(0xe150, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">create_new_folder</i> &#x2014; material icon named "create new folder".
  get create_new_folder() {
    return new IconData(0xe2cc, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">credit_card</i> &#x2014; material icon named "credit card".
  get credit_card() {
    return new IconData(0xe870, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">crop</i> &#x2014; material icon named "crop".
  get crop() {
    return new IconData(0xe3be, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">crop_16_9</i> &#x2014; material icon named "crop 16 9".
  get crop_16_9() {
    return new IconData(0xe3bc, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">crop_3_2</i> &#x2014; material icon named "crop 3 2".
  get crop_3_2() {
    return new IconData(0xe3bd, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">crop_5_4</i> &#x2014; material icon named "crop 5 4".
  get crop_5_4() {
    return new IconData(0xe3bf, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">crop_7_5</i> &#x2014; material icon named "crop 7 5".
  get crop_7_5() {
    return new IconData(0xe3c0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">crop_din</i> &#x2014; material icon named "crop din".
  get crop_din() {
    return new IconData(0xe3c1, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">crop_free</i> &#x2014; material icon named "crop free".
  get crop_free() {
    return new IconData(0xe3c2, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">crop_landscape</i> &#x2014; material icon named "crop landscape".
  get crop_landscape() {
    return new IconData(0xe3c3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">crop_original</i> &#x2014; material icon named "crop original".
  get crop_original() {
    return new IconData(0xe3c4, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">crop_portrait</i> &#x2014; material icon named "crop portrait".
  get crop_portrait() {
    return new IconData(0xe3c5, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">crop_rotate</i> &#x2014; material icon named "crop rotate".
  get crop_rotate() {
    return new IconData(0xe437, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">crop_square</i> &#x2014; material icon named "crop square".
  get crop_square() {
    return new IconData(0xe3c6, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">dashboard</i> &#x2014; material icon named "dashboard".
  get dashboard() {
    return new IconData(0xe871, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">data_usage</i> &#x2014; material icon named "data usage".
  get data_usage() {
    return new IconData(0xe1af, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">date_range</i> &#x2014; material icon named "date range".
  get date_range() {
    return new IconData(0xe916, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">dehaze</i> &#x2014; material icon named "dehaze".
  get dehaze() {
    return new IconData(0xe3c7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">delete</i> &#x2014; material icon named "delete".
  get delete() {
    return new IconData(0xe872, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">delete_forever</i> &#x2014; material icon named "delete forever".
  get delete_forever() {
    return new IconData(0xe92b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">delete_outline</i> &#x2014; material icon named "delete outline".
  get delete_outline() {
    return new IconData(0xe92e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">delete_sweep</i> &#x2014; material icon named "delete sweep".
  get delete_sweep() {
    return new IconData(0xe16c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">departure_board</i> &#x2014; material icon named "departure board".
  get departure_board() {
    return new IconData(0xe576, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">description</i> &#x2014; material icon named "description".
  get description() {
    return new IconData(0xe873, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">desktop_mac</i> &#x2014; material icon named "desktop mac".
  get desktop_mac() {
    return new IconData(0xe30b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">desktop_windows</i> &#x2014; material icon named "desktop windows".
  get desktop_windows() {
    return new IconData(0xe30c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">details</i> &#x2014; material icon named "details".
  get details() {
    return new IconData(0xe3c8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">developer_board</i> &#x2014; material icon named "developer board".
  get developer_board() {
    return new IconData(0xe30d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">developer_mode</i> &#x2014; material icon named "developer mode".
  get developer_mode() {
    return new IconData(0xe1b0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">device_hub</i> &#x2014; material icon named "device hub".
  get device_hub() {
    return new IconData(0xe335, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">device_unknown</i> &#x2014; material icon named "device unknown".
  get device_unknown() {
    return new IconData(0xe339, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">devices</i> &#x2014; material icon named "devices".
  get devices() {
    return new IconData(0xe1b1, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">devices_other</i> &#x2014; material icon named "devices other".
  get devices_other() {
    return new IconData(0xe337, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">dialer_sip</i> &#x2014; material icon named "dialer sip".
  get dialer_sip() {
    return new IconData(0xe0bb, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">dialpad</i> &#x2014; material icon named "dialpad".
  get dialpad() {
    return new IconData(0xe0bc, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">directions</i> &#x2014; material icon named "directions".
  get directions() {
    return new IconData(0xe52e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">directions_bike</i> &#x2014; material icon named "directions bike".
  get directions_bike() {
    return new IconData(0xe52f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">directions_boat</i> &#x2014; material icon named "directions boat".
  get directions_boat() {
    return new IconData(0xe532, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">directions_bus</i> &#x2014; material icon named "directions bus".
  get directions_bus() {
    return new IconData(0xe530, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">directions_car</i> &#x2014; material icon named "directions car".
  get directions_car() {
    return new IconData(0xe531, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">directions_railway</i> &#x2014; material icon named "directions railway".
  get directions_railway() {
    return new IconData(0xe534, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">directions_run</i> &#x2014; material icon named "directions run".
  get directions_run() {
    return new IconData(0xe566, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">directions_subway</i> &#x2014; material icon named "directions subway".
  get directions_subway() {
    return new IconData(0xe533, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">directions_transit</i> &#x2014; material icon named "directions transit".
  get directions_transit() {
    return new IconData(0xe535, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">directions_walk</i> &#x2014; material icon named "directions walk".
  get directions_walk() {
    return new IconData(0xe536, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">disc_full</i> &#x2014; material icon named "disc full".
  get disc_full() {
    return new IconData(0xe610, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">dns</i> &#x2014; material icon named "dns".
  get dns() {
    return new IconData(0xe875, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">do_not_disturb</i> &#x2014; material icon named "do not disturb".
  get do_not_disturb() {
    return new IconData(0xe612, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">do_not_disturb_alt</i> &#x2014; material icon named "do not disturb alt".
  get do_not_disturb_alt() {
    return new IconData(0xe611, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">do_not_disturb_off</i> &#x2014; material icon named "do not disturb off".
  get do_not_disturb_off() {
    return new IconData(0xe643, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">do_not_disturb_on</i> &#x2014; material icon named "do not disturb on".
  get do_not_disturb_on() {
    return new IconData(0xe644, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">dock</i> &#x2014; material icon named "dock".
  get dock() {
    return new IconData(0xe30e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">domain</i> &#x2014; material icon named "domain".
  get domain() {
    return new IconData(0xe7ee, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">done</i> &#x2014; material icon named "done".
  get done() {
    return new IconData(0xe876, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">done_all</i> &#x2014; material icon named "done all".
  get done_all() {
    return new IconData(0xe877, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">done_outline</i> &#x2014; material icon named "done outline".
  get done_outline() {
    return new IconData(0xe92f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">donut_large</i> &#x2014; material icon named "donut large".
  get donut_large() {
    return new IconData(0xe917, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">donut_small</i> &#x2014; material icon named "donut small".
  get donut_small() {
    return new IconData(0xe918, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">drafts</i> &#x2014; material icon named "drafts".
  get drafts() {
    return new IconData(0xe151, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">drag_handle</i> &#x2014; material icon named "drag handle".
  get drag_handle() {
    return new IconData(0xe25d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">drive_eta</i> &#x2014; material icon named "drive eta".
  get drive_eta() {
    return new IconData(0xe613, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">dvr</i> &#x2014; material icon named "dvr".
  get dvr() {
    return new IconData(0xe1b2, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">edit</i> &#x2014; material icon named "edit".
  get edit() {
    return new IconData(0xe3c9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">edit_attributes</i> &#x2014; material icon named "edit attributes".
  get edit_attributes() {
    return new IconData(0xe578, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">edit_location</i> &#x2014; material icon named "edit location".
  get edit_location() {
    return new IconData(0xe568, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">eject</i> &#x2014; material icon named "eject".
  get eject() {
    return new IconData(0xe8fb, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">email</i> &#x2014; material icon named "email".
  get email() {
    return new IconData(0xe0be, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">enhanced_encryption</i> &#x2014; material icon named "enhanced encryption".
  get enhanced_encryption() {
    return new IconData(0xe63f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">equalizer</i> &#x2014; material icon named "equalizer".
  get equalizer() {
    return new IconData(0xe01d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">error</i> &#x2014; material icon named "error".
  get error() {
    return new IconData(0xe000, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">error_outline</i> &#x2014; material icon named "error outline".
  get error_outline() {
    return new IconData(0xe001, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">euro_symbol</i> &#x2014; material icon named "euro symbol".
  get euro_symbol() {
    return new IconData(0xe926, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">ev_station</i> &#x2014; material icon named "ev station".
  get ev_station() {
    return new IconData(0xe56d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">event</i> &#x2014; material icon named "event".
  get event() {
    return new IconData(0xe878, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">event_available</i> &#x2014; material icon named "event available".
  get event_available() {
    return new IconData(0xe614, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">event_busy</i> &#x2014; material icon named "event busy".
  get event_busy() {
    return new IconData(0xe615, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">event_note</i> &#x2014; material icon named "event note".
  get event_note() {
    return new IconData(0xe616, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">event_seat</i> &#x2014; material icon named "event seat".
  get event_seat() {
    return new IconData(0xe903, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">exit_to_app</i> &#x2014; material icon named "exit to app".
  get exit_to_app() {
    return new IconData(0xe879, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">expand_less</i> &#x2014; material icon named "expand less".
  get expand_less() {
    return new IconData(0xe5ce, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">expand_more</i> &#x2014; material icon named "expand more".
  get expand_more() {
    return new IconData(0xe5cf, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">explicit</i> &#x2014; material icon named "explicit".
  get explicit() {
    return new IconData(0xe01e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">explore</i> &#x2014; material icon named "explore".
  get explore() {
    return new IconData(0xe87a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">exposure</i> &#x2014; material icon named "exposure".
  get exposure() {
    return new IconData(0xe3ca, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">exposure_neg_1</i> &#x2014; material icon named "exposure neg 1".
  get exposure_neg_1() {
    return new IconData(0xe3cb, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">exposure_neg_2</i> &#x2014; material icon named "exposure neg 2".
  get exposure_neg_2() {
    return new IconData(0xe3cc, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">exposure_plus_1</i> &#x2014; material icon named "exposure plus 1".
  get exposure_plus_1() {
    return new IconData(0xe3cd, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">exposure_plus_2</i> &#x2014; material icon named "exposure plus 2".
  get exposure_plus_2() {
    return new IconData(0xe3ce, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">exposure_zero</i> &#x2014; material icon named "exposure zero".
  get exposure_zero() {
    return new IconData(0xe3cf, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">extension</i> &#x2014; material icon named "extension".
  get extension() {
    return new IconData(0xe87b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">face</i> &#x2014; material icon named "face".
  get face() {
    return new IconData(0xe87c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">fast_forward</i> &#x2014; material icon named "fast forward".
  get fast_forward() {
    return new IconData(0xe01f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">fast_rewind</i> &#x2014; material icon named "fast rewind".
  get fast_rewind() {
    return new IconData(0xe020, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">fastfood</i> &#x2014; material icon named "fastfood".
  get fastfood() {
    return new IconData(0xe57a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">favorite</i> &#x2014; material icon named "favorite".
  get favorite() {
    return new IconData(0xe87d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">favorite_border</i> &#x2014; material icon named "favorite border".
  get favorite_border() {
    return new IconData(0xe87e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">featured_play_list</i> &#x2014; material icon named "featured play list".
  get featured_play_list() {
    return new IconData(0xe06d, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">featured_video</i> &#x2014; material icon named "featured video".
  get featured_video() {
    return new IconData(0xe06e, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">feedback</i> &#x2014; material icon named "feedback".
  get feedback() {
    return new IconData(0xe87f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">fiber_dvr</i> &#x2014; material icon named "fiber dvr".
  get fiber_dvr() {
    return new IconData(0xe05d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">fiber_manual_record</i> &#x2014; material icon named "fiber manual record".
  get fiber_manual_record() {
    return new IconData(0xe061, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">fiber_new</i> &#x2014; material icon named "fiber new".
  get fiber_new() {
    return new IconData(0xe05e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">fiber_pin</i> &#x2014; material icon named "fiber pin".
  get fiber_pin() {
    return new IconData(0xe06a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">fiber_smart_record</i> &#x2014; material icon named "fiber smart record".
  get fiber_smart_record() {
    return new IconData(0xe062, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">file_download</i> &#x2014; material icon named "file download".
  get file_download() {
    return new IconData(0xe2c4, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">file_upload</i> &#x2014; material icon named "file upload".
  get file_upload() {
    return new IconData(0xe2c6, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">filter</i> &#x2014; material icon named "filter".
  get filter() {
    return new IconData(0xe3d3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">filter_1</i> &#x2014; material icon named "filter 1".
  get filter_1() {
    return new IconData(0xe3d0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">filter_2</i> &#x2014; material icon named "filter 2".
  get filter_2() {
    return new IconData(0xe3d1, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">filter_3</i> &#x2014; material icon named "filter 3".
  get filter_3() {
    return new IconData(0xe3d2, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">filter_4</i> &#x2014; material icon named "filter 4".
  get filter_4() {
    return new IconData(0xe3d4, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">filter_5</i> &#x2014; material icon named "filter 5".
  get filter_5() {
    return new IconData(0xe3d5, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">filter_6</i> &#x2014; material icon named "filter 6".
  get filter_6() {
    return new IconData(0xe3d6, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">filter_7</i> &#x2014; material icon named "filter 7".
  get filter_7() {
    return new IconData(0xe3d7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">filter_8</i> &#x2014; material icon named "filter 8".
  get filter_8() {
    return new IconData(0xe3d8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">filter_9</i> &#x2014; material icon named "filter 9".
  get filter_9() {
    return new IconData(0xe3d9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">filter_9_plus</i> &#x2014; material icon named "filter 9 plus".
  get filter_9_plus() {
    return new IconData(0xe3da, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">filter_b_and_w</i> &#x2014; material icon named "filter b and w".
  get filter_b_and_w() {
    return new IconData(0xe3db, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">filter_center_focus</i> &#x2014; material icon named "filter center focus".
  get filter_center_focus() {
    return new IconData(0xe3dc, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">filter_drama</i> &#x2014; material icon named "filter drama".
  get filter_drama() {
    return new IconData(0xe3dd, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">filter_frames</i> &#x2014; material icon named "filter frames".
  get filter_frames() {
    return new IconData(0xe3de, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">filter_hdr</i> &#x2014; material icon named "filter hdr".
  get filter_hdr() {
    return new IconData(0xe3df, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">filter_list</i> &#x2014; material icon named "filter list".
  get filter_list() {
    return new IconData(0xe152, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">filter_none</i> &#x2014; material icon named "filter none".
  get filter_none() {
    return new IconData(0xe3e0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">filter_tilt_shift</i> &#x2014; material icon named "filter tilt shift".
  get filter_tilt_shift() {
    return new IconData(0xe3e2, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">filter_vintage</i> &#x2014; material icon named "filter vintage".
  get filter_vintage() {
    return new IconData(0xe3e3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">find_in_page</i> &#x2014; material icon named "find in page".
  get find_in_page() {
    return new IconData(0xe880, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">find_replace</i> &#x2014; material icon named "find replace".
  get find_replace() {
    return new IconData(0xe881, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">fingerprint</i> &#x2014; material icon named "fingerprint".
  get fingerprint() {
    return new IconData(0xe90d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">first_page</i> &#x2014; material icon named "first page".
  get first_page() {
    return new IconData(0xe5dc, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">fitness_center</i> &#x2014; material icon named "fitness center".
  get fitness_center() {
    return new IconData(0xeb43, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">flag</i> &#x2014; material icon named "flag".
  get flag() {
    return new IconData(0xe153, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">flare</i> &#x2014; material icon named "flare".
  get flare() {
    return new IconData(0xe3e4, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">flash_auto</i> &#x2014; material icon named "flash auto".
  get flash_auto() {
    return new IconData(0xe3e5, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">flash_off</i> &#x2014; material icon named "flash off".
  get flash_off() {
    return new IconData(0xe3e6, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">flash_on</i> &#x2014; material icon named "flash on".
  get flash_on() {
    return new IconData(0xe3e7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">flight</i> &#x2014; material icon named "flight".
  get flight() {
    return new IconData(0xe539, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">flight_land</i> &#x2014; material icon named "flight land".
  get flight_land() {
    return new IconData(0xe904, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">flight_takeoff</i> &#x2014; material icon named "flight takeoff".
  get flight_takeoff() {
    return new IconData(0xe905, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">flip</i> &#x2014; material icon named "flip".
  get flip() {
    return new IconData(0xe3e8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">flip_to_back</i> &#x2014; material icon named "flip to back".
  get flip_to_back() {
    return new IconData(0xe882, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">flip_to_front</i> &#x2014; material icon named "flip to front".
  get flip_to_front() {
    return new IconData(0xe883, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">folder</i> &#x2014; material icon named "folder".
  get folder() {
    return new IconData(0xe2c7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">folder_open</i> &#x2014; material icon named "folder open".
  get folder_open() {
    return new IconData(0xe2c8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">folder_shared</i> &#x2014; material icon named "folder shared".
  get folder_shared() {
    return new IconData(0xe2c9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">folder_special</i> &#x2014; material icon named "folder special".
  get folder_special() {
    return new IconData(0xe617, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">font_download</i> &#x2014; material icon named "font download".
  get font_download() {
    return new IconData(0xe167, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">format_align_center</i> &#x2014; material icon named "format align center".
  get format_align_center() {
    return new IconData(0xe234, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">format_align_justify</i> &#x2014; material icon named "format align justify".
  get format_align_justify() {
    return new IconData(0xe235, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">format_align_left</i> &#x2014; material icon named "format align left".
  get format_align_left() {
    return new IconData(0xe236, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">format_align_right</i> &#x2014; material icon named "format align right".
  get format_align_right() {
    return new IconData(0xe237, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">format_bold</i> &#x2014; material icon named "format bold".
  get format_bold() {
    return new IconData(0xe238, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">format_clear</i> &#x2014; material icon named "format clear".
  get format_clear() {
    return new IconData(0xe239, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">format_color_fill</i> &#x2014; material icon named "format color fill".
  get format_color_fill() {
    return new IconData(0xe23a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">format_color_reset</i> &#x2014; material icon named "format color reset".
  get format_color_reset() {
    return new IconData(0xe23b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">format_color_text</i> &#x2014; material icon named "format color text".
  get format_color_text() {
    return new IconData(0xe23c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">format_indent_decrease</i> &#x2014; material icon named "format indent decrease".
  get format_indent_decrease() {
    return new IconData(0xe23d, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">format_indent_increase</i> &#x2014; material icon named "format indent increase".
  get format_indent_increase() {
    return new IconData(0xe23e, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">format_italic</i> &#x2014; material icon named "format italic".
  get format_italic() {
    return new IconData(0xe23f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">format_line_spacing</i> &#x2014; material icon named "format line spacing".
  get format_line_spacing() {
    return new IconData(0xe240, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">format_list_bulleted</i> &#x2014; material icon named "format list bulleted".
  get format_list_bulleted() {
    return new IconData(0xe241, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">format_list_numbered</i> &#x2014; material icon named "format list numbered".
  get format_list_numbered() {
    return new IconData(0xe242, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">format_list_numbered_rtl</i> &#x2014; material icon named "format list numbered rtl".
  get format_list_numbered_rtl() {
    return new IconData(0xe267, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">format_paint</i> &#x2014; material icon named "format paint".
  get format_paint() {
    return new IconData(0xe243, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">format_quote</i> &#x2014; material icon named "format quote".
  get format_quote() {
    return new IconData(0xe244, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">format_shapes</i> &#x2014; material icon named "format shapes".
  get format_shapes() {
    return new IconData(0xe25e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">format_size</i> &#x2014; material icon named "format size".
  get format_size() {
    return new IconData(0xe245, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">format_strikethrough</i> &#x2014; material icon named "format strikethrough".
  get format_strikethrough() {
    return new IconData(0xe246, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">format_textdirection_l_to_r</i> &#x2014; material icon named "format textdirection l to r".
  get format_textdirection_l_to_r() {
    return new IconData(0xe247, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">format_textdirection_r_to_l</i> &#x2014; material icon named "format textdirection r to l".
  get format_textdirection_r_to_l() {
    return new IconData(0xe248, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">format_underlined</i> &#x2014; material icon named "format underlined".
  get format_underlined() {
    return new IconData(0xe249, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">forum</i> &#x2014; material icon named "forum".
  get forum() {
    return new IconData(0xe0bf, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">forward</i> &#x2014; material icon named "forward".
  get forward() {
    return new IconData(0xe154, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">forward_10</i> &#x2014; material icon named "forward 10".
  get forward_10() {
    return new IconData(0xe056, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">forward_30</i> &#x2014; material icon named "forward 30".
  get forward_30() {
    return new IconData(0xe057, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">forward_5</i> &#x2014; material icon named "forward 5".
  get forward_5() {
    return new IconData(0xe058, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">free_breakfast</i> &#x2014; material icon named "free breakfast".
  get free_breakfast() {
    return new IconData(0xeb44, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">fullscreen</i> &#x2014; material icon named "fullscreen".
  get fullscreen() {
    return new IconData(0xe5d0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">fullscreen_exit</i> &#x2014; material icon named "fullscreen exit".
  get fullscreen_exit() {
    return new IconData(0xe5d1, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">functions</i> &#x2014; material icon named "functions".
  get functions() {
    return new IconData(0xe24a, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">g_translate</i> &#x2014; material icon named "g translate".
  get g_translate() {
    return new IconData(0xe927, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">gamepad</i> &#x2014; material icon named "gamepad".
  get gamepad() {
    return new IconData(0xe30f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">games</i> &#x2014; material icon named "games".
  get games() {
    return new IconData(0xe021, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">gavel</i> &#x2014; material icon named "gavel".
  get gavel() {
    return new IconData(0xe90e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">gesture</i> &#x2014; material icon named "gesture".
  get gesture() {
    return new IconData(0xe155, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">get_app</i> &#x2014; material icon named "get app".
  get get_app() {
    return new IconData(0xe884, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">gif</i> &#x2014; material icon named "gif".
  get gif() {
    return new IconData(0xe908, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">golf_course</i> &#x2014; material icon named "golf course".
  get golf_course() {
    return new IconData(0xeb45, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">gps_fixed</i> &#x2014; material icon named "gps fixed".
  get gps_fixed() {
    return new IconData(0xe1b3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">gps_not_fixed</i> &#x2014; material icon named "gps not fixed".
  get gps_not_fixed() {
    return new IconData(0xe1b4, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">gps_off</i> &#x2014; material icon named "gps off".
  get gps_off() {
    return new IconData(0xe1b5, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">grade</i> &#x2014; material icon named "grade".
  get grade() {
    return new IconData(0xe885, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">gradient</i> &#x2014; material icon named "gradient".
  get gradient() {
    return new IconData(0xe3e9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">grain</i> &#x2014; material icon named "grain".
  get grain() {
    return new IconData(0xe3ea, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">graphic_eq</i> &#x2014; material icon named "graphic eq".
  get graphic_eq() {
    return new IconData(0xe1b8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">grid_off</i> &#x2014; material icon named "grid off".
  get grid_off() {
    return new IconData(0xe3eb, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">grid_on</i> &#x2014; material icon named "grid on".
  get grid_on() {
    return new IconData(0xe3ec, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">group</i> &#x2014; material icon named "group".
  get group() {
    return new IconData(0xe7ef, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">group_add</i> &#x2014; material icon named "group add".
  get group_add() {
    return new IconData(0xe7f0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">group_work</i> &#x2014; material icon named "group work".
  get group_work() {
    return new IconData(0xe886, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">hd</i> &#x2014; material icon named "hd".
  get hd() {
    return new IconData(0xe052, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">hdr_off</i> &#x2014; material icon named "hdr off".
  get hdr_off() {
    return new IconData(0xe3ed, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">hdr_on</i> &#x2014; material icon named "hdr on".
  get hdr_on() {
    return new IconData(0xe3ee, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">hdr_strong</i> &#x2014; material icon named "hdr strong".
  get hdr_strong() {
    return new IconData(0xe3f1, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">hdr_weak</i> &#x2014; material icon named "hdr weak".
  get hdr_weak() {
    return new IconData(0xe3f2, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">headset</i> &#x2014; material icon named "headset".
  get headset() {
    return new IconData(0xe310, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">headset_mic</i> &#x2014; material icon named "headset mic".
  get headset_mic() {
    return new IconData(0xe311, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">headset_off</i> &#x2014; material icon named "headset off".
  get headset_off() {
    return new IconData(0xe33a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">healing</i> &#x2014; material icon named "healing".
  get healing() {
    return new IconData(0xe3f3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">hearing</i> &#x2014; material icon named "hearing".
  get hearing() {
    return new IconData(0xe023, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">help</i> &#x2014; material icon named "help".
  get help() {
    return new IconData(0xe887, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">help_outline</i> &#x2014; material icon named "help outline".
  get help_outline() {
    return new IconData(0xe8fd, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">high_quality</i> &#x2014; material icon named "high quality".
  get high_quality() {
    return new IconData(0xe024, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">highlight</i> &#x2014; material icon named "highlight".
  get highlight() {
    return new IconData(0xe25f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">highlight_off</i> &#x2014; material icon named "highlight off".
  get highlight_off() {
    return new IconData(0xe888, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">history</i> &#x2014; material icon named "history".
  get history() {
    return new IconData(0xe889, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">home</i> &#x2014; material icon named "home".
  get home() {
    return new IconData(0xe88a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">hot_tub</i> &#x2014; material icon named "hot tub".
  get hot_tub() {
    return new IconData(0xeb46, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">hotel</i> &#x2014; material icon named "hotel".
  get hotel() {
    return new IconData(0xe53a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">hourglass_empty</i> &#x2014; material icon named "hourglass empty".
  get hourglass_empty() {
    return new IconData(0xe88b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">hourglass_full</i> &#x2014; material icon named "hourglass full".
  get hourglass_full() {
    return new IconData(0xe88c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">http</i> &#x2014; material icon named "http".
  get http() {
    return new IconData(0xe902, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">https</i> &#x2014; material icon named "https".
  get https() {
    return new IconData(0xe88d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">image</i> &#x2014; material icon named "image".
  get image() {
    return new IconData(0xe3f4, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">image_aspect_ratio</i> &#x2014; material icon named "image aspect ratio".
  get image_aspect_ratio() {
    return new IconData(0xe3f5, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">import_contacts</i> &#x2014; material icon named "import contacts".
  get import_contacts() {
    return new IconData(0xe0e0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">import_export</i> &#x2014; material icon named "import export".
  get import_export() {
    return new IconData(0xe0c3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">important_devices</i> &#x2014; material icon named "important devices".
  get important_devices() {
    return new IconData(0xe912, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">inbox</i> &#x2014; material icon named "inbox".
  get inbox() {
    return new IconData(0xe156, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">indeterminate_check_box</i> &#x2014; material icon named "indeterminate check box".
  get indeterminate_check_box() {
    return new IconData(0xe909, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">info</i> &#x2014; material icon named "info".
  get info() {
    return new IconData(0xe88e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">info_outline</i> &#x2014; material icon named "info outline".
  get info_outline() {
    return new IconData(0xe88f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">input</i> &#x2014; material icon named "input".
  get input() {
    return new IconData(0xe890, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">insert_chart</i> &#x2014; material icon named "insert chart".
  get insert_chart() {
    return new IconData(0xe24b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">insert_comment</i> &#x2014; material icon named "insert comment".
  get insert_comment() {
    return new IconData(0xe24c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">insert_drive_file</i> &#x2014; material icon named "insert drive file".
  get insert_drive_file() {
    return new IconData(0xe24d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">insert_emoticon</i> &#x2014; material icon named "insert emoticon".
  get insert_emoticon() {
    return new IconData(0xe24e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">insert_invitation</i> &#x2014; material icon named "insert invitation".
  get insert_invitation() {
    return new IconData(0xe24f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">insert_link</i> &#x2014; material icon named "insert link".
  get insert_link() {
    return new IconData(0xe250, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">insert_photo</i> &#x2014; material icon named "insert photo".
  get insert_photo() {
    return new IconData(0xe251, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">invert_colors</i> &#x2014; material icon named "invert colors".
  get invert_colors() {
    return new IconData(0xe891, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">invert_colors_off</i> &#x2014; material icon named "invert colors off".
  get invert_colors_off() {
    return new IconData(0xe0c4, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">iso</i> &#x2014; material icon named "iso".
  get iso() {
    return new IconData(0xe3f6, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">keyboard</i> &#x2014; material icon named "keyboard".
  get keyboard() {
    return new IconData(0xe312, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">keyboard_arrow_down</i> &#x2014; material icon named "keyboard arrow down".
  get keyboard_arrow_down() {
    return new IconData(0xe313, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">keyboard_arrow_left</i> &#x2014; material icon named "keyboard arrow left".
  get keyboard_arrow_left() {
    return new IconData(0xe314, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">keyboard_arrow_right</i> &#x2014; material icon named "keyboard arrow right".
  get keyboard_arrow_right() {
    return new IconData(0xe315, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">keyboard_arrow_up</i> &#x2014; material icon named "keyboard arrow up".
  get keyboard_arrow_up() {
    return new IconData(0xe316, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">keyboard_backspace</i> &#x2014; material icon named "keyboard backspace".
  get keyboard_backspace() {
    return new IconData(0xe317, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">keyboard_capslock</i> &#x2014; material icon named "keyboard capslock".
  get keyboard_capslock() {
    return new IconData(0xe318, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">keyboard_hide</i> &#x2014; material icon named "keyboard hide".
  get keyboard_hide() {
    return new IconData(0xe31a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">keyboard_return</i> &#x2014; material icon named "keyboard return".
  get keyboard_return() {
    return new IconData(0xe31b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">keyboard_tab</i> &#x2014; material icon named "keyboard tab".
  get keyboard_tab() {
    return new IconData(0xe31c, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">keyboard_voice</i> &#x2014; material icon named "keyboard voice".
  get keyboard_voice() {
    return new IconData(0xe31d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">kitchen</i> &#x2014; material icon named "kitchen".
  get kitchen() {
    return new IconData(0xeb47, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">label</i> &#x2014; material icon named "label".
  get label() {
    return new IconData(0xe892, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">label_important</i> &#x2014; material icon named "label important".
  get label_important() {
    return new IconData(0xe937, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">label_outline</i> &#x2014; material icon named "label outline".
  get label_outline() {
    return new IconData(0xe893, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">landscape</i> &#x2014; material icon named "landscape".
  get landscape() {
    return new IconData(0xe3f7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">language</i> &#x2014; material icon named "language".
  get language() {
    return new IconData(0xe894, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">laptop</i> &#x2014; material icon named "laptop".
  get laptop() {
    return new IconData(0xe31e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">laptop_chromebook</i> &#x2014; material icon named "laptop chromebook".
  get laptop_chromebook() {
    return new IconData(0xe31f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">laptop_mac</i> &#x2014; material icon named "laptop mac".
  get laptop_mac() {
    return new IconData(0xe320, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">laptop_windows</i> &#x2014; material icon named "laptop windows".
  get laptop_windows() {
    return new IconData(0xe321, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">last_page</i> &#x2014; material icon named "last page".
  get last_page() {
    return new IconData(0xe5dd, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">launch</i> &#x2014; material icon named "launch".
  get launch() {
    return new IconData(0xe895, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">layers</i> &#x2014; material icon named "layers".
  get layers() {
    return new IconData(0xe53b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">layers_clear</i> &#x2014; material icon named "layers clear".
  get layers_clear() {
    return new IconData(0xe53c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">leak_add</i> &#x2014; material icon named "leak add".
  get leak_add() {
    return new IconData(0xe3f8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">leak_remove</i> &#x2014; material icon named "leak remove".
  get leak_remove() {
    return new IconData(0xe3f9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">lens</i> &#x2014; material icon named "lens".
  get lens() {
    return new IconData(0xe3fa, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">library_add</i> &#x2014; material icon named "library add".
  get library_add() {
    return new IconData(0xe02e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">library_books</i> &#x2014; material icon named "library books".
  get library_books() {
    return new IconData(0xe02f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">library_music</i> &#x2014; material icon named "library music".
  get library_music() {
    return new IconData(0xe030, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">lightbulb_outline</i> &#x2014; material icon named "lightbulb outline".
  get lightbulb_outline() {
    return new IconData(0xe90f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">line_style</i> &#x2014; material icon named "line style".
  get line_style() {
    return new IconData(0xe919, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">line_weight</i> &#x2014; material icon named "line weight".
  get line_weight() {
    return new IconData(0xe91a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">linear_scale</i> &#x2014; material icon named "linear scale".
  get linear_scale() {
    return new IconData(0xe260, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">link</i> &#x2014; material icon named "link".
  get link() {
    return new IconData(0xe157, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">link_off</i> &#x2014; material icon named "link off".
  get link_off() {
    return new IconData(0xe16f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">linked_camera</i> &#x2014; material icon named "linked camera".
  get linked_camera() {
    return new IconData(0xe438, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">list</i> &#x2014; material icon named "list".
  get list() {
    return new IconData(0xe896, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">live_help</i> &#x2014; material icon named "live help".
  get live_help() {
    return new IconData(0xe0c6, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">live_tv</i> &#x2014; material icon named "live tv".
  get live_tv() {
    return new IconData(0xe639, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_activity</i> &#x2014; material icon named "local activity".
  get local_activity() {
    return new IconData(0xe53f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_airport</i> &#x2014; material icon named "local airport".
  get local_airport() {
    return new IconData(0xe53d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_atm</i> &#x2014; material icon named "local atm".
  get local_atm() {
    return new IconData(0xe53e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_bar</i> &#x2014; material icon named "local bar".
  get local_bar() {
    return new IconData(0xe540, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_cafe</i> &#x2014; material icon named "local cafe".
  get local_cafe() {
    return new IconData(0xe541, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_car_wash</i> &#x2014; material icon named "local car wash".
  get local_car_wash() {
    return new IconData(0xe542, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_convenience_store</i> &#x2014; material icon named "local convenience store".
  get local_convenience_store() {
    return new IconData(0xe543, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_dining</i> &#x2014; material icon named "local dining".
  get local_dining() {
    return new IconData(0xe556, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_drink</i> &#x2014; material icon named "local drink".
  get local_drink() {
    return new IconData(0xe544, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_florist</i> &#x2014; material icon named "local florist".
  get local_florist() {
    return new IconData(0xe545, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_gas_station</i> &#x2014; material icon named "local gas station".
  get local_gas_station() {
    return new IconData(0xe546, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_grocery_store</i> &#x2014; material icon named "local grocery store".
  get local_grocery_store() {
    return new IconData(0xe547, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_hospital</i> &#x2014; material icon named "local hospital".
  get local_hospital() {
    return new IconData(0xe548, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_hotel</i> &#x2014; material icon named "local hotel".
  get local_hotel() {
    return new IconData(0xe549, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_laundry_service</i> &#x2014; material icon named "local laundry service".
  get local_laundry_service() {
    return new IconData(0xe54a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_library</i> &#x2014; material icon named "local library".
  get local_library() {
    return new IconData(0xe54b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_mall</i> &#x2014; material icon named "local mall".
  get local_mall() {
    return new IconData(0xe54c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_movies</i> &#x2014; material icon named "local movies".
  get local_movies() {
    return new IconData(0xe54d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_offer</i> &#x2014; material icon named "local offer".
  get local_offer() {
    return new IconData(0xe54e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_parking</i> &#x2014; material icon named "local parking".
  get local_parking() {
    return new IconData(0xe54f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_pharmacy</i> &#x2014; material icon named "local pharmacy".
  get local_pharmacy() {
    return new IconData(0xe550, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_phone</i> &#x2014; material icon named "local phone".
  get local_phone() {
    return new IconData(0xe551, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_pizza</i> &#x2014; material icon named "local pizza".
  get local_pizza() {
    return new IconData(0xe552, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_play</i> &#x2014; material icon named "local play".
  get local_play() {
    return new IconData(0xe553, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_post_office</i> &#x2014; material icon named "local post office".
  get local_post_office() {
    return new IconData(0xe554, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_printshop</i> &#x2014; material icon named "local printshop".
  get local_printshop() {
    return new IconData(0xe555, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_see</i> &#x2014; material icon named "local see".
  get local_see() {
    return new IconData(0xe557, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_shipping</i> &#x2014; material icon named "local shipping".
  get local_shipping() {
    return new IconData(0xe558, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">local_taxi</i> &#x2014; material icon named "local taxi".
  get local_taxi() {
    return new IconData(0xe559, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">location_city</i> &#x2014; material icon named "location city".
  get location_city() {
    return new IconData(0xe7f1, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">location_disabled</i> &#x2014; material icon named "location disabled".
  get location_disabled() {
    return new IconData(0xe1b6, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">location_off</i> &#x2014; material icon named "location off".
  get location_off() {
    return new IconData(0xe0c7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">location_on</i> &#x2014; material icon named "location on".
  get location_on() {
    return new IconData(0xe0c8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">location_searching</i> &#x2014; material icon named "location searching".
  get location_searching() {
    return new IconData(0xe1b7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">lock</i> &#x2014; material icon named "lock".
  get lock() {
    return new IconData(0xe897, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">lock_open</i> &#x2014; material icon named "lock open".
  get lock_open() {
    return new IconData(0xe898, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">lock_outline</i> &#x2014; material icon named "lock outline".
  get lock_outline() {
    return new IconData(0xe899, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">looks</i> &#x2014; material icon named "looks".
  get looks() {
    return new IconData(0xe3fc, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">looks_3</i> &#x2014; material icon named "looks 3".
  get looks_3() {
    return new IconData(0xe3fb, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">looks_4</i> &#x2014; material icon named "looks 4".
  get looks_4() {
    return new IconData(0xe3fd, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">looks_5</i> &#x2014; material icon named "looks 5".
  get looks_5() {
    return new IconData(0xe3fe, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">looks_6</i> &#x2014; material icon named "looks 6".
  get looks_6() {
    return new IconData(0xe3ff, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">looks_one</i> &#x2014; material icon named "looks one".
  get looks_one() {
    return new IconData(0xe400, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">looks_two</i> &#x2014; material icon named "looks two".
  get looks_two() {
    return new IconData(0xe401, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">loop</i> &#x2014; material icon named "loop".
  get loop() {
    return new IconData(0xe028, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">loupe</i> &#x2014; material icon named "loupe".
  get loupe() {
    return new IconData(0xe402, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">low_priority</i> &#x2014; material icon named "low priority".
  get low_priority() {
    return new IconData(0xe16d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">loyalty</i> &#x2014; material icon named "loyalty".
  get loyalty() {
    return new IconData(0xe89a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">mail</i> &#x2014; material icon named "mail".
  get mail() {
    return new IconData(0xe158, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">mail_outline</i> &#x2014; material icon named "mail outline".
  get mail_outline() {
    return new IconData(0xe0e1, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">map</i> &#x2014; material icon named "map".
  get map() {
    return new IconData(0xe55b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">markunread</i> &#x2014; material icon named "markunread".
  get markunread() {
    return new IconData(0xe159, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">markunread_mailbox</i> &#x2014; material icon named "markunread mailbox".
  get markunread_mailbox() {
    return new IconData(0xe89b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">maximize</i> &#x2014; material icon named "maximize".
  get maximize() {
    return new IconData(0xe930, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">memory</i> &#x2014; material icon named "memory".
  get memory() {
    return new IconData(0xe322, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">menu</i> &#x2014; material icon named "menu".
  get menu() {
    return new IconData(0xe5d2, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">merge_type</i> &#x2014; material icon named "merge type".
  get merge_type() {
    return new IconData(0xe252, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">message</i> &#x2014; material icon named "message".
  get message() {
    return new IconData(0xe0c9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">mic</i> &#x2014; material icon named "mic".
  get mic() {
    return new IconData(0xe029, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">mic_none</i> &#x2014; material icon named "mic none".
  get mic_none() {
    return new IconData(0xe02a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">mic_off</i> &#x2014; material icon named "mic off".
  get mic_off() {
    return new IconData(0xe02b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">minimize</i> &#x2014; material icon named "minimize".
  get minimize() {
    return new IconData(0xe931, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">missed_video_call</i> &#x2014; material icon named "missed video call".
  get missed_video_call() {
    return new IconData(0xe073, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">mms</i> &#x2014; material icon named "mms".
  get mms() {
    return new IconData(0xe618, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">mobile_screen_share</i> &#x2014; material icon named "mobile screen share".
  get mobile_screen_share() {
    return new IconData(0xe0e7, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">mode_comment</i> &#x2014; material icon named "mode comment".
  get mode_comment() {
    return new IconData(0xe253, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">mode_edit</i> &#x2014; material icon named "mode edit".
  get mode_edit() {
    return new IconData(0xe254, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">monetization_on</i> &#x2014; material icon named "monetization on".
  get monetization_on() {
    return new IconData(0xe263, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">money_off</i> &#x2014; material icon named "money off".
  get money_off() {
    return new IconData(0xe25c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">monochrome_photos</i> &#x2014; material icon named "monochrome photos".
  get monochrome_photos() {
    return new IconData(0xe403, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">mood</i> &#x2014; material icon named "mood".
  get mood() {
    return new IconData(0xe7f2, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">mood_bad</i> &#x2014; material icon named "mood bad".
  get mood_bad() {
    return new IconData(0xe7f3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">more</i> &#x2014; material icon named "more".
  get more() {
    return new IconData(0xe619, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">more_horiz</i> &#x2014; material icon named "more horiz".
  get more_horiz() {
    return new IconData(0xe5d3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">more_vert</i> &#x2014; material icon named "more vert".
  get more_vert() {
    return new IconData(0xe5d4, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">motorcycle</i> &#x2014; material icon named "motorcycle".
  get motorcycle() {
    return new IconData(0xe91b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">mouse</i> &#x2014; material icon named "mouse".
  get mouse() {
    return new IconData(0xe323, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">move_to_inbox</i> &#x2014; material icon named "move to inbox".
  get move_to_inbox() {
    return new IconData(0xe168, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">movie</i> &#x2014; material icon named "movie".
  get movie() {
    return new IconData(0xe02c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">movie_creation</i> &#x2014; material icon named "movie creation".
  get movie_creation() {
    return new IconData(0xe404, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">movie_filter</i> &#x2014; material icon named "movie filter".
  get movie_filter() {
    return new IconData(0xe43a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">multiline_chart</i> &#x2014; material icon named "multiline chart".
  get multiline_chart() {
    return new IconData(0xe6df, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">music_note</i> &#x2014; material icon named "music note".
  get music_note() {
    return new IconData(0xe405, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">music_video</i> &#x2014; material icon named "music video".
  get music_video() {
    return new IconData(0xe063, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">my_location</i> &#x2014; material icon named "my location".
  get my_location() {
    return new IconData(0xe55c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">nature</i> &#x2014; material icon named "nature".
  get nature() {
    return new IconData(0xe406, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">nature_people</i> &#x2014; material icon named "nature people".
  get nature_people() {
    return new IconData(0xe407, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">navigate_before</i> &#x2014; material icon named "navigate before".
  get navigate_before() {
    return new IconData(0xe408, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">navigate_next</i> &#x2014; material icon named "navigate next".
  get navigate_next() {
    return new IconData(0xe409, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">navigation</i> &#x2014; material icon named "navigation".
  get navigation() {
    return new IconData(0xe55d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">near_me</i> &#x2014; material icon named "near me".
  get near_me() {
    return new IconData(0xe569, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">network_cell</i> &#x2014; material icon named "network cell".
  get network_cell() {
    return new IconData(0xe1b9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">network_check</i> &#x2014; material icon named "network check".
  get network_check() {
    return new IconData(0xe640, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">network_locked</i> &#x2014; material icon named "network locked".
  get network_locked() {
    return new IconData(0xe61a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">network_wifi</i> &#x2014; material icon named "network wifi".
  get network_wifi() {
    return new IconData(0xe1ba, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">new_releases</i> &#x2014; material icon named "new releases".
  get new_releases() {
    return new IconData(0xe031, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">next_week</i> &#x2014; material icon named "next week".
  get next_week() {
    return new IconData(0xe16a, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">nfc</i> &#x2014; material icon named "nfc".
  get nfc() {
    return new IconData(0xe1bb, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">no_encryption</i> &#x2014; material icon named "no encryption".
  get no_encryption() {
    return new IconData(0xe641, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">no_sim</i> &#x2014; material icon named "no sim".
  get no_sim() {
    return new IconData(0xe0cc, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">not_interested</i> &#x2014; material icon named "not interested".
  get not_interested() {
    return new IconData(0xe033, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">not_listed_location</i> &#x2014; material icon named "not listed location".
  get not_listed_location() {
    return new IconData(0xe575, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">note</i> &#x2014; material icon named "note".
  get note() {
    return new IconData(0xe06f, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">note_add</i> &#x2014; material icon named "note add".
  get note_add() {
    return new IconData(0xe89c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">notification_important</i> &#x2014; material icon named "notification important".
  get notification_important() {
    return new IconData(0xe004, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">notifications</i> &#x2014; material icon named "notifications".
  get notifications() {
    return new IconData(0xe7f4, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">notifications_active</i> &#x2014; material icon named "notifications active".
  get notifications_active() {
    return new IconData(0xe7f7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">notifications_none</i> &#x2014; material icon named "notifications none".
  get notifications_none() {
    return new IconData(0xe7f5, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">notifications_off</i> &#x2014; material icon named "notifications off".
  get notifications_off() {
    return new IconData(0xe7f6, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">notifications_paused</i> &#x2014; material icon named "notifications paused".
  get notifications_paused() {
    return new IconData(0xe7f8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">offline_bolt</i> &#x2014; material icon named "offline bolt".
  get offline_bolt() {
    return new IconData(0xe932, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">offline_pin</i> &#x2014; material icon named "offline pin".
  get offline_pin() {
    return new IconData(0xe90a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">ondemand_video</i> &#x2014; material icon named "ondemand video".
  get ondemand_video() {
    return new IconData(0xe63a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">opacity</i> &#x2014; material icon named "opacity".
  get opacity() {
    return new IconData(0xe91c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">open_in_browser</i> &#x2014; material icon named "open in browser".
  get open_in_browser() {
    return new IconData(0xe89d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">open_in_new</i> &#x2014; material icon named "open in new".
  get open_in_new() {
    return new IconData(0xe89e, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">open_with</i> &#x2014; material icon named "open with".
  get open_with() {
    return new IconData(0xe89f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">outlined_flag</i> &#x2014; material icon named "outlined flag".
  get outlined_flag() {
    return new IconData(0xe16e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">pages</i> &#x2014; material icon named "pages".
  get pages() {
    return new IconData(0xe7f9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">pageview</i> &#x2014; material icon named "pageview".
  get pageview() {
    return new IconData(0xe8a0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">palette</i> &#x2014; material icon named "palette".
  get palette() {
    return new IconData(0xe40a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">pan_tool</i> &#x2014; material icon named "pan tool".
  get pan_tool() {
    return new IconData(0xe925, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">panorama</i> &#x2014; material icon named "panorama".
  get panorama() {
    return new IconData(0xe40b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">panorama_fish_eye</i> &#x2014; material icon named "panorama fish eye".
  get panorama_fish_eye() {
    return new IconData(0xe40c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">panorama_horizontal</i> &#x2014; material icon named "panorama horizontal".
  get panorama_horizontal() {
    return new IconData(0xe40d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">panorama_vertical</i> &#x2014; material icon named "panorama vertical".
  get panorama_vertical() {
    return new IconData(0xe40e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">panorama_wide_angle</i> &#x2014; material icon named "panorama wide angle".
  get panorama_wide_angle() {
    return new IconData(0xe40f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">party_mode</i> &#x2014; material icon named "party mode".
  get party_mode() {
    return new IconData(0xe7fa, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">pause</i> &#x2014; material icon named "pause".
  get pause() {
    return new IconData(0xe034, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">pause_circle_filled</i> &#x2014; material icon named "pause circle filled".
  get pause_circle_filled() {
    return new IconData(0xe035, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">pause_circle_outline</i> &#x2014; material icon named "pause circle outline".
  get pause_circle_outline() {
    return new IconData(0xe036, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">payment</i> &#x2014; material icon named "payment".
  get payment() {
    return new IconData(0xe8a1, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">people</i> &#x2014; material icon named "people".
  get people() {
    return new IconData(0xe7fb, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">people_outline</i> &#x2014; material icon named "people outline".
  get people_outline() {
    return new IconData(0xe7fc, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">perm_camera_mic</i> &#x2014; material icon named "perm camera mic".
  get perm_camera_mic() {
    return new IconData(0xe8a2, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">perm_contact_calendar</i> &#x2014; material icon named "perm contact calendar".
  get perm_contact_calendar() {
    return new IconData(0xe8a3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">perm_data_setting</i> &#x2014; material icon named "perm data setting".
  get perm_data_setting() {
    return new IconData(0xe8a4, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">perm_device_information</i> &#x2014; material icon named "perm device information".
  get perm_device_information() {
    return new IconData(0xe8a5, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">perm_identity</i> &#x2014; material icon named "perm identity".
  get perm_identity() {
    return new IconData(0xe8a6, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">perm_media</i> &#x2014; material icon named "perm media".
  get perm_media() {
    return new IconData(0xe8a7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">perm_phone_msg</i> &#x2014; material icon named "perm phone msg".
  get perm_phone_msg() {
    return new IconData(0xe8a8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">perm_scan_wifi</i> &#x2014; material icon named "perm scan wifi".
  get perm_scan_wifi() {
    return new IconData(0xe8a9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">person</i> &#x2014; material icon named "person".
  get person() {
    return new IconData(0xe7fd, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">person_add</i> &#x2014; material icon named "person add".
  get person_add() {
    return new IconData(0xe7fe, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">person_outline</i> &#x2014; material icon named "person outline".
  get person_outline() {
    return new IconData(0xe7ff, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">person_pin</i> &#x2014; material icon named "person pin".
  get person_pin() {
    return new IconData(0xe55a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">person_pin_circle</i> &#x2014; material icon named "person pin circle".
  get person_pin_circle() {
    return new IconData(0xe56a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">personal_video</i> &#x2014; material icon named "personal video".
  get personal_video() {
    return new IconData(0xe63b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">pets</i> &#x2014; material icon named "pets".
  get pets() {
    return new IconData(0xe91d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">phone</i> &#x2014; material icon named "phone".
  get phone() {
    return new IconData(0xe0cd, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">phone_android</i> &#x2014; material icon named "phone android".
  get phone_android() {
    return new IconData(0xe324, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">phone_bluetooth_speaker</i> &#x2014; material icon named "phone bluetooth speaker".
  get phone_bluetooth_speaker() {
    return new IconData(0xe61b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">phone_forwarded</i> &#x2014; material icon named "phone forwarded".
  get phone_forwarded() {
    return new IconData(0xe61c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">phone_in_talk</i> &#x2014; material icon named "phone in talk".
  get phone_in_talk() {
    return new IconData(0xe61d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">phone_iphone</i> &#x2014; material icon named "phone iphone".
  get phone_iphone() {
    return new IconData(0xe325, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">phone_locked</i> &#x2014; material icon named "phone locked".
  get phone_locked() {
    return new IconData(0xe61e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">phone_missed</i> &#x2014; material icon named "phone missed".
  get phone_missed() {
    return new IconData(0xe61f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">phone_paused</i> &#x2014; material icon named "phone paused".
  get phone_paused() {
    return new IconData(0xe620, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">phonelink</i> &#x2014; material icon named "phonelink".
  get phonelink() {
    return new IconData(0xe326, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">phonelink_erase</i> &#x2014; material icon named "phonelink erase".
  get phonelink_erase() {
    return new IconData(0xe0db, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">phonelink_lock</i> &#x2014; material icon named "phonelink lock".
  get phonelink_lock() {
    return new IconData(0xe0dc, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">phonelink_off</i> &#x2014; material icon named "phonelink off".
  get phonelink_off() {
    return new IconData(0xe327, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">phonelink_ring</i> &#x2014; material icon named "phonelink ring".
  get phonelink_ring() {
    return new IconData(0xe0dd, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">phonelink_setup</i> &#x2014; material icon named "phonelink setup".
  get phonelink_setup() {
    return new IconData(0xe0de, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">photo</i> &#x2014; material icon named "photo".
  get photo() {
    return new IconData(0xe410, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">photo_album</i> &#x2014; material icon named "photo album".
  get photo_album() {
    return new IconData(0xe411, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">photo_camera</i> &#x2014; material icon named "photo camera".
  get photo_camera() {
    return new IconData(0xe412, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">photo_filter</i> &#x2014; material icon named "photo filter".
  get photo_filter() {
    return new IconData(0xe43b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">photo_library</i> &#x2014; material icon named "photo library".
  get photo_library() {
    return new IconData(0xe413, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">photo_size_select_actual</i> &#x2014; material icon named "photo size select actual".
  get photo_size_select_actual() {
    return new IconData(0xe432, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">photo_size_select_large</i> &#x2014; material icon named "photo size select large".
  get photo_size_select_large() {
    return new IconData(0xe433, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">photo_size_select_small</i> &#x2014; material icon named "photo size select small".
  get photo_size_select_small() {
    return new IconData(0xe434, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">picture_as_pdf</i> &#x2014; material icon named "picture as pdf".
  get picture_as_pdf() {
    return new IconData(0xe415, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">picture_in_picture</i> &#x2014; material icon named "picture in picture".
  get picture_in_picture() {
    return new IconData(0xe8aa, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">picture_in_picture_alt</i> &#x2014; material icon named "picture in picture alt".
  get picture_in_picture_alt() {
    return new IconData(0xe911, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">pie_chart</i> &#x2014; material icon named "pie chart".
  get pie_chart() {
    return new IconData(0xe6c4, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">pie_chart_outlined</i> &#x2014; material icon named "pie chart outlined".
  get pie_chart_outlined() {
    return new IconData(0xe6c5, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">pin_drop</i> &#x2014; material icon named "pin drop".
  get pin_drop() {
    return new IconData(0xe55e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">place</i> &#x2014; material icon named "place".
  get place() {
    return new IconData(0xe55f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">play_arrow</i> &#x2014; material icon named "play arrow".
  get play_arrow() {
    return new IconData(0xe037, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">play_circle_filled</i> &#x2014; material icon named "play circle filled".
  get play_circle_filled() {
    return new IconData(0xe038, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">play_circle_outline</i> &#x2014; material icon named "play circle outline".
  get play_circle_outline() {
    return new IconData(0xe039, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">play_for_work</i> &#x2014; material icon named "play for work".
  get play_for_work() {
    return new IconData(0xe906, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">playlist_add</i> &#x2014; material icon named "playlist add".
  get playlist_add() {
    return new IconData(0xe03b, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">playlist_add_check</i> &#x2014; material icon named "playlist add check".
  get playlist_add_check() {
    return new IconData(0xe065, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">playlist_play</i> &#x2014; material icon named "playlist play".
  get playlist_play() {
    return new IconData(0xe05f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">plus_one</i> &#x2014; material icon named "plus one".
  get plus_one() {
    return new IconData(0xe800, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">poll</i> &#x2014; material icon named "poll".
  get poll() {
    return new IconData(0xe801, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">polymer</i> &#x2014; material icon named "polymer".
  get polymer() {
    return new IconData(0xe8ab, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">pool</i> &#x2014; material icon named "pool".
  get pool() {
    return new IconData(0xeb48, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">portable_wifi_off</i> &#x2014; material icon named "portable wifi off".
  get portable_wifi_off() {
    return new IconData(0xe0ce, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">portrait</i> &#x2014; material icon named "portrait".
  get portrait() {
    return new IconData(0xe416, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">power</i> &#x2014; material icon named "power".
  get power() {
    return new IconData(0xe63c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">power_input</i> &#x2014; material icon named "power input".
  get power_input() {
    return new IconData(0xe336, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">power_settings_new</i> &#x2014; material icon named "power settings new".
  get power_settings_new() {
    return new IconData(0xe8ac, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">pregnant_woman</i> &#x2014; material icon named "pregnant woman".
  get pregnant_woman() {
    return new IconData(0xe91e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">present_to_all</i> &#x2014; material icon named "present to all".
  get present_to_all() {
    return new IconData(0xe0df, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">print</i> &#x2014; material icon named "print".
  get print() {
    return new IconData(0xe8ad, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">priority_high</i> &#x2014; material icon named "priority high".
  get priority_high() {
    return new IconData(0xe645, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">public</i> &#x2014; material icon named "public".
  get public() {
    return new IconData(0xe80b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">publish</i> &#x2014; material icon named "publish".
  get publish() {
    return new IconData(0xe255, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">query_builder</i> &#x2014; material icon named "query builder".
  get query_builder() {
    return new IconData(0xe8ae, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">question_answer</i> &#x2014; material icon named "question answer".
  get question_answer() {
    return new IconData(0xe8af, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">queue</i> &#x2014; material icon named "queue".
  get queue() {
    return new IconData(0xe03c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">queue_music</i> &#x2014; material icon named "queue music".
  get queue_music() {
    return new IconData(0xe03d, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">queue_play_next</i> &#x2014; material icon named "queue play next".
  get queue_play_next() {
    return new IconData(0xe066, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">radio</i> &#x2014; material icon named "radio".
  get radio() {
    return new IconData(0xe03e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">radio_button_checked</i> &#x2014; material icon named "radio button checked".
  get radio_button_checked() {
    return new IconData(0xe837, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">radio_button_unchecked</i> &#x2014; material icon named "radio button unchecked".
  get radio_button_unchecked() {
    return new IconData(0xe836, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">rate_review</i> &#x2014; material icon named "rate review".
  get rate_review() {
    return new IconData(0xe560, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">receipt</i> &#x2014; material icon named "receipt".
  get receipt() {
    return new IconData(0xe8b0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">recent_actors</i> &#x2014; material icon named "recent actors".
  get recent_actors() {
    return new IconData(0xe03f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">record_voice_over</i> &#x2014; material icon named "record voice over".
  get record_voice_over() {
    return new IconData(0xe91f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">redeem</i> &#x2014; material icon named "redeem".
  get redeem() {
    return new IconData(0xe8b1, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">redo</i> &#x2014; material icon named "redo".
  get redo() {
    return new IconData(0xe15a, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">refresh</i> &#x2014; material icon named "refresh".
  get refresh() {
    return new IconData(0xe5d5, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">remove</i> &#x2014; material icon named "remove".
  get remove() {
    return new IconData(0xe15b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">remove_circle</i> &#x2014; material icon named "remove circle".
  get remove_circle() {
    return new IconData(0xe15c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">remove_circle_outline</i> &#x2014; material icon named "remove circle outline".
  get remove_circle_outline() {
    return new IconData(0xe15d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">remove_from_queue</i> &#x2014; material icon named "remove from queue".
  get remove_from_queue() {
    return new IconData(0xe067, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">remove_red_eye</i> &#x2014; material icon named "remove red eye".
  get remove_red_eye() {
    return new IconData(0xe417, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">remove_shopping_cart</i> &#x2014; material icon named "remove shopping cart".
  get remove_shopping_cart() {
    return new IconData(0xe928, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">reorder</i> &#x2014; material icon named "reorder".
  get reorder() {
    return new IconData(0xe8fe, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">repeat</i> &#x2014; material icon named "repeat".
  get repeat() {
    return new IconData(0xe040, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">repeat_one</i> &#x2014; material icon named "repeat one".
  get repeat_one() {
    return new IconData(0xe041, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">replay</i> &#x2014; material icon named "replay".
  get replay() {
    return new IconData(0xe042, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">replay_10</i> &#x2014; material icon named "replay 10".
  get replay_10() {
    return new IconData(0xe059, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">replay_30</i> &#x2014; material icon named "replay 30".
  get replay_30() {
    return new IconData(0xe05a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">replay_5</i> &#x2014; material icon named "replay 5".
  get replay_5() {
    return new IconData(0xe05b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">reply</i> &#x2014; material icon named "reply".
  get reply() {
    return new IconData(0xe15e, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">reply_all</i> &#x2014; material icon named "reply all".
  get reply_all() {
    return new IconData(0xe15f, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">report</i> &#x2014; material icon named "report".
  get report() {
    return new IconData(0xe160, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">report_off</i> &#x2014; material icon named "report off".
  get report_off() {
    return new IconData(0xe170, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">report_problem</i> &#x2014; material icon named "report problem".
  get report_problem() {
    return new IconData(0xe8b2, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">restaurant</i> &#x2014; material icon named "restaurant".
  get restaurant() {
    return new IconData(0xe56c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">restaurant_menu</i> &#x2014; material icon named "restaurant menu".
  get restaurant_menu() {
    return new IconData(0xe561, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">restore</i> &#x2014; material icon named "restore".
  get restore() {
    return new IconData(0xe8b3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">restore_from_trash</i> &#x2014; material icon named "restore from trash".
  get restore_from_trash() {
    return new IconData(0xe938, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">restore_page</i> &#x2014; material icon named "restore page".
  get restore_page() {
    return new IconData(0xe929, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">ring_volume</i> &#x2014; material icon named "ring volume".
  get ring_volume() {
    return new IconData(0xe0d1, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">room</i> &#x2014; material icon named "room".
  get room() {
    return new IconData(0xe8b4, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">room_service</i> &#x2014; material icon named "room service".
  get room_service() {
    return new IconData(0xeb49, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">rotate_90_degrees_ccw</i> &#x2014; material icon named "rotate 90 degrees ccw".
  get rotate_90_degrees_ccw() {
    return new IconData(0xe418, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">rotate_left</i> &#x2014; material icon named "rotate left".
  get rotate_left() {
    return new IconData(0xe419, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">rotate_right</i> &#x2014; material icon named "rotate right".
  get rotate_right() {
    return new IconData(0xe41a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">rounded_corner</i> &#x2014; material icon named "rounded corner".
  get rounded_corner() {
    return new IconData(0xe920, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">router</i> &#x2014; material icon named "router".
  get router() {
    return new IconData(0xe328, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">rowing</i> &#x2014; material icon named "rowing".
  get rowing() {
    return new IconData(0xe921, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">rss_feed</i> &#x2014; material icon named "rss feed".
  get rss_feed() {
    return new IconData(0xe0e5, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">rv_hookup</i> &#x2014; material icon named "rv hookup".
  get rv_hookup() {
    return new IconData(0xe642, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">satellite</i> &#x2014; material icon named "satellite".
  get satellite() {
    return new IconData(0xe562, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">save</i> &#x2014; material icon named "save".
  get save() {
    return new IconData(0xe161, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">save_alt</i> &#x2014; material icon named "save alt".
  get save_alt() {
    return new IconData(0xe171, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">scanner</i> &#x2014; material icon named "scanner".
  get scanner() {
    return new IconData(0xe329, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">scatter_plot</i> &#x2014; material icon named "scatter plot".
  get scatter_plot() {
    return new IconData(0xe268, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">schedule</i> &#x2014; material icon named "schedule".
  get schedule() {
    return new IconData(0xe8b5, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">school</i> &#x2014; material icon named "school".
  get school() {
    return new IconData(0xe80c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">score</i> &#x2014; material icon named "score".
  get score() {
    return new IconData(0xe269, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">screen_lock_landscape</i> &#x2014; material icon named "screen lock landscape".
  get screen_lock_landscape() {
    return new IconData(0xe1be, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">screen_lock_portrait</i> &#x2014; material icon named "screen lock portrait".
  get screen_lock_portrait() {
    return new IconData(0xe1bf, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">screen_lock_rotation</i> &#x2014; material icon named "screen lock rotation".
  get screen_lock_rotation() {
    return new IconData(0xe1c0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">screen_rotation</i> &#x2014; material icon named "screen rotation".
  get screen_rotation() {
    return new IconData(0xe1c1, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">screen_share</i> &#x2014; material icon named "screen share".
  get screen_share() {
    return new IconData(0xe0e2, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">sd_card</i> &#x2014; material icon named "sd card".
  get sd_card() {
    return new IconData(0xe623, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">sd_storage</i> &#x2014; material icon named "sd storage".
  get sd_storage() {
    return new IconData(0xe1c2, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">search</i> &#x2014; material icon named "search".
  get search() {
    return new IconData(0xe8b6, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">security</i> &#x2014; material icon named "security".
  get security() {
    return new IconData(0xe32a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">select_all</i> &#x2014; material icon named "select all".
  get select_all() {
    return new IconData(0xe162, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">send</i> &#x2014; material icon named "send".
  get send() {
    return new IconData(0xe163, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">sentiment_dissatisfied</i> &#x2014; material icon named "sentiment dissatisfied".
  get sentiment_dissatisfied() {
    return new IconData(0xe811, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">sentiment_neutral</i> &#x2014; material icon named "sentiment neutral".
  get sentiment_neutral() {
    return new IconData(0xe812, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">sentiment_satisfied</i> &#x2014; material icon named "sentiment satisfied".
  get sentiment_satisfied() {
    return new IconData(0xe813, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">sentiment_very_dissatisfied</i> &#x2014; material icon named "sentiment very dissatisfied".
  get sentiment_very_dissatisfied() {
    return new IconData(0xe814, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">sentiment_very_satisfied</i> &#x2014; material icon named "sentiment very satisfied".
  get sentiment_very_satisfied() {
    return new IconData(0xe815, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">settings</i> &#x2014; material icon named "settings".
  get settings() {
    return new IconData(0xe8b8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">settings_applications</i> &#x2014; material icon named "settings applications".
  get settings_applications() {
    return new IconData(0xe8b9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">settings_backup_restore</i> &#x2014; material icon named "settings backup restore".
  get settings_backup_restore() {
    return new IconData(0xe8ba, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">settings_bluetooth</i> &#x2014; material icon named "settings bluetooth".
  get settings_bluetooth() {
    return new IconData(0xe8bb, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">settings_brightness</i> &#x2014; material icon named "settings brightness".
  get settings_brightness() {
    return new IconData(0xe8bd, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">settings_cell</i> &#x2014; material icon named "settings cell".
  get settings_cell() {
    return new IconData(0xe8bc, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">settings_ethernet</i> &#x2014; material icon named "settings ethernet".
  get settings_ethernet() {
    return new IconData(0xe8be, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">settings_input_antenna</i> &#x2014; material icon named "settings input antenna".
  get settings_input_antenna() {
    return new IconData(0xe8bf, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">settings_input_component</i> &#x2014; material icon named "settings input component".
  get settings_input_component() {
    return new IconData(0xe8c0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">settings_input_composite</i> &#x2014; material icon named "settings input composite".
  get settings_input_composite() {
    return new IconData(0xe8c1, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">settings_input_hdmi</i> &#x2014; material icon named "settings input hdmi".
  get settings_input_hdmi() {
    return new IconData(0xe8c2, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">settings_input_svideo</i> &#x2014; material icon named "settings input svideo".
  get settings_input_svideo() {
    return new IconData(0xe8c3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">settings_overscan</i> &#x2014; material icon named "settings overscan".
  get settings_overscan() {
    return new IconData(0xe8c4, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">settings_phone</i> &#x2014; material icon named "settings phone".
  get settings_phone() {
    return new IconData(0xe8c5, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">settings_power</i> &#x2014; material icon named "settings power".
  get settings_power() {
    return new IconData(0xe8c6, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">settings_remote</i> &#x2014; material icon named "settings remote".
  get settings_remote() {
    return new IconData(0xe8c7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">settings_system_daydream</i> &#x2014; material icon named "settings system daydream".
  get settings_system_daydream() {
    return new IconData(0xe1c3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">settings_voice</i> &#x2014; material icon named "settings voice".
  get settings_voice() {
    return new IconData(0xe8c8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">share</i> &#x2014; material icon named "share".
  get share() {
    return new IconData(0xe80d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">shop</i> &#x2014; material icon named "shop".
  get shop() {
    return new IconData(0xe8c9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">shop_two</i> &#x2014; material icon named "shop two".
  get shop_two() {
    return new IconData(0xe8ca, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">shopping_basket</i> &#x2014; material icon named "shopping basket".
  get shopping_basket() {
    return new IconData(0xe8cb, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">shopping_cart</i> &#x2014; material icon named "shopping cart".
  get shopping_cart() {
    return new IconData(0xe8cc, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">short_text</i> &#x2014; material icon named "short text".
  get short_text() {
    return new IconData(0xe261, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">show_chart</i> &#x2014; material icon named "show chart".
  get show_chart() {
    return new IconData(0xe6e1, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">shuffle</i> &#x2014; material icon named "shuffle".
  get shuffle() {
    return new IconData(0xe043, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">shutter_speed</i> &#x2014; material icon named "shutter speed".
  get shutter_speed() {
    return new IconData(0xe43d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">signal_cellular_4_bar</i> &#x2014; material icon named "signal cellular 4 bar".
  get signal_cellular_4_bar() {
    return new IconData(0xe1c8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">signal_cellular_connected_no_internet_4_bar</i> &#x2014; material icon named "signal cellular connected no internet 4 bar".
  get signal_cellular_connected_no_internet_4_bar() {
    return new IconData(0xe1cd, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">signal_cellular_no_sim</i> &#x2014; material icon named "signal cellular no sim".
  get signal_cellular_no_sim() {
    return new IconData(0xe1ce, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">signal_cellular_null</i> &#x2014; material icon named "signal cellular null".
  get signal_cellular_null() {
    return new IconData(0xe1cf, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">signal_cellular_off</i> &#x2014; material icon named "signal cellular off".
  get signal_cellular_off() {
    return new IconData(0xe1d0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">signal_wifi_4_bar</i> &#x2014; material icon named "signal wifi 4 bar".
  get signal_wifi_4_bar() {
    return new IconData(0xe1d8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">signal_wifi_4_bar_lock</i> &#x2014; material icon named "signal wifi 4 bar lock".
  get signal_wifi_4_bar_lock() {
    return new IconData(0xe1d9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">signal_wifi_off</i> &#x2014; material icon named "signal wifi off".
  get signal_wifi_off() {
    return new IconData(0xe1da, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">sim_card</i> &#x2014; material icon named "sim card".
  get sim_card() {
    return new IconData(0xe32b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">sim_card_alert</i> &#x2014; material icon named "sim card alert".
  get sim_card_alert() {
    return new IconData(0xe624, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">skip_next</i> &#x2014; material icon named "skip next".
  get skip_next() {
    return new IconData(0xe044, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">skip_previous</i> &#x2014; material icon named "skip previous".
  get skip_previous() {
    return new IconData(0xe045, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">slideshow</i> &#x2014; material icon named "slideshow".
  get slideshow() {
    return new IconData(0xe41b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">slow_motion_video</i> &#x2014; material icon named "slow motion video".
  get slow_motion_video() {
    return new IconData(0xe068, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">smartphone</i> &#x2014; material icon named "smartphone".
  get smartphone() {
    return new IconData(0xe32c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">smoke_free</i> &#x2014; material icon named "smoke free".
  get smoke_free() {
    return new IconData(0xeb4a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">smoking_rooms</i> &#x2014; material icon named "smoking rooms".
  get smoking_rooms() {
    return new IconData(0xeb4b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">sms</i> &#x2014; material icon named "sms".
  get sms() {
    return new IconData(0xe625, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">sms_failed</i> &#x2014; material icon named "sms failed".
  get sms_failed() {
    return new IconData(0xe626, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">snooze</i> &#x2014; material icon named "snooze".
  get snooze() {
    return new IconData(0xe046, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">sort</i> &#x2014; material icon named "sort".
  get sort() {
    return new IconData(0xe164, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">sort_by_alpha</i> &#x2014; material icon named "sort by alpha".
  get sort_by_alpha() {
    return new IconData(0xe053, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">spa</i> &#x2014; material icon named "spa".
  get spa() {
    return new IconData(0xeb4c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">space_bar</i> &#x2014; material icon named "space bar".
  get space_bar() {
    return new IconData(0xe256, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">speaker</i> &#x2014; material icon named "speaker".
  get speaker() {
    return new IconData(0xe32d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">speaker_group</i> &#x2014; material icon named "speaker group".
  get speaker_group() {
    return new IconData(0xe32e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">speaker_notes</i> &#x2014; material icon named "speaker notes".
  get speaker_notes() {
    return new IconData(0xe8cd, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">speaker_notes_off</i> &#x2014; material icon named "speaker notes off".
  get speaker_notes_off() {
    return new IconData(0xe92a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">speaker_phone</i> &#x2014; material icon named "speaker phone".
  get speaker_phone() {
    return new IconData(0xe0d2, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">spellcheck</i> &#x2014; material icon named "spellcheck".
  get spellcheck() {
    return new IconData(0xe8ce, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">star</i> &#x2014; material icon named "star".
  get star() {
    return new IconData(0xe838, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">star_border</i> &#x2014; material icon named "star border".
  get star_border() {
    return new IconData(0xe83a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">star_half</i> &#x2014; material icon named "star half".
  get star_half() {
    return new IconData(0xe839, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">stars</i> &#x2014; material icon named "stars".
  get stars() {
    return new IconData(0xe8d0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">stay_current_landscape</i> &#x2014; material icon named "stay current landscape".
  get stay_current_landscape() {
    return new IconData(0xe0d3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">stay_current_portrait</i> &#x2014; material icon named "stay current portrait".
  get stay_current_portrait() {
    return new IconData(0xe0d4, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">stay_primary_landscape</i> &#x2014; material icon named "stay primary landscape".
  get stay_primary_landscape() {
    return new IconData(0xe0d5, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">stay_primary_portrait</i> &#x2014; material icon named "stay primary portrait".
  get stay_primary_portrait() {
    return new IconData(0xe0d6, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">stop</i> &#x2014; material icon named "stop".
  get stop() {
    return new IconData(0xe047, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">stop_screen_share</i> &#x2014; material icon named "stop screen share".
  get stop_screen_share() {
    return new IconData(0xe0e3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">storage</i> &#x2014; material icon named "storage".
  get storage() {
    return new IconData(0xe1db, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">store</i> &#x2014; material icon named "store".
  get store() {
    return new IconData(0xe8d1, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">store_mall_directory</i> &#x2014; material icon named "store mall directory".
  get store_mall_directory() {
    return new IconData(0xe563, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">straighten</i> &#x2014; material icon named "straighten".
  get straighten() {
    return new IconData(0xe41c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">streetview</i> &#x2014; material icon named "streetview".
  get streetview() {
    return new IconData(0xe56e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">strikethrough_s</i> &#x2014; material icon named "strikethrough s".
  get strikethrough_s() {
    return new IconData(0xe257, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">style</i> &#x2014; material icon named "style".
  get style() {
    return new IconData(0xe41d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">subdirectory_arrow_left</i> &#x2014; material icon named "subdirectory arrow left".
  get subdirectory_arrow_left() {
    return new IconData(0xe5d9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">subdirectory_arrow_right</i> &#x2014; material icon named "subdirectory arrow right".
  get subdirectory_arrow_right() {
    return new IconData(0xe5da, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">subject</i> &#x2014; material icon named "subject".
  get subject() {
    return new IconData(0xe8d2, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">subscriptions</i> &#x2014; material icon named "subscriptions".
  get subscriptions() {
    return new IconData(0xe064, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">subtitles</i> &#x2014; material icon named "subtitles".
  get subtitles() {
    return new IconData(0xe048, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">subway</i> &#x2014; material icon named "subway".
  get subway() {
    return new IconData(0xe56f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">supervised_user_circle</i> &#x2014; material icon named "supervised user circle".
  get supervised_user_circle() {
    return new IconData(0xe939, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">supervisor_account</i> &#x2014; material icon named "supervisor account".
  get supervisor_account() {
    return new IconData(0xe8d3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">surround_sound</i> &#x2014; material icon named "surround sound".
  get surround_sound() {
    return new IconData(0xe049, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">swap_calls</i> &#x2014; material icon named "swap calls".
  get swap_calls() {
    return new IconData(0xe0d7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">swap_horiz</i> &#x2014; material icon named "swap horiz".
  get swap_horiz() {
    return new IconData(0xe8d4, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">swap_horizontal_circle</i> &#x2014; material icon named "swap horizontal circle".
  get swap_horizontal_circle() {
    return new IconData(0xe933, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">swap_vert</i> &#x2014; material icon named "swap vert".
  get swap_vert() {
    return new IconData(0xe8d5, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">swap_vertical_circle</i> &#x2014; material icon named "swap vertical circle".
  get swap_vertical_circle() {
    return new IconData(0xe8d6, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">switch_camera</i> &#x2014; material icon named "switch camera".
  get switch_camera() {
    return new IconData(0xe41e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">switch_video</i> &#x2014; material icon named "switch video".
  get switch_video() {
    return new IconData(0xe41f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">sync</i> &#x2014; material icon named "sync".
  get sync() {
    return new IconData(0xe627, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">sync_disabled</i> &#x2014; material icon named "sync disabled".
  get sync_disabled() {
    return new IconData(0xe628, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">sync_problem</i> &#x2014; material icon named "sync problem".
  get sync_problem() {
    return new IconData(0xe629, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">system_update</i> &#x2014; material icon named "system update".
  get system_update() {
    return new IconData(0xe62a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">system_update_alt</i> &#x2014; material icon named "system update alt".
  get system_update_alt() {
    return new IconData(0xe8d7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">tab</i> &#x2014; material icon named "tab".
  get tab() {
    return new IconData(0xe8d8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">tab_unselected</i> &#x2014; material icon named "tab unselected".
  get tab_unselected() {
    return new IconData(0xe8d9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">table_chart</i> &#x2014; material icon named "table chart".
  get table_chart() {
    return new IconData(0xe265, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">tablet</i> &#x2014; material icon named "tablet".
  get tablet() {
    return new IconData(0xe32f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">tablet_android</i> &#x2014; material icon named "tablet android".
  get tablet_android() {
    return new IconData(0xe330, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">tablet_mac</i> &#x2014; material icon named "tablet mac".
  get tablet_mac() {
    return new IconData(0xe331, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">tag_faces</i> &#x2014; material icon named "tag faces".
  get tag_faces() {
    return new IconData(0xe420, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">tap_and_play</i> &#x2014; material icon named "tap and play".
  get tap_and_play() {
    return new IconData(0xe62b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">terrain</i> &#x2014; material icon named "terrain".
  get terrain() {
    return new IconData(0xe564, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">text_fields</i> &#x2014; material icon named "text fields".
  get text_fields() {
    return new IconData(0xe262, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">text_format</i> &#x2014; material icon named "text format".
  get text_format() {
    return new IconData(0xe165, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">text_rotate_up</i> &#x2014; material icon named "text rotate up".
  get text_rotate_up() {
    return new IconData(0xe93a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">text_rotate_vertical</i> &#x2014; material icon named "text rotate vertical".
  get text_rotate_vertical() {
    return new IconData(0xe93b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">text_rotation_angledown</i> &#x2014; material icon named "text rotation angledown".
  get text_rotation_angledown() {
    return new IconData(0xe93c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">text_rotation_angleup</i> &#x2014; material icon named "text rotation angleup".
  get text_rotation_angleup() {
    return new IconData(0xe93d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">text_rotation_down</i> &#x2014; material icon named "text rotation down".
  get text_rotation_down() {
    return new IconData(0xe93e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">text_rotation_none</i> &#x2014; material icon named "text rotation none".
  get text_rotation_none() {
    return new IconData(0xe93f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">textsms</i> &#x2014; material icon named "textsms".
  get textsms() {
    return new IconData(0xe0d8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">texture</i> &#x2014; material icon named "texture".
  get texture() {
    return new IconData(0xe421, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">theaters</i> &#x2014; material icon named "theaters".
  get theaters() {
    return new IconData(0xe8da, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">thumb_down</i> &#x2014; material icon named "thumb down".
  get thumb_down() {
    return new IconData(0xe8db, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">thumb_up</i> &#x2014; material icon named "thumb up".
  get thumb_up() {
    return new IconData(0xe8dc, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">thumbs_up_down</i> &#x2014; material icon named "thumbs up down".
  get thumbs_up_down() {
    return new IconData(0xe8dd, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">time_to_leave</i> &#x2014; material icon named "time to leave".
  get time_to_leave() {
    return new IconData(0xe62c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">timelapse</i> &#x2014; material icon named "timelapse".
  get timelapse() {
    return new IconData(0xe422, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">timeline</i> &#x2014; material icon named "timeline".
  get timeline() {
    return new IconData(0xe922, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">timer</i> &#x2014; material icon named "timer".
  get timer() {
    return new IconData(0xe425, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">timer_10</i> &#x2014; material icon named "timer 10".
  get timer_10() {
    return new IconData(0xe423, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">timer_3</i> &#x2014; material icon named "timer 3".
  get timer_3() {
    return new IconData(0xe424, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">timer_off</i> &#x2014; material icon named "timer off".
  get timer_off() {
    return new IconData(0xe426, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">title</i> &#x2014; material icon named "title".
  get title() {
    return new IconData(0xe264, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">toc</i> &#x2014; material icon named "toc".
  get toc() {
    return new IconData(0xe8de, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">today</i> &#x2014; material icon named "today".
  get today() {
    return new IconData(0xe8df, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">toll</i> &#x2014; material icon named "toll".
  get toll() {
    return new IconData(0xe8e0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">tonality</i> &#x2014; material icon named "tonality".
  get tonality() {
    return new IconData(0xe427, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">touch_app</i> &#x2014; material icon named "touch app".
  get touch_app() {
    return new IconData(0xe913, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">toys</i> &#x2014; material icon named "toys".
  get toys() {
    return new IconData(0xe332, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">track_changes</i> &#x2014; material icon named "track changes".
  get track_changes() {
    return new IconData(0xe8e1, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">traffic</i> &#x2014; material icon named "traffic".
  get traffic() {
    return new IconData(0xe565, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">train</i> &#x2014; material icon named "train".
  get train() {
    return new IconData(0xe570, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">tram</i> &#x2014; material icon named "tram".
  get tram() {
    return new IconData(0xe571, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">transfer_within_a_station</i> &#x2014; material icon named "transfer within a station".
  get transfer_within_a_station() {
    return new IconData(0xe572, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">transform</i> &#x2014; material icon named "transform".
  get transform() {
    return new IconData(0xe428, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">transit_enterexit</i> &#x2014; material icon named "transit enterexit".
  get transit_enterexit() {
    return new IconData(0xe579, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">translate</i> &#x2014; material icon named "translate".
  get translate() {
    return new IconData(0xe8e2, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">trending_down</i> &#x2014; material icon named "trending down".
  get trending_down() {
    return new IconData(0xe8e3, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">trending_flat</i> &#x2014; material icon named "trending flat".
  get trending_flat() {
    return new IconData(0xe8e4, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">trending_up</i> &#x2014; material icon named "trending up".
  get trending_up() {
    return new IconData(0xe8e5, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">trip_origin</i> &#x2014; material icon named "trip origin".
  get trip_origin() {
    return new IconData(0xe57b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">tune</i> &#x2014; material icon named "tune".
  get tune() {
    return new IconData(0xe429, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">turned_in</i> &#x2014; material icon named "turned in".
  get turned_in() {
    return new IconData(0xe8e6, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">turned_in_not</i> &#x2014; material icon named "turned in not".
  get turned_in_not() {
    return new IconData(0xe8e7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">tv</i> &#x2014; material icon named "tv".
  get tv() {
    return new IconData(0xe333, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">unarchive</i> &#x2014; material icon named "unarchive".
  get unarchive() {
    return new IconData(0xe169, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">undo</i> &#x2014; material icon named "undo".
  get undo() {
    return new IconData(0xe166, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">unfold_less</i> &#x2014; material icon named "unfold less".
  get unfold_less() {
    return new IconData(0xe5d6, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">unfold_more</i> &#x2014; material icon named "unfold more".
  get unfold_more() {
    return new IconData(0xe5d7, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">update</i> &#x2014; material icon named "update".
  get update() {
    return new IconData(0xe923, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">usb</i> &#x2014; material icon named "usb".
  get usb() {
    return new IconData(0xe1e0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">verified_user</i> &#x2014; material icon named "verified user".
  get verified_user() {
    return new IconData(0xe8e8, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">vertical_align_bottom</i> &#x2014; material icon named "vertical align bottom".
  get vertical_align_bottom() {
    return new IconData(0xe258, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">vertical_align_center</i> &#x2014; material icon named "vertical align center".
  get vertical_align_center() {
    return new IconData(0xe259, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">vertical_align_top</i> &#x2014; material icon named "vertical align top".
  get vertical_align_top() {
    return new IconData(0xe25a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">vibration</i> &#x2014; material icon named "vibration".
  get vibration() {
    return new IconData(0xe62d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">video_call</i> &#x2014; material icon named "video call".
  get video_call() {
    return new IconData(0xe070, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">video_label</i> &#x2014; material icon named "video label".
  get video_label() {
    return new IconData(0xe071, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">video_library</i> &#x2014; material icon named "video library".
  get video_library() {
    return new IconData(0xe04a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">videocam</i> &#x2014; material icon named "videocam".
  get videocam() {
    return new IconData(0xe04b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">videocam_off</i> &#x2014; material icon named "videocam off".
  get videocam_off() {
    return new IconData(0xe04c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">videogame_asset</i> &#x2014; material icon named "videogame asset".
  get videogame_asset() {
    return new IconData(0xe338, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">view_agenda</i> &#x2014; material icon named "view agenda".
  get view_agenda() {
    return new IconData(0xe8e9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">view_array</i> &#x2014; material icon named "view array".
  get view_array() {
    return new IconData(0xe8ea, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">view_carousel</i> &#x2014; material icon named "view carousel".
  get view_carousel() {
    return new IconData(0xe8eb, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">view_column</i> &#x2014; material icon named "view column".
  get view_column() {
    return new IconData(0xe8ec, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">view_comfy</i> &#x2014; material icon named "view comfy".
  get view_comfy() {
    return new IconData(0xe42a, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">view_compact</i> &#x2014; material icon named "view compact".
  get view_compact() {
    return new IconData(0xe42b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">view_day</i> &#x2014; material icon named "view day".
  get view_day() {
    return new IconData(0xe8ed, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">view_headline</i> &#x2014; material icon named "view headline".
  get view_headline() {
    return new IconData(0xe8ee, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">view_list</i> &#x2014; material icon named "view list".
  get view_list() {
    return new IconData(0xe8ef, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">view_module</i> &#x2014; material icon named "view module".
  get view_module() {
    return new IconData(0xe8f0, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">view_quilt</i> &#x2014; material icon named "view quilt".
  get view_quilt() {
    return new IconData(0xe8f1, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">view_stream</i> &#x2014; material icon named "view stream".
  get view_stream() {
    return new IconData(0xe8f2, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">view_week</i> &#x2014; material icon named "view week".
  get view_week() {
    return new IconData(0xe8f3, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">vignette</i> &#x2014; material icon named "vignette".
  get vignette() {
    return new IconData(0xe435, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">visibility</i> &#x2014; material icon named "visibility".
  get visibility() {
    return new IconData(0xe8f4, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">visibility_off</i> &#x2014; material icon named "visibility off".
  get visibility_off() {
    return new IconData(0xe8f5, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">voice_chat</i> &#x2014; material icon named "voice chat".
  get voice_chat() {
    return new IconData(0xe62e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">voicemail</i> &#x2014; material icon named "voicemail".
  get voicemail() {
    return new IconData(0xe0d9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">volume_down</i> &#x2014; material icon named "volume down".
  get volume_down() {
    return new IconData(0xe04d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">volume_mute</i> &#x2014; material icon named "volume mute".
  get volume_mute() {
    return new IconData(0xe04e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">volume_off</i> &#x2014; material icon named "volume off".
  get volume_off() {
    return new IconData(0xe04f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">volume_up</i> &#x2014; material icon named "volume up".
  get volume_up() {
    return new IconData(0xe050, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">vpn_key</i> &#x2014; material icon named "vpn key".
  get vpn_key() {
    return new IconData(0xe0da, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">vpn_lock</i> &#x2014; material icon named "vpn lock".
  get vpn_lock() {
    return new IconData(0xe62f, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">wallpaper</i> &#x2014; material icon named "wallpaper".
  get wallpaper() {
    return new IconData(0xe1bc, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">warning</i> &#x2014; material icon named "warning".
  get warning() {
    return new IconData(0xe002, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">watch</i> &#x2014; material icon named "watch".
  get watch() {
    return new IconData(0xe334, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">watch_later</i> &#x2014; material icon named "watch later".
  get watch_later() {
    return new IconData(0xe924, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">wb_auto</i> &#x2014; material icon named "wb auto".
  get wb_auto() {
    return new IconData(0xe42c, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">wb_cloudy</i> &#x2014; material icon named "wb cloudy".
  get wb_cloudy() {
    return new IconData(0xe42d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">wb_incandescent</i> &#x2014; material icon named "wb incandescent".
  get wb_incandescent() {
    return new IconData(0xe42e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">wb_iridescent</i> &#x2014; material icon named "wb iridescent".
  get wb_iridescent() {
    return new IconData(0xe436, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">wb_sunny</i> &#x2014; material icon named "wb sunny".
  get wb_sunny() {
    return new IconData(0xe430, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">wc</i> &#x2014; material icon named "wc".
  get wc() {
    return new IconData(0xe63d, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">web</i> &#x2014; material icon named "web".
  get web() {
    return new IconData(0xe051, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">web_asset</i> &#x2014; material icon named "web asset".
  get web_asset() {
    return new IconData(0xe069, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">weekend</i> &#x2014; material icon named "weekend".
  get weekend() {
    return new IconData(0xe16b, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">whatshot</i> &#x2014; material icon named "whatshot".
  get whatshot() {
    return new IconData(0xe80e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">widgets</i> &#x2014; material icon named "widgets".
  get widgets() {
    return new IconData(0xe1bd, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">wifi</i> &#x2014; material icon named "wifi".
  get wifi() {
    return new IconData(0xe63e, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">wifi_lock</i> &#x2014; material icon named "wifi lock".
  get wifi_lock() {
    return new IconData(0xe1e1, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">wifi_tethering</i> &#x2014; material icon named "wifi tethering".
  get wifi_tethering() {
    return new IconData(0xe1e2, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">work</i> &#x2014; material icon named "work".
  get work() {
    return new IconData(0xe8f9, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">wrap_text</i> &#x2014; material icon named "wrap text".
  get wrap_text() {
    return new IconData(0xe25b, { fontFamily: 'MaterialIcons', matchTextDirection: true });
  },

  /// <i class="material-icons md-36">youtube_searched_for</i> &#x2014; material icon named "youtube searched for".
  get youtube_searched_for() {
    return new IconData(0xe8fa, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">zoom_in</i> &#x2014; material icon named "zoom in".
  get zoom_in() {
    return new IconData(0xe8ff, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">zoom_out</i> &#x2014; material icon named "zoom out".
  get zoom_out() {
    return new IconData(0xe900, { fontFamily: 'MaterialIcons' });
  },

  /// <i class="material-icons md-36">zoom_out_map</i> &#x2014; material icon named "zoom out map".
  get zoom_out_map() {
    return new IconData(0xe56b, { fontFamily: 'MaterialIcons' });
  },
};

module.exports = { Icons };


/***/ }),

/***/ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_image.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_image.js ***!
  \*************************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

//  MXFlutterFramework
//  Copyright 2019 The MXFlutter Authors. All rights reserved.
//
//  Use of this source code is governed by a MIT-style license that can be
//  found in the LICENSE file.

let { DartClass, FlutterWidget } = __webpack_require__(/*! ./js_flutter_basic_types.js */ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_basic_types.js");

class AssetImage extends FlutterWidget {
  constructor({ assetName, bundle, packageJS } = {}) {
    super();

    this.assetName = assetName;
    this.bundle = bundle;
    this.package = packageJS;
  }
}

AssetImage.new = function(args) {
  return new AssetImage(args);
};

class ExactAssetImage extends FlutterWidget {
  constructor({ assetName, scale, bundle, packageJS } = {}) {
    super();

    this.assetName = assetName;
    this.scale = scale;
    this.bundle = bundle;
    this.package = packageJS;
  }
}

ExactAssetImage.new = function(args) {
  return new ExactAssetImage(args);
};

class FileImage extends FlutterWidget {
  constructor({ file, scale } = {}) {
    super();

    this.file = file;
    this.scale = scale;
  }
}

FileImage.new = function(args) {
  return new FileImage(args);
};

class MemoryImage extends FlutterWidget {
  constructor({ bytes, scale } = {}) {
    super();

    this.bytes = bytes;
    this.scale = scale;
  }
}

MemoryImage.new = function(args) {
  return new MemoryImage(args);
};

class NetworkImage extends FlutterWidget {
  constructor(url, { scale, headers } = {}) {
    super();

    this.url = url;
    this.scale = scale;
    this.headers = headers;
  }
}

NetworkImage.new = function(url, args) {
  return new NetworkImage(url, args);
};

class Image extends FlutterWidget {
  constructor({
    key,
    image,
    semanticLabel,
    excludeFromSemantics,
    width,
    height,
    color,
    colorBlendMode,
    fit,
    alignment,
    repeat,
    centerSlice,
    matchTextDirection,
    gaplessPlayback,
    filterQuality
  } = {}) {
    super();

    this.key = key;
    this.image = image;
    this.semanticLabel = semanticLabel;
    this.excludeFromSemantics = excludeFromSemantics;
    this.width = width;
    this.height = height;
    this.color = color;
    this.colorBlendMode = colorBlendMode;
    this.fit = fit;
    this.alignment = alignment;
    this.repeat = repeat;
    this.centerSlice = centerSlice;
    this.matchTextDirection = matchTextDirection;
    this.gaplessPlayback = gaplessPlayback;
    this.filterQuality = filterQuality;
  }
}

Image.new = function(args) {
  return new Image(args);
};

Image.network = function(
  src,
  {
    key,
    scale,
    semanticLabel,
    excludeFromSemantics,
    width,
    height,
    color,
    colorBlendMode,
    fit,
    alignment,
    repeat,
    centerSlice,
    matchTextDirection,
    gaplessPlayback,
    filterQuality,
    headers
  } = {}
) {
  let jsObj = new Image();
  jsObj.constructorName = "network";

  jsObj.src = src;
  jsObj.key = key;
  jsObj.scale = scale;
  jsObj.semanticLabel = semanticLabel;
  jsObj.excludeFromSemantics = excludeFromSemantics;
  jsObj.width = width;
  jsObj.height = height;
  jsObj.color = color;
  jsObj.colorBlendMode = colorBlendMode;
  jsObj.fit = fit;
  jsObj.alignment = alignment;
  jsObj.repeat = repeat;
  jsObj.centerSlice = centerSlice;
  jsObj.matchTextDirection = matchTextDirection;
  jsObj.gaplessPlayback = gaplessPlayback;
  jsObj.filterQuality = filterQuality;
  jsObj.headers = headers;
  return jsObj;
};
Image.file = function(
  file,
  {
    key,
    scale,
    semanticLabel,
    excludeFromSemantics,
    width,
    height,
    color,
    colorBlendMode,
    fit,
    alignment,
    repeat,
    centerSlice,
    matchTextDirection,
    gaplessPlayback,
    filterQuality
  } = {}
) {
  let jsObj = new Image();
  jsObj.constructorName = "file";

  jsObj.file = file;
  jsObj.key = key;
  jsObj.scale = scale;
  jsObj.semanticLabel = semanticLabel;
  jsObj.excludeFromSemantics = excludeFromSemantics;
  jsObj.width = width;
  jsObj.height = height;
  jsObj.color = color;
  jsObj.colorBlendMode = colorBlendMode;
  jsObj.fit = fit;
  jsObj.alignment = alignment;
  jsObj.repeat = repeat;
  jsObj.centerSlice = centerSlice;
  jsObj.matchTextDirection = matchTextDirection;
  jsObj.gaplessPlayback = gaplessPlayback;
  jsObj.filterQuality = filterQuality;
  return jsObj;
};
Image.asset = function(
  name,
  {
    key,
    bundle,
    semanticLabel,
    excludeFromSemantics,
    scale,
    width,
    height,
    color,
    colorBlendMode,
    fit,
    alignment,
    repeat,
    centerSlice,
    matchTextDirection,
    gaplessPlayback,
    package,
    filterQuality
  } = {}
) {
  let jsObj = new Image();
  jsObj.constructorName = "asset";

  jsObj.name = name;
  jsObj.key = key;
  jsObj.bundle = bundle;
  jsObj.semanticLabel = semanticLabel;
  jsObj.excludeFromSemantics = excludeFromSemantics;
  jsObj.scale = scale;
  jsObj.width = width;
  jsObj.height = height;
  jsObj.color = color;
  jsObj.colorBlendMode = colorBlendMode;
  jsObj.fit = fit;
  jsObj.alignment = alignment;
  jsObj.repeat = repeat;
  jsObj.centerSlice = centerSlice;
  jsObj.matchTextDirection = matchTextDirection;
  jsObj.gaplessPlayback = gaplessPlayback;
  jsObj.package = package;
  jsObj.filterQuality = filterQuality;
  return jsObj;
};
Image.memory = function(
  bytes,
  {
    key,
    scale,
    semanticLabel,
    excludeFromSemantics,
    width,
    height,
    color,
    colorBlendMode,
    fit,
    alignment,
    repeat,
    centerSlice,
    matchTextDirection,
    gaplessPlayback,
    filterQuality
  } = {}
) {
  let jsObj = new Image();
  jsObj.constructorName = "memory";

  jsObj.bytes = bytes;
  jsObj.key = key;
  jsObj.scale = scale;
  jsObj.semanticLabel = semanticLabel;
  jsObj.excludeFromSemantics = excludeFromSemantics;
  jsObj.width = width;
  jsObj.height = height;
  jsObj.color = color;
  jsObj.colorBlendMode = colorBlendMode;
  jsObj.fit = fit;
  jsObj.alignment = alignment;
  jsObj.repeat = repeat;
  jsObj.centerSlice = centerSlice;
  jsObj.matchTextDirection = matchTextDirection;
  jsObj.gaplessPlayback = gaplessPlayback;
  jsObj.filterQuality = filterQuality;
  return jsObj;
};
// ImageRepeat = {
//   repeat: "ImageRepeat.repeat",
//   repeatX: "ImageRepeat.repeatX",
//   repeatY: "ImageRepeat.repeatY",
//   noRepeat: "ImageRepeat.noRepeat"
// };

ImageRepeat = {
  repeat: { _name: "ImageRepeat.repeat", index: 0 },
  repeatX: { _name: "ImageRepeat.repeatX", index: 1 },
  repeatY: { _name: "ImageRepeat.repeatY", index: 2 },
  noRepeat: { _name: "ImageRepeat.noRepeat", index: 3 }
};

class DecorationImage extends FlutterWidget {
  constructor({
    image,
    colorFilter,
    fit,
    alignment,
    centerSlice,
    repeat,
    matchTextDirection
  } = {}) {
    super();

    this.image = image;
    this.colorFilter = colorFilter;
    this.fit = fit;
    this.alignment = alignment;
    this.centerSlice = centerSlice;
    this.repeat = repeat;
    this.matchTextDirection = matchTextDirection;
  }
}

DecorationImage.new = function(args) {
  return new DecorationImage(args);
};

module.exports = {
  AssetImage,
  ExactAssetImage,
  FileImage,
  MemoryImage,
  NetworkImage,
  Image,
  ImageRepeat,
  DecorationImage
};


/***/ }),

/***/ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_layout.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_layout.js ***!
  \**************************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

//  MXFlutterFramework
//  Copyright 2019 The MXFlutter Authors. All rights reserved.
//
//  Use of this source code is governed by a MIT-style license that can be
//  found in the LICENSE file.

const { DartClass, MXWidgetControllerLifeCycle, FlutterWidget, FlutterCallArgs } = __webpack_require__(/*! ./js_flutter_basic_types.js */ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_basic_types.js");
const { invokeFlutterFunction } = __webpack_require__(/*! ./global_context.js */ "./node_modules/@tencent/mxflutter-widgets/lib/global_context.js");

class Center extends FlutterWidget {
  constructor({ key, widthFactor, heightFactor, child } = {}) {
    super('Center');

    this.key = key;
    this.widthFactor = widthFactor;
    this.heightFactor = heightFactor;
    this.child = child;
  }
}

Center.new = function (arg) {
  return new Center(arg);
};

class Container extends FlutterWidget {
  constructor({ key, alignment, padding, color, decoration, foregroundDecoration, width, height, constraints, margin, transform, child } = {}) {
    super('Container');

    this.key = key;
    this.alignment = alignment;
    this.padding = padding;
    this.color = color;
    this.decoration = decoration;
    this.foregroundDecoration = foregroundDecoration;
    this.width = width;
    this.height = height;
    this.constraints = constraints;
    this.margin = margin;
    this.transform = transform;
    this.child = child;
  }
}

Container.new = function (arg) {
  return new Container(arg);
};

class Padding extends DartClass {
  constructor({ key, padding, child } = {}) {
    super();

    this.key = key;
    this.padding = padding;
    this.child = child;
  }
}

Padding.new = function (arg) {
  return new Padding(arg);
};

class Align extends FlutterWidget {
  constructor({ key, alignment, widthFactor, heightFactor, child } = {}) {
    super();

    this.key = key;
    this.alignment = alignment;
    this.widthFactor = widthFactor;
    this.heightFactor = heightFactor;
    this.child = child;
  }
}

Align.new = function (arg) {
  return new Align(arg);
};

class FittedBox extends FlutterWidget {
  constructor({ key, fit, alignment, child } = {}) {
    super();

    this.key = key;
    this.fit = fit;
    this.alignment = alignment;
    this.child = child;
  }
}

FittedBox.new = function (arg) {
  return new FittedBox(arg);
};

class AspectRatio extends FlutterWidget {
  constructor({ key, aspectRatio, child } = {}) {
    super();

    this.key = key;
    this.aspectRatio = aspectRatio;
    this.child = child;
  }
}

AspectRatio.new = function (arg) {
  return new AspectRatio(arg);
};

class ConstrainedBox extends FlutterWidget {
  constructor({ key, constraints, child } = {}) {
    super();

    this.key = key;
    this.constraints = constraints;
    this.child = child;
  }
}

ConstrainedBox.new = function (arg) {
  return new ConstrainedBox(arg);
};

class Baseline extends FlutterWidget {
  constructor({ key, baseline, baselineType, child } = {}) {
    super();

    this.key = key;
    this.baseline = baseline;
    this.baselineType = baselineType;
    this.child = child;
  }
}

Baseline.new = function (arg) {
  return new Baseline(arg);
};

class FractionallySizedBox extends FlutterWidget {
  constructor({ key, alignment, widthFactor, heightFactor, child } = {}) {
    super();

    this.key = key;
    this.alignment = alignment;
    this.widthFactor = widthFactor;
    this.heightFactor = heightFactor;
    this.child = child;
  }
}

FractionallySizedBox.new = function (arg) {
  return new FractionallySizedBox(arg);
};

class IntrinsicHeight extends FlutterWidget {
  constructor({ key, child } = {}) {
    super();

    this.key = key;
    this.child = child;
  }
}

IntrinsicHeight.new = function (arg) {
  return new IntrinsicHeight(arg);
};

class IntrinsicWidth extends FlutterWidget {
  constructor({ key, stepWidth, stepHeight, child } = {}) {
    super();

    this.key = key;
    this.stepWidth = stepWidth;
    this.stepHeight = stepHeight;
    this.child = child;
  }
}

IntrinsicWidth.new = function (arg) {
  return new IntrinsicWidth(arg);
};

class LimitedBox extends FlutterWidget {
  constructor({ key, maxWidth, maxHeight, child } = {}) {
    super();

    this.key = key;
    this.maxWidth = maxWidth;
    this.maxHeight = maxHeight;
    this.child = child;
  }
}

LimitedBox.new = function (arg) {
  return new LimitedBox(arg);
};

class Offstage extends FlutterWidget {
  constructor({ key, offstage, child } = {}) {
    super();

    this.key = key;
    this.offstage = offstage;
    this.child = child;
  }
}

Offstage.new = function (arg) {
  return new Offstage(arg);
};

class OverflowBox extends FlutterWidget {
  constructor({ key, alignment, minWidth, maxWidth, minHeight, maxHeight, child } = {}) {
    super();

    this.key = key;
    this.alignment = alignment;
    this.minWidth = minWidth;
    this.maxWidth = maxWidth;
    this.minHeight = minHeight;
    this.maxHeight = maxHeight;
    this.child = child;
  }
}

OverflowBox.new = function (arg) {
  return new OverflowBox(arg);
};

class SizedBox extends FlutterWidget {
  constructor({ key, width, height, child } = {}) {
    super();

    this.key = key;
    this.width = width;
    this.height = height;
    this.child = child;
  }
}

SizedBox.new = function (arg) {
  return new SizedBox(arg);
};

class SizedOverflowBox extends FlutterWidget {
  constructor({ key, size, alignment, child } = {}) {
    super();

    this.key = key;
    this.size = size;
    this.alignment = alignment;
    this.child = child;
  }
}

SizedOverflowBox.new = function (arg) {
  return new SizedOverflowBox(arg);
};

class Transform extends FlutterWidget {
  constructor({ key, transform, origin, alignment, transformHitTests, child } = {}) {
    super();

    this.key = key;
    this.transform = transform;
    this.origin = origin;
    this.alignment = alignment;
    this.transformHitTests = transformHitTests;
    this.child = child;
  }
}

Transform.new = function (arg) {
  return new Transform(arg);
};

class CustomSingleChildLayout extends FlutterWidget {
  constructor({ key, delegate, child } = {}) {
    super();

    this.key = key;
    this.delegate = delegate;
    this.child = child;
  }
}

CustomSingleChildLayout.new = function (arg) {
  return new CustomSingleChildLayout(arg);
};

class Row extends FlutterWidget {
  constructor({ key, mainAxisAlignment, mainAxisSize, crossAxisAlignment, textDirection, verticalDirection, textBaseline, children } = {}) {
    super();

    this.key = key;
    this.mainAxisAlignment = mainAxisAlignment;
    this.mainAxisSize = mainAxisSize;
    this.crossAxisAlignment = crossAxisAlignment;
    this.textDirection = textDirection;
    this.verticalDirection = verticalDirection;
    this.textBaseline = textBaseline;
    this.children = children;
  }
}

Row.new = function (arg) {
  return new Row(arg);
};

class Column extends FlutterWidget {
  constructor({ key, mainAxisAlignment, mainAxisSize, crossAxisAlignment, textDirection, verticalDirection, textBaseline, children } = {}) {
    super();

    this.key = key;
    this.mainAxisAlignment = mainAxisAlignment;
    this.mainAxisSize = mainAxisSize;
    this.crossAxisAlignment = crossAxisAlignment;
    this.textDirection = textDirection;
    this.verticalDirection = verticalDirection;
    this.textBaseline = textBaseline;
    this.children = children;
  }
}

Column.new = function (arg) {
  return new Column(arg);
};

class Stack extends FlutterWidget {
  constructor({ key, alignment, textDirection, fit, overflow, children } = {}) {
    super();

    this.key = key;
    this.alignment = alignment;
    this.textDirection = textDirection;
    this.fit = fit;
    this.overflow = overflow;
    this.children = children;
  }
}

Stack.new = function (arg) {
  return new Stack(arg);
};

class IndexedStack extends FlutterWidget {
  constructor({ key, alignment, textDirection, sizing, index, children } = {}) {
    super();

    this.key = key;
    this.alignment = alignment;
    this.textDirection = textDirection;
    this.sizing = sizing;
    this.index = index;
    this.children = children;
  }
}

IndexedStack.new = function (arg) {
  return new IndexedStack(arg);
};

class Flow extends FlutterWidget {
  constructor({ key, delegate, children } = {}) {
    super();

    this.key = key;
    this.delegate = delegate;
    this.children = children;
  }
}

Flow.new = function (arg) {
  return new Flow(arg);
};

class Table extends FlutterWidget {
  constructor({ key, children, columnWidths, defaultColumnWidth, textDirection, border, defaultVerticalAlignment, textBaseline } = {}) {
    super();

    this.key = key;
    this.children = children;

    // 单独处理columnWidths
    if (columnWidths && columnWidths._map) {
      var columnWidthsMap = columnWidths._map;
      var newMap = {};
      columnWidthsMap.forEach(function (value, key) {
        newMap[key] = value;
      });
      this.columnWidths = newMap;
    }

    this.defaultColumnWidth = defaultColumnWidth;
    this.textDirection = textDirection;
    this.border = border;
    this.defaultVerticalAlignment = defaultVerticalAlignment;
    this.textBaseline = textBaseline;
  }
}

Table.new = function (arg) {
  return new Table(arg);
};

class Wrap extends FlutterWidget {
  constructor({ key, direction, alignment, spacing, runAlignment, runSpacing, crossAxisAlignment, textDirection, verticalDirection, children } = {}) {
    super();

    this.key = key;
    this.direction = direction;
    this.alignment = alignment;
    this.spacing = spacing;
    this.runAlignment = runAlignment;
    this.runSpacing = runSpacing;
    this.crossAxisAlignment = crossAxisAlignment;
    this.textDirection = textDirection;
    this.verticalDirection = verticalDirection;
    this.children = children;
  }
}

Wrap.new = function (arg) {
  return new Wrap(arg);
};

class ListBody extends FlutterWidget {
  constructor({ key, mainAxis, reverse, children } = {}) {
    super();

    this.key = key;
    this.mainAxis = mainAxis;
    this.reverse = reverse;
    this.children = children;
  }
}

ListBody.new = function (arg) {
  return new ListBody(arg);
};

class CustomMultiChildLayout extends FlutterWidget {
  constructor({ key, delegate, children } = {}) {
    super();

    this.key = key;
    this.delegate = delegate;
    this.children = children;
  }
}

CustomMultiChildLayout.new = function (arg) {
  return new CustomMultiChildLayout(arg);
};

class ListView extends FlutterWidget {
  constructor({
    key,
    scrollDirection,
    reverse,
    controller,
    primary,
    physics,
    shrinkWrap,
    padding,
    itemExtent,
    addAutomaticKeepAlives,
    addRepaintBoundaries,
    addSemanticIndexes,
    cacheExtent,
    children,
    semanticChildCount,
  } = {}) {
    super();

    this.key = key;
    this.scrollDirection = scrollDirection;
    this.reverse = reverse;
    this.controller = controller;
    this.primary = primary;
    this.physics = physics;
    this.shrinkWrap = shrinkWrap;
    this.padding = padding;
    this.itemExtent = itemExtent;
    this.addAutomaticKeepAlives = addAutomaticKeepAlives;
    this.addRepaintBoundaries = addRepaintBoundaries;
    this.addSemanticIndexes = addSemanticIndexes;
    this.cacheExtent = cacheExtent;
    this.children = children;
    this.semanticChildCount = semanticChildCount;
  }

  preBuild(jsWidgetHelper, buildContext) {
    if (this.itemBuilder) {
      this.children = [];
      for (let i = 0; i < this.itemCount; ++i) {
        let w = this.itemBuilder(buildContext, i);
        this.children.push(w);
      }
      delete this.itemBuilder;
    }

    super.preBuild(jsWidgetHelper, buildContext);
  }
}

ListView.new = function (arg) {
  return new ListView(arg);
};

ListView.builder = function ({
  key,
  scrollDirection,
  reverse,
  controller,
  primary,
  physics,
  shrinkWrap,
  padding,
  itemExtent,
  itemBuilder,
  itemCount,
  addAutomaticKeepAlives,
  addRepaintBoundaries,
  addSemanticIndexes,
  cacheExtent,
  semanticChildCount,
  dragStartBehavior,
}) {
  let jsObj = new ListView();
  jsObj.constructorName = 'builder';

  jsObj.key = key;
  jsObj.scrollDirection = scrollDirection;
  jsObj.reverse = reverse;
  jsObj.controller = controller;
  jsObj.primary = primary;
  jsObj.physics = physics;
  jsObj.shrinkWrap = shrinkWrap;
  jsObj.padding = padding;
  jsObj.itemExtent = itemExtent;
  jsObj.itemBuilder = itemBuilder;
  jsObj.itemCount = itemCount;
  jsObj.addAutomaticKeepAlives = addAutomaticKeepAlives;
  jsObj.addRepaintBoundaries = addRepaintBoundaries;
  jsObj.addSemanticIndexes = addSemanticIndexes;
  jsObj.cacheExtent = cacheExtent;
  jsObj.semanticChildCount = semanticChildCount;
  jsObj.dragStartBehavior = dragStartBehavior;

  return jsObj;
};

class ListTile extends FlutterWidget {
  constructor({ key, leading, title, subtitle, trailing, isThreeLine, dense, contentPadding, enabled, onTap, onLongPress, selected } = {}) {
    super();

    this.key = key;
    this.leading = leading;
    this.title = title;
    this.subtitle = subtitle;
    this.trailing = trailing;
    this.isThreeLine = isThreeLine;
    this.dense = dense;
    this.contentPadding = contentPadding;
    this.enabled = enabled;
    this.onTap = onTap;
    this.onLongPress = onLongPress;
    this.selected = selected;
  }
}

ListTile.new = function (arg) {
  return new ListTile(arg);
};

class LayoutBuilder extends FlutterWidget {
  constructor({ key, builder } = {}) {
    super();

    this.key = key;
    this.builder = builder;
  }
}

LayoutBuilder.new = function (arg) {
  return new LayoutBuilder(arg);
};

class CustomScrollView extends FlutterWidget {
  constructor({
    key,
    scrollDirection,
    reverse,
    controller,
    primary,
    physics,
    shrinkWrap,
    center,
    anchor,
    cacheExtent,
    slivers,
    semanticChildCount,
    dragStartBehavior,
  } = {}) {
    super();

    this.key = key;
    this.scrollDirection = scrollDirection;
    this.reverse = reverse;
    this.controller = controller;
    this.primary = primary;
    this.physics = physics;
    this.shrinkWrap = shrinkWrap;
    this.center = center;
    this.anchor = anchor;
    this.cacheExtent = cacheExtent;
    this.slivers = slivers;
    this.semanticChildCount = semanticChildCount;
    this.dragStartBehavior = dragStartBehavior;
  }
}

CustomScrollView.new = function (arg) {
  return new CustomScrollView(arg);
};

class SliverAppBar extends FlutterWidget {
  constructor({
    key,
    leading,
    automaticallyImplyLeading,
    title,
    actions,
    flexibleSpace,
    bottom,
    elevation,
    forceElevated,
    backgroundColor,
    brightness,
    iconTheme,
    textTheme,
    primary,
    centerTitle,
    titleSpacing,
    expandedHeight,
    floating,
    pinned,
    snap,
  } = {}) {
    super();

    this.key = key;
    this.leading = leading;
    this.automaticallyImplyLeading = automaticallyImplyLeading;
    this.title = title;
    this.actions = actions;
    this.flexibleSpace = flexibleSpace;
    this.bottom = bottom;
    this.elevation = elevation;
    this.forceElevated = forceElevated;
    this.backgroundColor = backgroundColor;
    this.brightness = brightness;
    this.iconTheme = iconTheme;
    this.textTheme = textTheme;
    this.primary = primary;
    this.centerTitle = centerTitle;
    this.titleSpacing = titleSpacing;
    this.expandedHeight = expandedHeight;
    this.floating = floating;
    this.pinned = pinned;
    this.snap = snap;
  }
}

SliverAppBar.new = function (arg) {
  return new SliverAppBar(arg);
};

class SliverPadding extends FlutterWidget {
  constructor({ key, padding, sliver } = {}) {
    super();

    this.key = key;
    this.padding = padding;
    this.sliver = sliver;
  }
}

SliverPadding.new = function (arg) {
  return new SliverPadding(arg);
};

class SliverGrid extends FlutterWidget {
  constructor({ key, delegate, gridDelegate } = {}) {
    super();

    this.key = key;
    this.delegate = delegate;
    this.gridDelegate = gridDelegate;
  }
}

SliverGrid.new = function (arg) {
  return new SliverGrid(arg);
};

class SliverGridDelegateWithMaxCrossAxisExtent extends FlutterWidget {
  constructor({ maxCrossAxisExtent, mainAxisSpacing, crossAxisSpacing, childAspectRatio } = {}) {
    super();

    this.maxCrossAxisExtent = maxCrossAxisExtent;
    this.mainAxisSpacing = mainAxisSpacing;
    this.crossAxisSpacing = crossAxisSpacing;
    this.childAspectRatio = childAspectRatio;
  }
}

SliverGridDelegateWithMaxCrossAxisExtent.new = function (arg) {
  return new SliverGridDelegateWithMaxCrossAxisExtent(arg);
};

class GestureDetector extends FlutterWidget {
  constructor({
    key,
    child,
    onTapDown,
    onTapUp,
    onTap,
    onTapCancel,
    onDoubleTap,
    onLongPress,
    onLongPressUp,
    onVerticalDragDown,
    onVerticalDragStart,
    onVerticalDragUpdate,
    onVerticalDragEnd,
    onVerticalDragCancel,
    onHorizontalDragDown,
    onHorizontalDragStart,
    onHorizontalDragUpdate,
    onHorizontalDragEnd,
    onHorizontalDragCancel,
    onPanDown,
    onPanStart,
    onPanUpdate,
    onPanEnd,
    onPanCancel,
    onScaleStart,
    onScaleUpdate,
    onScaleEnd,
    behavior,
    excludeFromSemantics,
  } = {}) {
    super();

    this.key = key;
    this.child = child;
    this.onTapDown = onTapDown;
    this.onTapUp = onTapUp;
    this.onTap = onTap;
    this.onTapCancel = onTapCancel;
    this.onDoubleTap = onDoubleTap;
    this.onLongPress = onLongPress;
    this.onLongPressUp = onLongPressUp;
    this.onVerticalDragDown = onVerticalDragDown;
    this.onVerticalDragStart = onVerticalDragStart;
    this.onVerticalDragUpdate = onVerticalDragUpdate;
    this.onVerticalDragEnd = onVerticalDragEnd;
    this.onVerticalDragCancel = onVerticalDragCancel;
    this.onHorizontalDragDown = onHorizontalDragDown;
    this.onHorizontalDragStart = onHorizontalDragStart;
    this.onHorizontalDragUpdate = onHorizontalDragUpdate;
    this.onHorizontalDragEnd = onHorizontalDragEnd;
    this.onHorizontalDragCancel = onHorizontalDragCancel;
    this.onPanDown = onPanDown;
    this.onPanStart = onPanStart;
    this.onPanUpdate = onPanUpdate;
    this.onPanEnd = onPanEnd;
    this.onPanCancel = onPanCancel;
    this.onScaleStart = onScaleStart;
    this.onScaleUpdate = onScaleUpdate;
    this.onScaleEnd = onScaleEnd;
    this.behavior = behavior;
    this.excludeFromSemantics = excludeFromSemantics;
  }
}

GestureDetector.new = function (arg) {
  return new GestureDetector(arg);
};

class Expanded extends FlutterWidget {
  constructor({ key, flex, child } = {}) {
    super();

    this.key = key;
    this.flex = flex;
    this.child = child;
  }
}

Expanded.new = function (arg) {
  return new Expanded(arg);
};

class DecoratedBox extends FlutterWidget {
  constructor({ key, decoration, position, child } = {}) {
    super();

    this.key = key;
    this.decoration = decoration;
    this.position = position;
    this.child = child;
  }
}

DecoratedBox.new = function (arg) {
  return new DecoratedBox(arg);
};

class SliverList extends FlutterWidget {
  constructor({ key, delegate } = {}) {
    super();

    this.key = key;
    this.delegate = delegate;
  }
}

SliverList.new = function (arg) {
  return new SliverList(arg);
};

// HitTestBehavior = {
//   deferToChild: "HitTestBehavior.deferToChild",
//   opaque: "HitTestBehavior.opaque",
//   translucent: "HitTestBehavior.translucent"
// };

HitTestBehavior = {
  deferToChild: { _name: 'HitTestBehavior.deferToChild', index: 0 },
  opaque: { _name: 'HitTestBehavior.opaque', index: 1 },
  translucent: { _name: 'HitTestBehavior.translucent', index: 2 },
};

// DragStartBehavior = {
//   down: "DragStartBehavior.down",
//   start: "DragStartBehavior.start"
// };

DragStartBehavior = {
  down: { _name: 'DragStartBehavior.down', index: 0 },
  start: { _name: 'DragStartBehavior.start', index: 1 },
};

// DecorationPosition = {
//   background: "DecorationPosition.background",
//   foreground: "DecorationPosition.foreground"
// };
DecorationPosition = {
  background: { _name: 'DecorationPosition.background', index: 0 },
  foreground: { _name: 'DecorationPosition.foreground', index: 1 },
};

class SliverOverlapInjector extends FlutterWidget {
  constructor({ key, handle, child } = {}) {
    super();

    this.key = key;
    this.handle = handle;
    this.child = child;
  }
}

SliverOverlapInjector.new = function (arg) {
  return new SliverOverlapInjector(arg);
};

class SliverFixedExtentList extends FlutterWidget {
  constructor({ key, delegate, itemExtent } = {}) {
    super();

    this.key = key;
    this.delegate = delegate;
    this.itemExtent = itemExtent;
  }
}

SliverFixedExtentList.new = function (arg) {
  return new SliverFixedExtentList(arg);
};

class NestedScrollView extends FlutterWidget {
  constructor({ key, controller, scrollDirection, reverse, physics, headerSliverBuilder, body, dragStartBehavior } = {}) {
    super();

    this.key = key;
    this.controller = controller;
    this.scrollDirection = scrollDirection;
    this.reverse = reverse;
    this.physics = physics;
    this.headerSliverBuilder = headerSliverBuilder;
    this.body = body;
    this.dragStartBehavior = dragStartBehavior;

    // 本地创建的，供flutter使用
    this.children = [];
  }

  preBuild(jsWidgetHelper, buildContext) {
    ///TODO: innerBoxIsScrolled 暂时不支持，默认为false
    if (this.headerSliverBuilder) {
      this.children = this.headerSliverBuilder(buildContext);
      delete this.headerSliverBuilder;
    }

    super.preBuild(jsWidgetHelper, buildContext);
  }
}

NestedScrollView.new = function (arg) {
  return new NestedScrollView(arg);
};

NestedScrollView.sliverOverlapAbsorberHandleFor = function (context) {
  let v = new NestedScrollView();
  v.staticFunctionName = 'sliverOverlapAbsorberHandleFor';

  return v;
};

class SliverOverlapAbsorber extends FlutterWidget {
  constructor({ key, handle, child } = {}) {
    super();

    this.key = key;
    this.handle = handle;
    this.child = child;
  }
}

SliverOverlapAbsorber.new = function (arg) {
  return new SliverOverlapAbsorber(arg);
};

class SingleChildScrollView extends FlutterWidget {
  constructor({ key, scrollDirection, reverse, padding, primary, physics, controller, child, dragStartBehavior } = {}) {
    super();

    this.key = key;
    this.scrollDirection = scrollDirection;
    this.reverse = reverse;
    this.padding = padding;
    this.primary = primary;
    this.physics = physics;
    this.controller = controller;
    this.child = child;
    this.dragStartBehavior = dragStartBehavior;
  }
}

SingleChildScrollView.new = function (arg) {
  return new SingleChildScrollView(arg);
};

class SliverToBoxAdapter extends FlutterWidget {
  constructor({ key, child } = {}) {
    super();

    this.key = key;
    this.child = child;
  }
}

SliverToBoxAdapter.new = function (arg) {
  return new SliverToBoxAdapter(arg);
};

class TableCell extends FlutterWidget {
  constructor({ key, verticalAlignment, child } = {}) {
    super();

    this.key = key;
    this.verticalAlignment = verticalAlignment;
    this.child = child;
  }
}

TableCell.new = function (arg) {
  return new TableCell(arg);
};

//--
class ScrollController extends MXWidgetControllerLifeCycle {
  constructor({ initialScrollOffset, keepScrollOffset, debugLabel } = {}) {
    super();
    this.initialScrollOffset = initialScrollOffset;
    this.keepScrollOffset = keepScrollOffset;
    this.debugLabel = debugLabel;
  }

  animateTo(offset, { duration, curve } = {}) {
    var argument = new FlutterCallArgs({
      mirrorID: this.mirrorID,
      className: 'ScrollController',
      funcName: 'animateTo',
      args: {
        offset: offset,
        duration: duration,
        curve,
        curve,
      },
    });
    invokeFlutterFunction(argument);
  }

  jumpTo(value) {
    var argument = new FlutterCallArgs({
      mirrorID: this.mirrorID,
      className: 'ScrollController',
      funcName: 'jumpTo',
      args: {
        value: value,
      },
    });
    invokeFlutterFunction(argument);
  }
}

ScrollController.new = function (args) {
  return new ScrollController(args);
};

class ScrollPhysics extends DartClass {
  constructor({ parent } = {}) {
    super();

    this.parent = parent;
  }
}

ScrollPhysics.new = function (args) {
  return new ScrollPhysics(args);
};

class ClampingScrollPhysics extends DartClass {
  constructor({ parent } = {}) {
    super();

    this.parent = parent;
  }
}

ClampingScrollPhysics.new = function (args) {
  return new ClampingScrollPhysics(args);
};

class AlwaysScrollableScrollPhysics extends DartClass {
  constructor({ parent } = {}) {
    super();

    this.parent = parent;
  }
}

AlwaysScrollableScrollPhysics.new = function (args) {
  return new AlwaysScrollableScrollPhysics(args);
};

class NeverScrollableScrollPhysics extends DartClass {
  constructor({ parent } = {}) {
    super();

    this.parent = parent;
  }
}

NeverScrollableScrollPhysics.new = function (args) {
  return new NeverScrollableScrollPhysics(args);
};

class SliverChildBuilderDelegate extends FlutterWidget {
  constructor(builder, { childCount, addAutomaticKeepAlives, addRepaintBoundaries, addSemanticIndexes, semanticIndexCallback, semanticIndexOffset } = {}) {
    super();

    this.builder = builder;
    this.childCount = childCount;
    this.addAutomaticKeepAlives = addAutomaticKeepAlives;
    this.addRepaintBoundaries = addRepaintBoundaries;
    this.addSemanticIndexes = addSemanticIndexes;
    this.semanticIndexCallback = semanticIndexCallback;
    this.semanticIndexOffset = semanticIndexOffset;

    // 本地创建的，供flutter使用
    this.children = [];
  }

  preBuild(jsWidgetHelper, buildContext) {
    if (this.builder) {
      for (let i = 0; i < this.childCount; ++i) {
        let w = this.builder(buildContext, i);
        this.children.push(w);
      }
      delete this.builder;
    }

    super.preBuild(jsWidgetHelper, buildContext);
  }
}

SliverChildBuilderDelegate.new = function (builder, arg) {
  return new SliverChildBuilderDelegate(builder, arg);
};

class SliverChildListDelegate extends DartClass {
  constructor(children, { addAutomaticKeepAlives, addRepaintBoundaries, addSemanticIndexes, semanticIndexCallback, semanticIndexOffset } = {}) {
    super();

    this.children = children;
    this.addAutomaticKeepAlives = addAutomaticKeepAlives;
    this.addRepaintBoundaries = addRepaintBoundaries;
    this.addSemanticIndexes = addSemanticIndexes;
    this.semanticIndexCallback = semanticIndexCallback;
    this.semanticIndexOffset = semanticIndexOffset;
  }
}

SliverChildListDelegate.new = function (children, args) {
  return new SliverChildListDelegate(children, args);
};

module.exports = {
  Center,
  Container,
  Padding,
  Align,
  FittedBox,
  AspectRatio,
  ConstrainedBox,
  Baseline,
  FractionallySizedBox,
  IntrinsicHeight,
  IntrinsicWidth,
  LimitedBox,
  Offstage,
  SizedBox,
  OverflowBox,
  SizedOverflowBox,
  Transform,
  CustomSingleChildLayout,
  Row,
  Column,
  Stack,
  IndexedStack,
  Flow,
  Table,
  Wrap,
  ListBody,
  CustomMultiChildLayout,
  ListView,
  LayoutBuilder,
  ListTile,
  CustomScrollView,
  SliverAppBar,
  SliverPadding,
  SliverGrid,
  SliverGridDelegateWithMaxCrossAxisExtent,
  GestureDetector,
  Expanded,
  DecoratedBox,
  SliverList,
  HitTestBehavior,
  DragStartBehavior,
  DecorationPosition,
  SliverOverlapInjector,
  SliverFixedExtentList,
  NestedScrollView,
  SliverOverlapAbsorber,
  SingleChildScrollView,
  SliverToBoxAdapter,
  TableCell,
  ScrollController,
  ScrollPhysics,
  ClampingScrollPhysics,
  AlwaysScrollableScrollPhysics,
  NeverScrollableScrollPhysics,
  SliverChildBuilderDelegate,
  SliverChildListDelegate,
};


/***/ }),

/***/ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_material.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_material.js ***!
  \****************************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

//  MXFlutterFramework
//  Copyright 2019 The MXFlutter Authors. All rights reserved.
//
//  Use of this source code is governed by a MIT-style license that can be
//  found in the LICENSE file.

const { DartClass, FlutterWidget, Color } = __webpack_require__(/*! ./js_flutter_basic_types.js */ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_basic_types.js");
const { Duration, Curves } = __webpack_require__(/*! ./js_flutter_animation.js */ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_animation.js");

class MaterialApp extends FlutterWidget {
  constructor({
    key,
    navigatorKey,
    home,
    routes,
    initialRoute,
    onGenerateRoute,
    onUnknownRoute,
    navigatorObservers,
    builder,
    title,
    onGenerateTitle,
    color,
    theme,
    locale,
    localizationsDelegates,
    localeListResolutionCallback,
    localeResolutionCallback,
    supportedLocales,
    debugShowMaterialGrid,
    showPerformanceOverlay,
    checkerboardRasterCacheImages,
    checkerboardOffscreenLayers,
    showSemanticsDebugger,
    debugShowCheckedModeBanner,
  } = {}) {
    super('MaterialApp');

    this.key = key;
    this.navigatorKey = navigatorKey;
    this.home = home;
    this.routes = routes;
    this.initialRoute = initialRoute;
    this.onGenerateRoute = onGenerateRoute;
    this.onUnknownRoute = onUnknownRoute;
    this.navigatorObservers = navigatorObservers;
    this.builder = builder;
    this.title = title;
    this.onGenerateTitle = onGenerateTitle;
    this.color = color;
    this.theme = theme;
    this.locale = locale;
    this.localizationsDelegates = localizationsDelegates;
    this.localeListResolutionCallback = localeListResolutionCallback;
    this.localeResolutionCallback = localeResolutionCallback;
    this.supportedLocales = supportedLocales;
    this.debugShowMaterialGrid = routes;
    this.showPerformanceOverlay = debugShowMaterialGrid;
    this.checkerboardRasterCacheImages = checkerboardRasterCacheImages;
    this.checkerboardOffscreenLayers = checkerboardOffscreenLayers;
    this.showSemanticsDebugger = showSemanticsDebugger;
    this.debugShowCheckedModeBanner = debugShowCheckedModeBanner;
  }
}

MaterialApp.new = function (arg) {
  return new MaterialApp(arg);
};

class Material extends FlutterWidget {
  constructor({ key, type, elevation, color, shadowColor, textStyle, borderRadius, shape, borderOnForeground, clipBehavior, animationDuration, child } = {}) {
    super();

    this.key = key;
    this.type = type;
    this.elevation = elevation;
    this.color = color;
    this.shadowColor = shadowColor;
    this.textStyle = textStyle;
    this.borderRadius = borderRadius;
    this.shape = shape;
    this.borderOnForeground = borderOnForeground;
    this.clipBehavior = clipBehavior;
    this.animationDuration = animationDuration;
    this.child = child;
  }
}
Material.new = function (arg) {
  return new Material(arg);
};

class Scaffold extends FlutterWidget {
  constructor({
    key,
    appBar,
    body,
    floatingActionButton,
    floatingActionButtonLocation,
    floatingActionButtonAnimator,
    persistentFooterButtons,
    drawer,
    endDrawer,
    bottomNavigationBar,
    bottomSheet,
    backgroundColor,
    resizeToAvoidBottomPadding,
    primary,
  } = {}) {
    super('Scaffold');

    this.key = key;
    this.appBar = appBar;
    this.body = body;
    this.floatingActionButton = floatingActionButton;
    this.floatingActionButtonLocation = floatingActionButtonLocation;
    this.floatingActionButtonAnimator = floatingActionButtonAnimator;
    this.persistentFooterButtons = persistentFooterButtons;
    this.drawer = drawer;
    this.endDrawer = endDrawer;
    this.bottomNavigationBar = bottomNavigationBar;
    this.bottomSheet = bottomSheet;
    this.backgroundColor = backgroundColor;
    this.resizeToAvoidBottomPadding = resizeToAvoidBottomPadding;
    this.primary = primary;
  }

  // FIXME,github mergegithub merge
  // static of(context) {
  //   return {
  //     showSnackBar: function (snackBar) {
  //       //准备调用Native方法执行真正的 showSnackBar动作
  //       //1.把这里的context和snackBar数据传递到native层 ✔️
  //       //2.通过context找到Native里的 Scaffold.of(context) ？
  //       //3.解析snackBar为真snackBar对象 ✔️
  //       //4.执行调用
  //       MXJSLog.log('showSnackBar in js call native-->');
  //       let argument = new FlutterCallArgs({
  //         widgetID: context.widgetID,
  //         className: 'Scaffold',
  //         funcName: 'of',
  //         args: {
  //           snackBar: snackBar,
  //         },
  //       });
  //       invokeCommonFlutterFunction(argument);
  //     },
  //     openDrawer: function () {
  //       MXJSLog.log('openDrawer---in js---to call native-->');
  //     },
  //   };
  // }
}

Scaffold.new = function (arg) {
  return new Scaffold(arg);
};

class ScaffoldState extends DartClass {
  constructor({} = {}) {
    super('ScaffoldState');
  }
}

ScaffoldState.new = function (arg) {
  return new ScaffoldState(arg);
};

class AppBar extends FlutterWidget {
  constructor({
    key,
    leading,
    automaticallyImplyLeading,
    title,
    actions,
    flexibleSpace,
    bottom,
    elevation,
    backgroundColor,
    brightness,
    iconTheme,
    textTheme,
    primary,
    centerTitle,
    titleSpacing,
    toolbarOpacity,
    bottomOpacity,
  } = {}) {
    super();

    this.key = key;
    this.leading = leading;
    this.automaticallyImplyLeading = automaticallyImplyLeading;
    this.title = title;
    this.actions = actions;
    this.flexibleSpace = flexibleSpace;
    this.bottom = bottom;
    this.elevation = elevation;
    this.backgroundColor = backgroundColor;
    this.brightness = brightness;
    this.iconTheme = iconTheme;
    this.textTheme = textTheme;
    this.primary = primary;
    this.centerTitle = centerTitle;
    this.titleSpacing = titleSpacing;
    this.toolbarOpacity = toolbarOpacity;
    this.bottomOpacity = bottomOpacity;
  }
}

AppBar.new = function (arg) {
  return new AppBar(arg);
};

class FlatButton extends FlutterWidget {
  constructor({
    key,
    onPressed,
    onHighlightChanged,
    textTheme,
    textColor,
    disabledTextColor,
    color,
    disabledColor,
    highlightColor,
    splashColor,
    colorBrightness,
    padding,
    shape,
    clipBehavior,
    materialTapTargetSize,
    child,
  } = {}) {
    super();

    this.key = key;
    this.onPressed = onPressed;
    this.onHighlightChanged = onHighlightChanged;
    this.textTheme = textTheme;
    this.textColor = textColor;
    this.disabledTextColor = disabledTextColor;
    this.color = color;
    this.disabledColor = disabledColor;
    this.highlightColor = highlightColor;
    this.splashColor = splashColor;
    this.colorBrightness = colorBrightness;
    this.padding = padding;
    this.shape = shape;
    this.clipBehavior = clipBehavior;
    this.materialTapTargetSize = materialTapTargetSize;
    this.child = child;
  }
}

FlatButton.new = function (arg) {
  return new FlatButton(arg);
};

FlatButton.icon = function ({
  key,
  onPressed,
  onHighlightChanged,
  textTheme,
  textColor,
  disabledTextColor,
  color,
  disabledColor,
  highlightColor,
  splashColor,
  colorBrightness,
  padding,
  shape,
  clipBehavior,
  materialTapTargetSize,
  icon,
  label,
}) {
  let v = new FlatButton();
  v.staticFunctionName = 'icon';

  v.key = key;
  v.onPressed = onPressed;
  v.onHighlightChanged = onHighlightChanged;
  v.textTheme = textTheme;
  v.textColor = textColor;
  v.disabledTextColor = disabledTextColor;
  v.color = color;
  v.disabledColor = disabledColor;
  v.highlightColor = highlightColor;
  v.splashColor = splashColor;
  v.colorBrightness = colorBrightness;
  v.padding = padding;
  v.shape = shape;
  v.clipBehavior = clipBehavior;
  v.materialTapTargetSize = materialTapTargetSize;
  v.icon = icon;
  v.label = label;

  return v;
};

class FlatButtonWithIcon extends FlatButton {
  constructor({
    key,
    onPressed,
    onHighlightChanged,
    textTheme,
    textColor,
    disabledTextColor,
    color,
    disabledColor,
    highlightColor,
    splashColor,
    colorBrightness,
    padding,
    shape,
    clipBehavior,
    materialTapTargetSize,
    icon,
    label,
  } = {}) {
    super();

    this.className = 'FlatButton';
    this.staticFunctionName = 'icon';

    this.key = key;
    this.onPressed = onPressed;
    this.onHighlightChanged = onHighlightChanged;
    this.textTheme = textTheme;
    this.textColor = textColor;
    this.disabledTextColor = disabledTextColor;
    this.color = color;
    this.disabledColor = disabledColor;
    this.highlightColor = highlightColor;
    this.splashColor = splashColor;
    this.colorBrightness = colorBrightness;
    this.padding = padding;
    this.shape = shape;
    this.clipBehavior = clipBehavior;
    this.materialTapTargetSize = materialTapTargetSize;
    this.icon = icon;
    this.label = label;
  }
}

FlatButtonWithIcon.new = function (arg) {
  return new FlatButtonWithIcon(arg);
};

class RaisedButton extends FlutterWidget {
  constructor({
    key,
    onPressed,
    onHighlightChanged,
    textTheme,
    textColor,
    disabledTextColor,
    color,
    disabledColor,
    highlightColor,
    splashColor,
    colorBrightness,
    elevation,
    highlightElevation,
    disabledElevation,
    padding,
    shape,
    clipBehavior,
    materialTapTargetSize,
    animationDuration,
    child,
  } = {}) {
    super();

    this.key = key;
    this.onPressed = onPressed;
    this.onHighlightChanged = onHighlightChanged;
    this.textTheme = textTheme;
    this.textColor = textColor;
    this.disabledTextColor = disabledTextColor;
    this.color = color;
    this.disabledColor = disabledColor;
    this.highlightColor = highlightColor;
    this.splashColor = splashColor;
    this.colorBrightness = colorBrightness;
    this.elevation = elevation;
    this.highlightElevation = highlightElevation;
    this.disabledElevation = disabledElevation;
    this.padding = padding;
    this.shape = shape;
    this.clipBehavior = clipBehavior;
    this.materialTapTargetSize = materialTapTargetSize;
    this.animationDuration = animationDuration;
    this.child = child;
  }
}

RaisedButton.new = function (arg) {
  return new RaisedButton(arg);
};
RaisedButton.icon = function ({
  key,
  onPressed,
  onHighlightChanged,
  textTheme,
  textColor,
  disabledTextColor,
  color,
  disabledColor,
  highlightColor,
  splashColor,
  colorBrightness,
  elevation,
  highlightElevation,
  disabledElevation,
  shape,
  clipBehavior,
  materialTapTargetSize,
  animationDuration,
  icon,
  label,
}) {
  let v = new RaisedButton();
  v.staticFunctionName = 'icon';

  v.key = key;
  v.onPressed = onPressed;
  v.onHighlightChanged = onHighlightChanged;
  v.textTheme = textTheme;
  v.textColor = textColor;
  v.disabledTextColor = disabledTextColor;
  v.color = color;
  v.disabledColor = disabledColor;
  v.highlightColor = highlightColor;
  v.splashColor = splashColor;
  v.colorBrightness = colorBrightness;
  v.elevation = elevation;
  v.highlightElevation = highlightElevation;
  v.disabledElevation = disabledElevation;
  v.shape = shape;
  v.clipBehavior = clipBehavior;
  v.materialTapTargetSize = materialTapTargetSize;
  v.animationDuration = animationDuration;
  v.icon = icon;
  v.label = label;

  return v;
};

class RaisedButtonWithIcon extends FlatButton {
  constructor({
    key,
    onPressed,
    onHighlightChanged,
    textTheme,
    textColor,
    disabledTextColor,
    color,
    disabledColor,
    highlightColor,
    splashColor,
    colorBrightness,
    elevation,
    highlightElevation,
    disabledElevation,
    shape,
    clipBehavior,
    materialTapTargetSize,
    animationDuration,
    icon,
    label,
  } = {}) {
    super();

    this.className = 'RaisedButton';
    this.staticFunctionName = 'icon';

    this.key = key;
    this.onPressed = onPressed;
    this.onHighlightChanged = onHighlightChanged;
    this.textTheme = textTheme;
    this.textColor = textColor;
    this.disabledTextColor = disabledTextColor;
    this.color = color;
    this.disabledColor = disabledColor;
    this.highlightColor = highlightColor;
    this.splashColor = splashColor;
    this.colorBrightness = colorBrightness;
    this.elevation = elevation;
    this.highlightElevation = highlightElevation;
    this.disabledElevation = disabledElevation;
    this.shape = shape;
    this.clipBehavior = clipBehavior;
    this.materialTapTargetSize = materialTapTargetSize;
    this.animationDuration = animationDuration;
    this.icon = icon;
    this.label = label;
  }
}

class FloatingActionButton extends FlutterWidget {
  constructor({
    key,
    child,
    tooltip,
    foregroundColor,
    backgroundColor,
    heroTag,
    elevation,
    highlightElevation,
    onPressed,
    mini,
    shape,
    clipBehavior,
    materialTapTargetSize,
    isExtended,
  } = {}) {
    super();

    this.key = key;
    this.child = child;
    this.tooltip = tooltip;
    this.foregroundColor = foregroundColor;
    this.backgroundColor = backgroundColor;
    this.heroTag = heroTag;
    this.elevation = elevation;
    this.highlightElevation = highlightElevation;
    this.onPressed = onPressed;
    this.mini = mini;
    this.shape = shape;
    this.clipBehavior = clipBehavior;
    this.materialTapTargetSize = materialTapTargetSize;
    this.isExtended = isExtended;
  }
}

FloatingActionButton.new = function (arg) {
  return new FloatingActionButton(arg);
};

class IconButton extends FlutterWidget {
  constructor({ key, iconSize, padding, alignment, icon, color, highlightColor, splashColor, disabledColor, onPressed, tooltip } = {}) {
    super();

    this.key = key;
    this.iconSize = iconSize;
    this.padding = padding;
    this.alignment = alignment;
    this.icon = icon;
    this.color = color;
    this.highlightColor = highlightColor;
    this.splashColor = splashColor;
    this.disabledColor = disabledColor;
    this.onPressed = onPressed;
    this.tooltip = tooltip;
  }
}

IconButton.new = function (arg) {
  return new IconButton(arg);
};

class DropdownButton extends FlutterWidget {
  constructor({ key, items, value, hint, disabledHint, onChanged, elevation, style, iconSize, isDense, isExpanded } = {}) {
    super();

    this.key = key;
    this.items = items;
    this.value = value;
    this.hint = hint;
    this.disabledHint = disabledHint;
    this.onChanged = onChanged;
    this.elevation = elevation;
    this.style = style;
    this.iconSize = iconSize;
    this.isDense = isDense;
    this.isExpanded = isExpanded;
  }
}

DropdownButton.new = function (arg) {
  return new DropdownButton(arg);
};

class PopupMenuButton extends FlutterWidget {
  constructor({ key, itemBuilder, initialValue, onSelected, onCanceled, tooltip, elevation, padding, child, icon, offset } = {}) {
    super();

    this.key = key;
    this.itemBuilder = itemBuilder;
    this.initialValue = initialValue;
    this.onSelected = onSelected;
    this.onCanceled = onCanceled;
    this.tooltip = tooltip;
    this.elevation = elevation;
    this.padding = padding;
    this.child = child;
    this.icon = icon;
    this.offset = offset;

    // 本地创建的，供flutter使用
    this.children = [];
  }

  //在生成json前调用
  //用于list delegate 等的items build
  //用于 widget 有类似 onTab 等响应函数变量，在此转换成 callback id,
  //但注意，delegate 中确实需要 function ,不需要转ID的，不要调用super.preBuild
  preBuild(jsWidgetHelper, buildContext) {
    //先把调用函数
    if (this.itemBuilder) {
      this.children = this.itemBuilder(buildContext);
      delete this.itemBuilder;
    }

    //function 转 id
    super.preBuild(jsWidgetHelper, buildContext);
  }
}

PopupMenuButton.new = function (arg) {
  return new PopupMenuButton(arg);
};

class ButtonBar extends FlutterWidget {
  constructor({ key, alignment, mainAxisSize, children } = {}) {
    super();

    this.key = key;
    this.alignment = alignment;
    this.mainAxisSize = mainAxisSize;
    this.children = children;
  }
}

ButtonBar.new = function (arg) {
  return new ButtonBar(arg);
};

class Icon extends FlutterWidget {
  constructor(icon, { key, size, color, semanticLabel, textDirection } = {}) {
    super();

    this.icon = icon;
    this.key = key;
    this.size = size;
    this.color = color;
    this.semanticLabel = semanticLabel;
    this.textDirection = textDirection;
  }
}

Icon.new = function (arg1, arg2) {
  return new Icon(arg1, arg2);
};

class Hero extends FlutterWidget {
  constructor({ key, tag, createRectTween, flightShuttleBuilder, placeholderBuilder, transitionOnUserGestures, child } = {}) {
    super();

    this.key = key;
    this.tag = tag;
    this.createRectTween = createRectTween;
    this.flightShuttleBuilder = flightShuttleBuilder;
    this.placeholderBuilder = placeholderBuilder;
    this.transitionOnUserGestures = transitionOnUserGestures;
    this.child = child;
  }
}

Hero.new = function (arg) {
  return new Hero(arg);
};

class Card extends FlutterWidget {
  constructor({ key, color, elevation, shape, margin, clipBehavior, child, semanticContainer } = {}) {
    super();

    this.key = key;
    this.color = color;
    this.elevation = elevation;
    this.shape = shape;
    this.margin = margin;
    this.clipBehavior = clipBehavior;
    this.child = child;
    this.semanticContainer = semanticContainer;
  }
}

Card.new = function (arg) {
  return new Card(arg);
};

class MergeSemantics extends FlutterWidget {
  constructor({ key, child } = {}) {
    super();

    this.key = key;
    this.child = child;
  }
}

MergeSemantics.new = function (arg) {
  return new MergeSemantics(arg);
};

class PopupMenuItem extends FlutterWidget {
  constructor({ key, value, enabled, height, child } = {}) {
    super();

    this.key = key;
    this.value = value;
    this.enabled = enabled;
    this.height = height;
    this.child = child;
  }
}

PopupMenuItem.new = function (arg) {
  return new PopupMenuItem(arg);
};

class FlexibleSpaceBar extends FlutterWidget {
  constructor({ key, title, background, centerTitle, collapseMode } = {}) {
    super();

    this.key = key;
    this.title = title;
    this.background = background;
    this.centerTitle = centerTitle;
    this.collapseMode = collapseMode;
  }
}

FlexibleSpaceBar.new = function (arg) {
  return new FlexibleSpaceBar(arg);
};

class BottomAppBar extends FlutterWidget {
  constructor({ key, color, elevation, shape, clipBehavior, notchMargin, child } = {}) {
    super();

    this.key = key;
    this.color = color;
    this.elevation = elevation;
    this.shape = shape;
    this.clipBehavior = clipBehavior;
    this.notchMargin = notchMargin;
    this.child = child;
  }
}

BottomAppBar.new = function (arg) {
  return new BottomAppBar(arg);
};

class BottomNavigationBar extends FlutterWidget {
  constructor({ key, items, onTap, currentIndex, type, fixedColor, iconSize } = {}) {
    super();

    this.key = key;
    this.items = items;
    this.onTap = onTap;
    this.currentIndex = currentIndex;
    this.type = type;
    this.fixedColor = fixedColor;
    this.iconSize = iconSize;
  }
}

BottomNavigationBar.new = function (arg) {
  return new BottomNavigationBar(arg);
};

class Radio extends FlutterWidget {
  constructor({ key, value, groupValue, onChanged, activeColor, materialTapTargetSize } = {}) {
    super();

    this.key = key;
    this.value = value;
    this.groupValue = groupValue;
    this.onChanged = onChanged;
    this.activeColor = activeColor;
    this.materialTapTargetSize = materialTapTargetSize;
  }
}

Radio.new = function (arg) {
  return new Radio(arg);
};

class Semantics extends FlutterWidget {
  constructor({
    key,
    child,
    container,
    explicitChildNodes,
    excludeSemantics,
    enabled,
    checked,
    selected,
    toggled,
    button,
    header,
    textField,
    focused,
    inMutuallyExclusiveGroup,
    obscured,
    scopesRoute,
    namesRoute,
    hidden,
    image,
    liveRegion,
    label,
    value,
    increasedValue,
    decreasedValue,
    hint,
    onTapHint,
    onLongPressHint,
    textDirection,
    sortKey,
    onTap,
    onLongPress,
    onScrollLeft,
    onScrollRight,
    onScrollUp,
    onScrollDown,
    onIncrease,
    onDecrease,
    onCopy,
    onCut,
    onPaste,
    onDismiss,
    onMoveCursorForwardByCharacter,
    onMoveCursorBackwardByCharacter,
    onSetSelection,
    onDidGainAccessibilityFocus,
    onDidLoseAccessibilityFocus,
    customSemanticsActions,
  } = {}) {
    super();

    this.key = key;
    this.child = child;
    this.container = container;
    this.explicitChildNodes = explicitChildNodes;
    this.excludeSemantics = excludeSemantics;
    this.enabled = enabled;
    this.checked = checked;
    this.selected = selected;
    this.toggled = toggled;
    this.button = button;
    this.header = header;
    this.textField = textField;
    this.focused = focused;
    this.inMutuallyExclusiveGroup = inMutuallyExclusiveGroup;
    this.obscured = obscured;
    this.scopesRoute = scopesRoute;
    this.namesRoute = namesRoute;
    this.hidden = hidden;
    this.image = image;
    this.liveRegion = liveRegion;
    this.label = label;
    this.value = value;
    this.increasedValue = increasedValue;
    this.decreasedValue = decreasedValue;
    this.hint = hint;
    this.onTapHint = onTapHint;
    this.onLongPressHint = onLongPressHint;
    this.textDirection = textDirection;
    this.sortKey = sortKey;
    this.onTap = onTap;
    this.onLongPress = onLongPress;
    this.onScrollLeft = onScrollLeft;
    this.onScrollRight = onScrollRight;
    this.onScrollUp = onScrollUp;
    this.onScrollDown = onScrollDown;
    this.onIncrease = onIncrease;
    this.onDecrease = onDecrease;
    this.onCopy = onCopy;
    this.onCut = onCut;
    this.onPaste = onPaste;
    this.onDismiss = onDismiss;
    this.onMoveCursorForwardByCharacter = onMoveCursorForwardByCharacter;
    this.onMoveCursorBackwardByCharacter = onMoveCursorBackwardByCharacter;
    this.onSetSelection = onSetSelection;
    this.onDidGainAccessibilityFocus = onDidGainAccessibilityFocus;
    this.onDidLoseAccessibilityFocus = onDidLoseAccessibilityFocus;
    this.customSemanticsActions = customSemanticsActions;
  }
}

Semantics.new = function (arg) {
  return new Semantics(arg);
};

class RawMaterialButton extends FlutterWidget {
  constructor({
    key,
    onPressed,
    onHighlightChanged,
    textStyle,
    fillColor,
    highlightColor,
    splashColor,
    elevation,
    highlightElevation,
    disabledElevation,
    padding,
    constraints,
    shape,
    animationDuration,
    clipBehavior,
    materialTapTargetSize,
    child,
  } = {}) {
    super();

    this.key = key;
    this.onPressed = onPressed;
    this.onHighlightChanged = onHighlightChanged;
    this.textStyle = textStyle;
    this.fillColor = fillColor;
    this.highlightColor = highlightColor;
    this.splashColor = splashColor;
    this.elevation = elevation;
    this.highlightElevation = highlightElevation;
    this.disabledElevation = disabledElevation;
    this.padding = padding;
    this.constraints = constraints;
    this.shape = shape;
    this.animationDuration = animationDuration;
    this.clipBehavior = clipBehavior;
    this.materialTapTargetSize = materialTapTargetSize;
    this.child = child;
  }
}

RawMaterialButton.new = function (arg) {
  return new RawMaterialButton(arg);
};

class CircleBorder extends FlutterWidget {
  constructor({ side } = {}) {
    super();

    this.side = side;
  }
}

CircleBorder.new = function (arg) {
  return new CircleBorder(arg);
};

class SafeArea extends FlutterWidget {
  constructor({ key, left, top, right, bottom, minimum, child } = {}) {
    super();

    this.key = key;
    this.left = left;
    this.top = top;
    this.right = right;
    this.bottom = bottom;
    this.minimum = minimum;
    this.child = child;
  }
}

SafeArea.new = function (arg) {
  return new SafeArea(arg);
};

// MaterialTapTargetSize = {
//   padded: "MaterialTapTargetSize.padded",
//   shrinkWrap: "MaterialTapTargetSize.shrinkWrap"
// };

MaterialTapTargetSize = {
  padded: { _name: 'MaterialTapTargetSize.padded', index: 0 },
  shrinkWrap: { _name: 'MaterialTapTargetSize.shrinkWrap', index: 1 },
};

class Builder extends FlutterWidget {
  constructor({ key, builder } = {}) {
    super();

    this.key = key;
    this.builder = builder;

    // 本地创建的，供flutter使用
    this.child = null;
  }

  preBuild(jsWidgetHelper, buildContext) {
    if (this.builder) {
      this.child = this.builder(buildContext);
      delete this.builder;
    }

    super.preBuild(jsWidgetHelper, buildContext);
  }
}

Builder.new = function (arg) {
  return new Builder(arg);
};

class DefaultTabController extends FlutterWidget {
  constructor({ key, length, initialIndex, child } = {}) {
    super();

    this.key = key;
    this.length = length;
    this.initialIndex = initialIndex;
    this.child = child;
  }
}

DefaultTabController.new = function (arg) {
  return new DefaultTabController(arg);
};

class TabBar extends FlutterWidget {
  constructor({
    key,
    tabs,
    controller,
    isScrollable,
    indicatorColor,
    indicatorWeight,
    indicatorPadding,
    indicator,
    indicatorSize,
    labelColor,
    labelStyle,
    labelPadding,
    unselectedLabelColor,
    unselectedLabelStyle,
    dragStartBehavior,
    onTap,
  } = {}) {
    super();

    this.key = key;
    this.tabs = tabs;
    this.controller = controller;
    this.isScrollable = isScrollable;
    this.indicatorColor = indicatorColor;
    this.indicatorWeight = indicatorWeight;
    this.indicatorPadding = indicatorPadding;
    this.indicator = indicator;
    this.indicatorSize = indicatorSize;
    this.labelColor = labelColor;
    this.labelStyle = labelStyle;
    this.labelPadding = labelPadding;
    this.unselectedLabelColor = unselectedLabelColor;
    this.unselectedLabelStyle = unselectedLabelStyle;
    this.dragStartBehavior = dragStartBehavior;
    this.onTap = onTap;
  }
}

TabBar.new = function (arg) {
  return new TabBar(arg);
};

class TabController extends FlutterWidget {
  constructor({ initialIndex, length, vsync } = {}) {
    super();

    this.initialIndex = initialIndex;
    this.length = length;
    this.vsync = vsync;
  }
}

TabController.new = function (arg) {
  return new TabController(arg);
};

class Tab extends FlutterWidget {
  constructor({ key, text, icon, child } = {}) {
    super();

    this.key = key;
    this.text = text;
    this.icon = icon;
    this.child = child;
  }
}

Tab.new = function (arg) {
  return new Tab(arg);
};

class TabBarView extends FlutterWidget {
  constructor({ key, children, controller, physics, dragStartBehavior } = {}) {
    super();

    this.key = key;
    this.children = children;
    this.controller = controller;
    this.physics = physics;
    this.dragStartBehavior = dragStartBehavior;
  }
}

TabBarView.new = function (arg) {
  return new TabBarView(arg);
};

class NavigatorState extends FlutterWidget {
  constructor(context) {
    super();

    this.context = context;
  }

  push(T, materialPageRoute) {
    this.context.navigatorPush(materialPageRoute.builder(this.context));
  }
  pop(T) {
    this.context.navigatorPop();
  }
}

class Navigator extends FlutterWidget {
  constructor({ key, initialRoute, onGenerateRoute, onUnknownRoute, observers } = {}) {
    super();

    this.key = key;
    this.initialRoute = initialRoute;
    this.onGenerateRoute = onGenerateRoute;
    this.onUnknownRoute = onUnknownRoute;
    this.observers = observers;
  }

  static push(context, materialPageRoute) {
    let T = null;
    if (arguments.length == 3) {
      T = arguments[0];
      context = arguments[1];
      materialPageRoute = arguments[2];
    }

    var navigatorState = new NavigatorState(context);
    navigatorState.push(T, materialPageRoute);
  }
  static pop(context) {
    let T = null;
    if (arguments.length == 2) {
      T = arguments[0];
      context = arguments[1];
    }
    var navigatorState = new NavigatorState(context);
    navigatorState.pop(T);
  }

  static of(context, opt) {
    var navigatorState = new NavigatorState(context);
    return navigatorState;
  }
}

Navigator.new = function (arg) {
  return new Navigator(arg);
};

class MaterialPageRoute extends FlutterWidget {
  constructor({ builder, settings, maintainState, fullscreenDialog } = {}) {
    super();

    this.builder = builder;
    this.settings = settings;
    this.maintainState = maintainState;
    this.fullscreenDialog = fullscreenDialog;

    this.child = null;
  }

  preBuild(jsWidgetHelper, buildContext) {
    if (this.builder) {
      this.child = this.builder(buildContext);
      delete this.builder;
    }

    super.preBuild(jsWidgetHelper, buildContext);
  }
}

MaterialPageRoute.new = function (args) {
  return new MaterialPageRoute(args);
};

class RouteSettings extends FlutterWidget {
  constructor({ name, isInitialRoute, arg } = {}) {
    super();

    this.name = name;
    this.isInitialRoute = isInitialRoute;
    this.arg = arg;
  }
}

RouteSettings.new = function (args) {
  return new RouteSettings(args);
};

StretchMode = {
  zoomBackground: { _name: 'StretchMode.zoomBackground', index: 0 },
  blurBackground: { _name: 'StretchMode.blurBackground', index: 1 },
  fadeTitle: { _name: 'StretchMode.fadeTitle', index: 2 },
};

CollapseMode = {
  parallax: { _name: 'CollapseMode.parallax', index: 0 },
  pin: { _name: 'CollapseMode.pin', index: 1 },
  none: { _name: 'CollapseMode.none', index: 2 },
};

//FIXME,github merge
MaterialTapTargetSize = {
  padded: 'MaterialTapTargetSize.padded',
  shrinkWrap: 'MaterialTapTargetSize.shrinkWrap',
};

class Scrollbar extends FlutterWidget {
  constructor({ key, child } = {}) {
    super();
    this.key = key;
    this.child = child;
  }
}

class SnackBar extends FlutterWidget {
  constructor({
    key,
    content, //@required
    backgroundColor,
    elevation,
    shape,
    behavior,
    action,
    duration,
    animation,
    onVisible,
  } = {}) {
    super();
    this.key = key;
    this.content = content;
    this.backgroundColor = backgroundColor;
    this.elevation = elevation;
    this.shape = shape;
    this.behavior = behavior;
    this.action = action;
    this.duration = duration;
    this.animation = animation;
    this.onVisible = onVisible;
  }
}

class FlutterLogo extends FlutterWidget {
  constructor(
    { key, size, colors, textColor, style, duration, curve } = {
      textColor: new Color(0xff616161),
      // style:FlutterLogoStyle.markOnly,
      duration: new Duration({ milliseconds: 750 }),
      curve: Curves.fastOutSlowIn,
    },
  ) {
    super();
    this.key = key;
    this.size = size;
    this.colors = colors;
    this.textColor = textColor;
    this.duration = duration;
    this.curve = curve;
  }
}

module.exports = {
  MaterialApp,
  Material,
  Scaffold,
  ScaffoldState,
  AppBar,
  FlatButton,
  FlatButtonWithIcon,
  RaisedButton,
  RaisedButtonWithIcon,
  FloatingActionButton,
  IconButton,
  DropdownButton,
  PopupMenuButton,
  ButtonBar,
  Icon,
  Hero,
  Card,
  MergeSemantics,
  PopupMenuItem,
  FlexibleSpaceBar,
  BottomAppBar,
  BottomNavigationBar,
  Radio,
  Semantics,
  RawMaterialButton,
  CircleBorder,
  SafeArea,
  MaterialTapTargetSize,
  Builder,
  DefaultTabController,
  TabBar,
  TabController,
  Tab,
  TabBarView,
  Navigator,
  MaterialPageRoute,
  RouteSettings,
  StretchMode,
  CollapseMode,
  Scrollbar,
  SnackBar,
  FlutterLogo,
};


/***/ }),

/***/ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_text.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_text.js ***!
  \************************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

//  MXFlutterFramework
//  Copyright 2019 The MXFlutter Authors. All rights reserved.
//
//  Use of this source code is governed by a MIT-style license that can be
//  found in the LICENSE file.

let { DartClass, FlutterWidget, Color, Locale } = __webpack_require__(/*! ./js_flutter_basic_types.js */ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_basic_types.js");

/// Creates a text widget.
///
/// If the [style] argument is null, the text will use the style from the
/// closest enclosing [DefaultTextStyle].
class Text extends FlutterWidget {
  constructor(data, { key, style, textAlign, textDirection, locale, softWrap, overflow, textScaleFactor, maxLines, semanticsLabel } = {}) {
    super();

    this.data = data;
    this.key = key;
    this.style = style;
    this.textAlign = textAlign;
    this.textDirection = textDirection;
    this.locale = locale;
    this.softWrap = softWrap;
    this.overflow = overflow;
    this.textScaleFactor = textScaleFactor;
    this.maxLines = maxLines;
    this.semanticsLabel = semanticsLabel;
  }

  //       /// Creates a text widget with a [TextSpan].
  //   const Text.rich(this.textSpan, {
  //     Key key,
  //     this.style,
  //     this.textAlign,
  //     this.textDirection,
  //     this.locale,
  //     this.softWrap,
  //     this.overflow,
  //     this.textScaleFactor,
  //     this.maxLines,
  //     this.semanticsLabel,
  //   })
}

Text.new = function (data, args) {
  return new Text(data, args);
};

Text.rich = function (textSpan, { key, style, textAlign, textDirection, locale, softWrap, overflow, textScaleFactor, maxLines, semanticsLabel } = {}) {
  var t = new Text();
  c.constructorName = 'rich';

  t.textSpan = textSpan;
  t.key = key;
  t.style = style;
  t.textAlign = textAlign;
  t.textDirection = textDirection;
  t.locale = locale;
  t.softWrap = softWrap;
  t.overflow = overflow;
  t.textScaleFactor = textScaleFactor;
  t.maxLines = maxLines;
  t.semanticsLabel = semanticsLabel;
};

class RichText extends FlutterWidget {
  constructor({ key, text, textAlign, textDirection, softWrap, overflow, textScaleFactor, maxLines, locale } = {}) {
    super();

    this.key = key;
    this.text = text;
    this.textAlign = textAlign;
    this.textDirection = textDirection;
    this.softWrap = softWrap;
    this.overflow = overflow;
    this.textScaleFactor = textScaleFactor;
    this.maxLines = maxLines;
    this.locale = locale;
  }
}

RichText.new = function (args) {
  return new RichText(args);
};

class DefaultTextStyle extends FlutterWidget {
  constructor({ key, style, textAlign, softWrap, overflow, maxLines, child } = {}) {
    super();

    this.key = key;
    this.style = style;
    this.textAlign = textAlign;
    this.softWrap = softWrap;
    this.overflow = overflow;
    this.maxLines = maxLines;
    this.child = child;
  }
}

DefaultTextStyle.new = function (args) {
  return new DefaultTextStyle(args);
};

class TextStyle extends DartClass {
  constructor({
    inherit,
    color,
    fontSize,
    fontWeight,
    fontStyle,
    letterSpacing,
    wordSpacing,
    textBaseline,
    height,
    locale,
    foreground,
    background,
    shadows,
    decoration,
    decorationColor,
    decorationStyle,
    debugLabel,
    fontFamily,
    packages, // 此处因为和 js 的关键字 package 冲突了，所以改成 packages
  } = {}) {
    super();

    this.inherit = inherit;
    this.color = color;
    this.fontSize = fontSize;
    this.fontWeight = fontWeight;
    this.fontStyle = fontStyle;
    this.letterSpacing = letterSpacing;
    this.wordSpacing = wordSpacing;
    this.textBaseline = textBaseline;
    this.height = height;
    this.locale = locale;
    this.foreground = foreground;
    this.background = background;
    this.shadows = shadows;
    this.decoration = decoration;
    this.decorationColor = decorationColor;
    this.decorationStyle = decorationStyle;
    this.debugLabel = debugLabel;
    this.fontFamily = fontFamily;
    this.packages = packages;
  }
}

TextStyle.new = function ({
  inherit,
  color,
  fontSize,
  fontWeight,
  fontStyle,
  letterSpacing,
  wordSpacing,
  textBaseline,
  height,
  locale,
  foreground,
  background,
  shadows,
  decoration,
  decorationColor,
  decorationStyle,
  debugLabel,
  fontFamily,
  package,
} = {}) {
  this.className = 'TextStyle';

  this.inherit = inherit;
  this.color = color;
  this.fontSize = fontSize;
  this.fontWeight = fontWeight;
  this.fontStyle = fontStyle;
  this.letterSpacing = letterSpacing;
  this.wordSpacing = wordSpacing;
  this.textBaseline = textBaseline;
  this.height = height;
  this.locale = locale;
  this.foreground = foreground;
  this.background = background;
  this.shadows = shadows;
  this.decoration = decoration;
  this.decorationColor = decorationColor;
  this.decorationStyle = decorationStyle;
  this.debugLabel = debugLabel;
  this.fontFamily = fontFamily;
  this.package = package;

  return this;
};

// TextStyle.new = function(args) {
//   return new TextStyle(args);
// };

TextStyle.fromJson = function (mapObj) {
  if (mapObj == null || mapObj == undefined) {
    return null;
  }

  let obj = new TextStyle();

  for (var p in mapObj) {
    if (mapObj.hasOwnProperty(p)) {
      let v = mapObj[p];
      if (v == null || v == undefined) {
        obj[p] = v;
        continue;
      }

      switch (p) {
        case 'color':
        case 'decorationColor':
          obj[p] = new Color(v);
          break;

        case 'locale':
          obj[p] = Locale.fromJson(v);
          break;

        case 'shadows':
          {
            let shadowArray = [];
            for (shadow of v) {
              shadowArray.push(Shadow.fromJson(shadow));
            }
            obj[p] = shadowArray;
          }
          break;

        default:
          obj[p] = v;
          break;
      }
    }
  }

  return obj;
};

class TextSpan extends FlutterWidget {
  constructor({ style, text, children, recognizer } = {}) {
    super();

    this.style = style;
    this.text = text;
    this.children = children;
    this.recognizer = recognizer;
  }
}

TextSpan.new = function (args) {
  return new TextSpan(args);
};

// TextDecoration = {
//   none: "TextDecoration.none",
//   underline: "TextDecoration.underline",
//   overline: "TextDecoration.overline",
//   lineThrough: "TextDecoration.lineThrough"
// };
//
// TextAlign = {
//   left: "TextAlign.left",
//   right: "TextAlign.right",
//   center: "TextAlign.center",
//   justify: "TextAlign.justify",
//   start: "TextAlign.start",
//   end: "TextAlign.end"
// };
//
// TextOverflow = {
//   clip: "TextOverflow.clip",
//   fade: "TextOverflow.fade",
//   ellipsis: "TextOverflow.ellipsis"
// };

TextDecoration = {
  none: { _name: 'TextDecoration.none', index: 0 },
  underline: { _name: 'TextDecoration.underline', index: 1 },
  overline: { _name: 'TextDecoration.overline', index: 2 },
  lineThrough: { _name: 'TextDecoration.lineThrough', index: 3 },
};

TextAlign = {
  left: { _name: 'TextAlign.left', index: 0 },
  right: { _name: 'TextAlign.right', index: 1 },
  center: { _name: 'TextAlign.center', index: 2 },
  justify: { _name: 'TextAlign.justify', index: 3 },
  start: { _name: 'TextAlign.start', index: 4 },
  end: { _name: 'TextAlign.end', index: 5 },
};

TextOverflow = {
  clip: { _name: 'TextOverflow.clip', index: 0 },
  fade: { _name: 'TextOverflow.fade', index: 1 },
  ellipsis: { _name: 'TextOverflow.ellipsis', index: 2 },
};

class TextTheme extends DartClass {
  constructor({ display4, display3, display2, display1, headline, title, subhead, body2, body1, caption, button, subtitle, overline } = {}) {
    super();

    this.display4 = display4;
    this.display3 = display3;
    this.display2 = display2;
    this.display1 = display1;
    this.headline = headline;
    this.title = title;
    this.subhead = subhead;
    this.body2 = body2;
    this.body1 = body1;
    this.caption = caption;
    this.button = button;
    this.subtitle = subtitle;
    this.overline = overline;
  }
}

TextTheme.new = function (args) {
  return new TextTheme(args);
};

TextTheme.fromJson = function (mapObj) {
  if (mapObj == null || mapObj == undefined) {
    return null;
  }

  let obj = new TextTheme({
    display4: TextStyle.fromJson(mapObj['display4']),
    display3: TextStyle.fromJson(mapObj['display3']),
    display2: TextStyle.fromJson(mapObj['display2']),
    display1: TextStyle.fromJson(mapObj['display1']),
    headline: TextStyle.fromJson(mapObj['headline']),
    title: TextStyle.fromJson(mapObj['title']),
    subhead: TextStyle.fromJson(mapObj['subhead']),
    body2: TextStyle.fromJson(mapObj['body2']),
    body1: TextStyle.fromJson(mapObj['body1']),
    caption: TextStyle.fromJson(mapObj['caption']),
    button: TextStyle.fromJson(mapObj['button']),
    subtitle: TextStyle.fromJson(mapObj['subtitle']),
    overline: TextStyle.fromJson(mapObj['overline']),
  });

  return obj;
};
// TextDecorationStyle = {
//   dashed: "TextDecorationStyle.dashed",
//   dotted: "TextDecorationStyle.dotted",
//   double: "TextDecorationStyle.double",
//   solid: "TextDecorationStyle.solid"
// };

TextDecorationStyle = {
  dashed: { _name: 'TextDecorationStyle.dashed', index: 0 },
  dotted: { _name: 'TextDecorationStyle.dotted', index: 1 },
  double: { _name: 'TextDecorationStyle.double', index: 2 },
  solid: { _name: 'TextDecorationStyle.solid', index: 3 },
};

// TextBaseline = {
//   alphabetic: "TextBaseline.alphabetic",
//   ideographic: "TextBaseline.ideographic"
// };

TextBaseline = {
  alphabetic: { _name: 'TextBaseline.alphabetic', index: 0 },
  ideographic: { _name: 'TextBaseline.ideographic', index: 1 },
};

// TextDirection = {
//   rtl: "TextDirection.rtl",
//   ltr: "TextDirection.ltr"
// };

TextDirection = {
  rtl: { _name: 'TextDirection.rtl', index: 0 },
  ltr: { _name: 'TextDirection.ltr', index: 1 },
};

// FontWeight = {
//   bold: "FontWeight.bold",
//   normal: "FontWeight.normal",
//   w100: "FontWeight.w100",
//   w200: "FontWeight.w200",
//   w300: "FontWeight.w300",
//   w400: "FontWeight.w500",
//   w500: "FontWeight.w500",
//   w600: "FontWeight.w600",
//   w700: "FontWeight.w700",
//   w800: "FontWeight.w800",
//   w900: "FontWeight.w900"
// };

FontWeight = {
  bold: { _name: 'FontWeight.bold', index: 0 },
  normal: { _name: 'FontWeight.normal', index: 1 },
  w100: { _name: 'FontWeight.w100', index: 2 },
  w200: { _name: 'FontWeight.w200', index: 3 },
  w300: { _name: 'FontWeight.w300', index: 4 },
  w400: { _name: 'FontWeight.w400', index: 5 },
  w500: { _name: 'FontWeight.w500', index: 6 },
  w600: { _name: 'FontWeight.w600', index: 7 },
  w700: { _name: 'FontWeight.w700', index: 8 },
  w800: { _name: 'FontWeight.w800', index: 9 },
  w900: { _name: 'FontWeight.w900', index: 10 },
};
// FontStyle = {
//   italic: "FontStyle.italic",
//   normal: "FontStyle.normal"
// };

FontStyle = {
  italic: { _name: 'FontStyle.italic', index: 0 },
  normal: { _name: 'FontStyle.normal', index: 1 },
};

class Shadow extends FlutterWidget {
  constructor({ color, offset, blurRadius } = {}) {
    super();

    this.color = color;
    this.offset = offset;
    this.blurRadius = blurRadius;
  }
}

Shadow.new = function (args) {
  return new Shadow(args);
};

Shadow.fromJson = function (mapObj) {
  if (mapObj == null || mapObj == undefined) {
    return null;
  }

  let obj = new Shadow();

  for (var p in mapObj) {
    if (mapObj.hasOwnProperty(p)) {
      let v = mapObj[p];
      if (v == null || v == undefined) {
        obj[p] = v;
        continue;
      }

      switch (p) {
        case 'color':
          obj[p] = new Color(v);
          break;

        default:
          obj[p] = v;
          break;
      }
    }
  }

  return obj;
};

class TextFormField extends FlutterWidget {
  constructor({
    key,
    controller,
    initialValue,
    focusNode,
    decoration,
    keyboardType,
    textCapitalization,
    textInputAction,
    style,
    textDirection,
    textAlign,
    autofocus,
    obscureText,
    autocorrect,
    autovalidate,
    maxLengthEnforced,
    maxLines,
    maxLength,
    onEditingComplete,
    onFieldSubmitted,
    onSaved,
    validator,
    inputFormatters,
    enabled,
    cursorWidth,
    cursorRadius,
    cursorColor,
    keyboardAppearance,
    scrollPadding,
    enableInteractiveSelection,
    buildCounter,
  } = {}) {
    super();

    this.key = key;
    this.controller = controller;
    this.initialValue = initialValue;
    this.focusNode = focusNode;
    this.decoration = decoration;
    this.keyboardType = keyboardType;
    this.textCapitalization = textCapitalization;
    this.textInputAction = textInputAction;
    this.style = style;
    this.textDirection = textDirection;
    this.textAlign = textAlign;
    this.autofocus = autofocus;
    this.obscureText = obscureText;
    this.autocorrect = autocorrect;
    this.autovalidate = autovalidate;
    this.maxLengthEnforced = maxLengthEnforced;
    this.maxLines = maxLines;
    this.maxLength = maxLength;
    this.onEditingComplete = onEditingComplete;
    this.onFieldSubmitted = onFieldSubmitted;
    this.onSaved = onSaved;
    this.validator = validator;
    this.inputFormatters = inputFormatters;
    this.enabled = enabled;
    this.cursorWidth = cursorWidth;
    this.cursorRadius = cursorRadius;
    this.cursorColor = cursorColor;
    this.keyboardAppearance = keyboardAppearance;
    this.scrollPadding = scrollPadding;
    this.enableInteractiveSelection = enableInteractiveSelection;
    this.buildCounter = buildCounter;
  }
}

TextFormField.new = function (args) {
  return new TextFormField(args);
};

class InputDecoration extends FlutterWidget {
  constructor({
    icon,
    labelText,
    labelStyle,
    helperText,
    helperStyle,
    hintText,
    hintStyle,
    hintMaxLines,
    errorText,
    errorStyle,
    errorMaxLines,
    hasFloatingPlaceholder,
    isDense,
    contentPadding,
    prefixIcon,
    prefix,
    prefixText,
    prefixStyle,
    suffixIcon,
    suffix,
    suffixText,
    suffixStyle,
    counter,
    counterText,
    counterStyle,
    filled,
    fillColor,
    errorBorder,
    focusedBorder,
    focusedErrorBorder,
    disabledBorder,
    enabledBorder,
    border,
    enabled,
    semanticCounterText,
    alignLabelWithHint,
  } = {}) {
    super();

    this.icon = icon;
    this.labelText = labelText;
    this.labelStyle = labelStyle;
    this.helperText = helperText;
    this.helperStyle = helperStyle;
    this.hintText = hintText;
    this.hintStyle = hintStyle;
    this.hintMaxLines = hintMaxLines;
    this.errorText = errorText;
    this.errorStyle = errorStyle;
    this.errorMaxLines = errorMaxLines;
    this.hasFloatingPlaceholder = hasFloatingPlaceholder;
    this.isDense = isDense;
    this.contentPadding = contentPadding;
    this.prefixIcon = prefixIcon;
    this.prefix = prefix;
    this.prefixText = prefixText;
    this.prefixStyle = prefixStyle;
    this.suffixIcon = suffixIcon;
    this.suffix = suffix;
    this.suffixText = suffixText;
    this.suffixStyle = suffixStyle;
    this.counter = counter;
    this.counterText = counterText;
    this.counterStyle = counterStyle;
    this.filled = filled;
    this.fillColor = fillColor;
    this.errorBorder = errorBorder;
    this.focusedBorder = focusedBorder;
    this.focusedErrorBorder = focusedErrorBorder;
    this.disabledBorder = disabledBorder;
    this.enabledBorder = enabledBorder;
    this.border = border;
    this.enabled = enabled;
    this.semanticCounterText = semanticCounterText;
    this.alignLabelWithHint = alignLabelWithHint;
  }
}

InputDecoration.new = function (args) {
  return new InputDecoration(args);
};

InputDecoration.collapsed = function ({ hintText, hasFloatingPlaceholder, hintStyle, filled, fillColor, border, enabled }) {
  let v = new InputDecoration();
  v.staticFunctionName = 'collapsed';

  v.hintText = hintText;
  v.hasFloatingPlaceholder = hasFloatingPlaceholder;
  v.hintStyle = hintStyle;
  v.filled = filled;
  v.fillColor = fillColor;
  v.border = border;
  v.enabled = enabled;

  return v;
};
class TextEditingController extends FlutterWidget {
  constructor({ text } = {}) {
    super();

    this.text = text;
  }
}

TextEditingController.new = function (args) {
  return new TextEditingController(args);
};

class TextInputType extends DartClass {
  constructor() {
    super();
  }
}

TextInputType.new = function (args) {
  return new TextInputType(args);
};

TextInputType.numberWithOptions = function (signed, decimal) {
  let v = new TextInputType();
  v.constructorName = 'numberWithOptions';

  v.signed = signed;
  v.decimal = decimal;

  return v;
};

TextInputType.text = function () {
  let v = new TextInputType();
  v.constructorName = 'text';

  return v;
};

TextInputType.multiline = function () {
  let v = new TextInputType();
  v.constructorName = 'multiline';

  return v;
};

TextInputType.number = function () {
  let v = new TextInputType();
  v.constructorName = 'number';

  return v;
};

TextInputType.phone = function () {
  let v = new TextInputType();
  v.constructorName = 'phone';

  return v;
};

TextInputType.datetime = function () {
  let v = new TextInputType();
  v.constructorName = 'datetime';

  return v;
};

TextInputType.emailAddress = function () {
  let v = new TextInputType();
  v.constructorName = 'emailAddress';

  return v;
};

TextInputType.url = function () {
  let v = new TextInputType();
  v.constructorName = 'url';

  return v;
};

// TextCapitalization = {
//   words: "TextCapitalization.words",
//   sentences: "TextCapitalization.sentences",
//   characters: "TextCapitalization.characters",
//   none: "TextCapitalization.none"
// };

// TextInputAction = {
//   none: "TextInputAction.none",
//   unspecified: "TextInputAction.unspecified",
//   done: "TextInputAction.done",
//   go: "TextInputAction.go",
//   search: "TextInputAction.search",
//   send: "TextInputAction.send",
//   next: "TextInputAction.next",
//   previous: "TextInputAction.previous",
//   continueAction: "TextInputAction.continueAction",
//   join: "TextInputAction.join",
//   route: "TextInputAction.route",
//   emergencyCall: "TextInputAction.emergencyCall",
//   newline: "TextInputAction.newline"
// };

TextCapitalization = {
  words: { _name: 'TextCapitalization.words', index: 0 },
  sentences: { _name: 'TextCapitalization.sentences', index: 1 },
  characters: { _name: 'TextCapitalization.characters', index: 2 },
  none: { _name: 'TextCapitalization.none', index: 3 },
};

TextInputAction = {
  none: { _name: 'TextInputAction.none', index: 0 },
  unspecified: { _name: 'TextInputAction.unspecified', index: 1 },
  done: { _name: 'TextInputAction.done', index: 2 },
  go: { _name: 'TextInputAction.go', index: 3 },
  search: { _name: 'TextInputAction.search', index: 4 },
  send: { _name: 'TextInputAction.send', index: 5 },
  next: { _name: 'TextInputAction.next', index: 6 },
  previous: { _name: 'TextInputAction.previous', index: 7 },
  continueAction: { _name: 'TextInputAction.continueAction', index: 8 },
  join: { _name: 'TextInputAction.join', index: 9 },
  route: { _name: 'TextInputAction.route', index: 10 },
  emergencyCall: { _name: 'TextInputAction.emergencyCall', index: 11 },
  newline: { _name: 'TextInputAction.newline', index: 12 },
};

class UnderlineInputBorder extends FlutterWidget {
  constructor({ borderSide, borderRadius } = {}) {
    super();

    this.borderSide = borderSide;
    this.borderRadius = borderRadius;
  }
}

UnderlineInputBorder.new = function (args) {
  return new UnderlineInputBorder(args);
};

class OutlineInputBorder extends FlutterWidget {
  constructor({ borderSide, borderRadius, gapPadding } = {}) {
    super();

    this.borderSide = borderSide;
    this.borderRadius = borderRadius;
    this.gapPadding = gapPadding;
  }
}

OutlineInputBorder.new = function (args) {
  return new OutlineInputBorder(args);
};

class TextField extends FlutterWidget {
  constructor({
    key,
    controller,
    focusNode,
    decoration,
    keyboardType,
    textInputAction,
    textCapitalization,
    style,
    textAlign,
    textDirection,
    autofocus,
    obscureText,
    autocorrect,
    maxLines,
    maxLength,
    maxLengthEnforced,
    onChanged,
    onEditingComplete,
    onSubmitted,
    inputFormatters,
    enabled,
    cursorWidth,
    cursorRadius,
    cursorColor,
    keyboardAppearance,
    scrollPadding,
    dragStartBehavior,
    enableInteractiveSelection,
    onTap,
    buildCounter,
  } = {}) {
    super();

    this.key = key;
    this.controller = controller;
    this.focusNode = focusNode;
    this.decoration = decoration;
    this.keyboardType = keyboardType;
    this.textInputAction = textInputAction;
    this.textCapitalization = textCapitalization;
    this.style = style;
    this.textAlign = textAlign;
    this.textDirection = textDirection;
    this.autofocus = autofocus;
    this.obscureText = obscureText;
    this.autocorrect = autocorrect;
    this.maxLines = maxLines;
    this.maxLength = maxLength;
    this.maxLengthEnforced = maxLengthEnforced;
    this.onChanged = onChanged;
    this.onEditingComplete = onEditingComplete;
    this.onSubmitted = onSubmitted;
    this.inputFormatters = inputFormatters;
    this.enabled = enabled;
    this.cursorWidth = cursorWidth;
    this.cursorRadius = cursorRadius;
    this.cursorColor = cursorColor;
    this.keyboardAppearance = keyboardAppearance;
    this.scrollPadding = scrollPadding;
    this.dragStartBehavior = dragStartBehavior;
    this.enableInteractiveSelection = enableInteractiveSelection;
    this.onTap = onTap;
    this.buildCounter = buildCounter;
  }
}

TextField.new = function (args) {
  return new TextField(args);
};

module.exports = {
  Text,
  RichText,
  DefaultTextStyle,
  TextStyle,
  TextSpan,
  TextDecoration,
  TextAlign,
  TextOverflow,
  TextTheme,
  TextDecorationStyle,
  TextBaseline,
  TextDirection,
  FontWeight,
  FontStyle,
  Shadow,
  TextFormField,
  TextEditingController,
  TextInputType,
  TextCapitalization,
  TextInputAction,
  InputDecoration,
  UnderlineInputBorder,
  OutlineInputBorder,
  TextField,
};


/***/ }),

/***/ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_widget.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_widget.js ***!
  \**************************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

//  MXFlutterFramework
//  Copyright 2019 The MXFlutter Authors. All rights reserved.
//
//  Use of this source code is governed by a MIT-style license that can be
//  found in the LICENSE file.

const { FlutterWidget, Color } = __webpack_require__(/*! ./js_flutter_basic_types.js */ "./node_modules/@tencent/mxflutter-widgets/lib/js_flutter_basic_types.js");

class Placeholder extends FlutterWidget {
  constructor(
    { key, color, strokeWidth, fallbackWidth, fallbackHeight } = {
      color: new Color(0xff455a64),
      strokeWidth: 2.0,
      fallbackWidth: 400.0,
      fallbackHeight: 400.0,
    },
  ) {
    super();
    this.key = key;
    this.color = color;
    this.strokeWidth = strokeWidth;
    this.fallbackWidth = fallbackWidth;
    this.fallbackHeight = fallbackHeight;
  }
}

module.exports = {
  Placeholder,
};


/***/ }),

/***/ "./node_modules/@tencent/mxflutter/lib/bridge.js":
/*!*******************************************************!*\
  !*** ./node_modules/@tencent/mxflutter/lib/bridge.js ***!
  \*******************************************************/
/*! flagged exports */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bridgeMXNativeJSFlutterApp [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createMirrorObj [provided] [no usage info] [missing usage info prevents renaming] */
/*! export invokeFlutterCommonChannel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export invokeFlutterFunction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export invokeMirrorObjMethod [provided] [no usage info] [missing usage info prevents renaming] */
/*! export runApp [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.invokeFlutterFunction = exports.invokeMirrorObjMethod = exports.createMirrorObj = exports.invokeFlutterCommonChannel = exports.bridgeMXNativeJSFlutterApp = exports.runApp = void 0;
const mirror_1 = __webpack_require__(/*! ./mirror/mirror */ "./node_modules/@tencent/mxflutter/lib/mirror/mirror.js");
/**
 * native 注入 js -> flutter
 * build 数据通道
 */
const bridgeMXNativeJSFlutterApp = {
    setCurrentJSApp: (app) => {
        globalThis.MXNativeJSFlutterApp.setCurrentJSApp(app);
    },
    callFlutterReloadApp: (app, widgetData) => {
        globalThis.MXNativeJSFlutterApp.callFlutterReloadApp(app, widgetData);
    },
    callFlutterWidgetChannel: (method, args) => {
        globalThis.MXNativeJSFlutterApp.callFlutterWidgetChannel(method, args);
    },
};
exports.bridgeMXNativeJSFlutterApp = bridgeMXNativeJSFlutterApp;
// copy 一些 简单封装的老函数
const runApp = (app) => {
    bridgeMXNativeJSFlutterApp.setCurrentJSApp(app);
};
exports.runApp = runApp;
// ============flutter -> JS===================================
/**
 * native 注入 flutter -> js
 * js->flutter 顶层API总入口
 */
const invokeFlutterCommonChannel = (funcName, args, callback) => {
    const invokeData = JSON.stringify({ funcName, args });
    globalThis.mxfJSBridgeInvokeFlutterCommonChannel(invokeData, (resultStr) => {
        if (callback) {
            callback(resultStr);
        }
    });
};
exports.invokeFlutterCommonChannel = invokeFlutterCommonChannel;
// mirrorObj sys
// 调用Logic mirrorObj的函数
// *重要区分： JS Logic MirrorObj的生命周期JS侧控制，由Native Weak Ref辅助完成释放
const createMirrorObj = (flutterCallArgs, mirrorID, needMonitordGCValue) => {
    invokeFlutterCommonChannel('mxfJSBridgeCreateMirrorObj', flutterCallArgs);
    // 监控jsvalue 释放，同步释放flutter侧对象
    // FIXME： native释放有问题
    if (typeof (globalThis.mxfAddJSValueToMirrorObjGCMap) !== 'undefined') {
        globalThis.mxfAddJSValueToMirrorObjGCMap(mirrorID, needMonitordGCValue);
    }
};
exports.createMirrorObj = createMirrorObj;
// 包装了invokeFlutterCommonChannel一层...
// 调用dart侧 mxfJSBridgeInvokeMirrorObjWithCallback 函数
const invokeMirrorObjMethod = (flutterCallArgs, callback) => {
    invokeFlutterCommonChannel('mxfJSBridgeInvokeMirrorObjWithCallback', flutterCallArgs, callback);
};
exports.invokeMirrorObjMethod = invokeMirrorObjMethod;
const invokeFlutterFunction = (flutterCallArgs) => {
    invokeFlutterCommonChannel('mxfJSBridgeInvokeMirrorObjWithCallback', flutterCallArgs);
};
exports.invokeFlutterFunction = invokeFlutterFunction;
// ============js -> flutter===================================
/**
 * native 注入 flutter -> js
 * flutter->js 总入口
 */
globalThis.mxfJSBridgeInvokeJSCommonChannel = (messageStr) => {
    const messageObj = JSON.parse(messageStr);
    const { method, arguments: args } = messageObj;
    if (method === 'invokeJSMirrorObj') {
        console.log('invokeJSMirrorObj', args);
        mirror_1.FlutterWidgetMirrorMgr.getInstance().invokeJSMirrorObjMethod(args);
    }
};


/***/ }),

/***/ "./node_modules/@tencent/mxflutter/lib/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@tencent/mxflutter/lib/index.js ***!
  \******************************************************/
/*! flagged exports */
/*! export DartClass [provided] [no usage info] [missing usage info prevents renaming] */
/*! export FlutterCallArgs [provided] [no usage info] [missing usage info prevents renaming] */
/*! export FlutterWidget [provided] [no usage info] [missing usage info prevents renaming] */
/*! export FlutterWidgetMirrorMgr [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXBaseKey [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXDartClassLifeCycle [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXJSBaseWidget [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXJSBuildContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXJSFlutterApp [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXJSLog [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXJSStatefulWidget [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXJSStatelessWidget [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXJSWidgetState [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXWidgetControllerLifeCycle [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MethodCall [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MethodChannel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bridgeMXNativeJSFlutterApp [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createMirrorObj [provided] [no usage info] [missing usage info prevents renaming] */
/*! export invokeFlutterCommonChannel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export invokeFlutterFunction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export invokeMirrorObjMethod [provided] [no usage info] [missing usage info prevents renaming] */
/*! export runApp [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
var widget_1 = __webpack_require__(/*! ./widget/widget */ "./node_modules/@tencent/mxflutter/lib/widget/widget.js");
Object.defineProperty(exports, "MXJSBaseWidget", ({ enumerable: true, get: function () { return widget_1.MXJSBaseWidget; } }));
Object.defineProperty(exports, "MXJSStatefulWidget", ({ enumerable: true, get: function () { return widget_1.MXJSStatefulWidget; } }));
Object.defineProperty(exports, "MXJSWidgetState", ({ enumerable: true, get: function () { return widget_1.MXJSWidgetState; } }));
Object.defineProperty(exports, "MXJSStatelessWidget", ({ enumerable: true, get: function () { return widget_1.MXJSStatelessWidget; } }));
var base_app_1 = __webpack_require__(/*! ./widget/base-app */ "./node_modules/@tencent/mxflutter/lib/widget/base-app.js");
Object.defineProperty(exports, "MXJSFlutterApp", ({ enumerable: true, get: function () { return base_app_1.MXJSFlutterApp; } }));
var bridge_1 = __webpack_require__(/*! ./bridge */ "./node_modules/@tencent/mxflutter/lib/bridge.js");
Object.defineProperty(exports, "runApp", ({ enumerable: true, get: function () { return bridge_1.runApp; } }));
Object.defineProperty(exports, "bridgeMXNativeJSFlutterApp", ({ enumerable: true, get: function () { return bridge_1.bridgeMXNativeJSFlutterApp; } }));
Object.defineProperty(exports, "invokeFlutterCommonChannel", ({ enumerable: true, get: function () { return bridge_1.invokeFlutterCommonChannel; } }));
Object.defineProperty(exports, "invokeMirrorObjMethod", ({ enumerable: true, get: function () { return bridge_1.invokeMirrorObjMethod; } }));
Object.defineProperty(exports, "createMirrorObj", ({ enumerable: true, get: function () { return bridge_1.createMirrorObj; } }));
Object.defineProperty(exports, "invokeFlutterFunction", ({ enumerable: true, get: function () { return bridge_1.invokeFlutterFunction; } }));
var element_1 = __webpack_require__(/*! ./widget/element */ "./node_modules/@tencent/mxflutter/lib/widget/element.js");
Object.defineProperty(exports, "MXJSBuildContext", ({ enumerable: true, get: function () { return element_1.MXJSBuildContext; } }));
var log_1 = __webpack_require__(/*! ./log */ "./node_modules/@tencent/mxflutter/lib/log.js");
Object.defineProperty(exports, "MXJSLog", ({ enumerable: true, get: function () { return log_1.MXJSLog; } }));
var message_channel_1 = __webpack_require__(/*! ./platform/message-channel */ "./node_modules/@tencent/mxflutter/lib/platform/message-channel.js");
Object.defineProperty(exports, "MethodChannel", ({ enumerable: true, get: function () { return message_channel_1.MethodChannel; } }));
Object.defineProperty(exports, "MethodCall", ({ enumerable: true, get: function () { return message_channel_1.MethodCall; } }));
var mirror_1 = __webpack_require__(/*! ./mirror/mirror */ "./node_modules/@tencent/mxflutter/lib/mirror/mirror.js");
Object.defineProperty(exports, "FlutterWidgetMirrorMgr", ({ enumerable: true, get: function () { return mirror_1.FlutterWidgetMirrorMgr; } }));
var base_type_1 = __webpack_require__(/*! ./mirror/base-type */ "./node_modules/@tencent/mxflutter/lib/mirror/base-type.js");
Object.defineProperty(exports, "DartClass", ({ enumerable: true, get: function () { return base_type_1.DartClass; } }));
Object.defineProperty(exports, "MXDartClassLifeCycle", ({ enumerable: true, get: function () { return base_type_1.MXDartClassLifeCycle; } }));
Object.defineProperty(exports, "FlutterCallArgs", ({ enumerable: true, get: function () { return base_type_1.FlutterCallArgs; } }));
var base_type_2 = __webpack_require__(/*! ./widget/base-type */ "./node_modules/@tencent/mxflutter/lib/widget/base-type.js");
Object.defineProperty(exports, "FlutterWidget", ({ enumerable: true, get: function () { return base_type_2.FlutterWidget; } }));
Object.defineProperty(exports, "MXWidgetControllerLifeCycle", ({ enumerable: true, get: function () { return base_type_2.MXWidgetControllerLifeCycle; } }));
Object.defineProperty(exports, "MXBaseKey", ({ enumerable: true, get: function () { return base_type_2.MXBaseKey; } }));


/***/ }),

/***/ "./node_modules/@tencent/mxflutter/lib/log.js":
/*!****************************************************!*\
  !*** ./node_modules/@tencent/mxflutter/lib/log.js ***!
  \****************************************************/
/*! flagged exports */
/*! export MXJSLog [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__ */
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MXJSLog = void 0;
const LOG_LEVEL = {
    DEBUG: 0,
    INFO: 1,
    ERROR: 2,
};
const nativePrint = globalThis.nativePrint || console.log;
const MXJSLog = {
    logLev: LOG_LEVEL.DEBUG,
    setLogLev: (lev) => {
        MXJSLog.logLev = lev;
    },
    debug: (msg) => {
        if (nativePrint && MXJSLog.logLev <= LOG_LEVEL.DEBUG) {
            nativePrint(`MXJSFlutter:[JS]:${msg}`);
        }
    },
    log: (msg) => {
        if (nativePrint && MXJSLog.logLev <= LOG_LEVEL.INFO) {
            nativePrint(`MXJSFlutter:[JS]:${msg}`);
        }
    },
    error: (msg) => {
        if (nativePrint && MXJSLog.logLev <= LOG_LEVEL.ERROR) {
            nativePrint(`MXJSFlutter:[JS]-[Error]:${msg}`);
        }
    },
};
exports.MXJSLog = MXJSLog;


/***/ }),

/***/ "./node_modules/@tencent/mxflutter/lib/mirror/base-type.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tencent/mxflutter/lib/mirror/base-type.js ***!
  \*****************************************************************/
/*! flagged exports */
/*! export DartClass [provided] [no usage info] [missing usage info prevents renaming] */
/*! export FlutterCallArgs [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXDartClassLifeCycle [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXDartClassLifeCycleBase [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FlutterCallArgs = exports.MXDartClassLifeCycle = exports.MXDartClassLifeCycleBase = exports.DartClass = void 0;
const mirror_1 = __webpack_require__(/*! ./mirror */ "./node_modules/@tencent/mxflutter/lib/mirror/mirror.js");
const bridge_1 = __webpack_require__(/*! ../bridge */ "./node_modules/@tencent/mxflutter/lib/bridge.js");
const callback_1 = __webpack_require__(/*! ./callback */ "./node_modules/@tencent/mxflutter/lib/mirror/callback.js");
// TODO rename
class FlutterCallArgs {
    constructor({ widgetID, mirrorID, className, funcName, args } = {}) {
        this.widgetID = widgetID;
        this.mirrorID = mirrorID;
        this.className = className;
        this.funcName = funcName;
        this.args = args;
    }
}
exports.FlutterCallArgs = FlutterCallArgs;
// mirror dart class
// 不需要保持生命周期，js->dart 生成后使用一次
class DartClass {
    constructor() {
        this.className = this.constructor.name;
    }
}
exports.DartClass = DartClass;
// 提供创建flutter侧镜像对象，调用函数的工具接口
class MXDartClassLifeCycleBase extends DartClass {
    constructor() {
        super();
    }
    createMirrorObj(createMirrorObjArgs) {
        this.fillInvokeMethodArgs(createMirrorObjArgs);
        bridge_1.createMirrorObj(createMirrorObjArgs, this.mirrorID, false);
    }
    invokeMirrorObjMethod(methodArgs, callback) {
        this.fillInvokeMethodArgs(methodArgs);
        bridge_1.invokeMirrorObjMethod(methodArgs, callback);
    }
    invokeMirrorObjMethodAsyc(methodArgs) {
        const promiseResult = new Promise((resolve, reject) => {
            this.invokeMirrorObjMethod(methodArgs, (value) => {
                // TODO: fix result
                if (value) {
                    resolve(value);
                }
                else {
                    reject(null);
                }
            });
        });
        return promiseResult;
    }
    addCallback(callback) {
        return callback_1.MXJSCallbackMgr.getInstance().addCallback(callback);
    }
    removeCallback(callbackID) {
        return callback_1.MXJSCallbackMgr.getInstance().removeCallback(callbackID);
    }
    // 释放dart侧对象
    release() {
        // TODO: invoke flutter release obj
        mirror_1.FlutterWidgetMirrorMgr.getInstance().removeMirrorObject(this);
    }
    fillInvokeMethodArgs(args) {
        if (!args.mirrorID) {
            args.mirrorID = this.mirrorID;
        }
        if (!args.className) {
            args.className = this.constructor.name;
        }
    }
}
exports.MXDartClassLifeCycleBase = MXDartClassLifeCycleBase;
// mirror dart class
// 需要保持生命周期，通过mirrorID对应js实例和dart实例，函数相互调用
// 在构造函数中，传递创建Dart对象的参数
// 不在Widget build体系中，独立使用的镜像对象，继承此类,在Widget build体系中的Controller系列，继承MXWidgetControllerLifeCycle
// 用法参照 CustomJSApi Example
class MXDartClassLifeCycle extends MXDartClassLifeCycleBase {
    constructor(createMirrorObjArgs) {
        super();
        // add mirror mgr ,assign mirrorID
        mirror_1.FlutterWidgetMirrorMgr.getInstance().addMirrorObject(this);
        this.createMirrorObj(createMirrorObjArgs);
    }
}
exports.MXDartClassLifeCycle = MXDartClassLifeCycle;


/***/ }),

/***/ "./node_modules/@tencent/mxflutter/lib/mirror/callback.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tencent/mxflutter/lib/mirror/callback.js ***!
  \****************************************************************/
/*! flagged exports */
/*! export MXJSCallbackMgr [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MXJSCallbackMgr = void 0;
const log_1 = __webpack_require__(/*! ../log */ "./node_modules/@tencent/mxflutter/lib/log.js");
// 全局callbak管理器
class MXJSCallbackMgr {
    constructor() {
        this.callbackIDFeed = 0;
        this.callbackID2fun = new Map();
    }
    static getInstance() {
        if (!this.instance) {
            this.instance = new MXJSCallbackMgr();
        }
        return this.instance;
    }
    generateID() {
        this.callbackIDFeed = this.callbackIDFeed + 1;
        return String(this.callbackIDFeed);
    }
    addCallback(callback) {
        const callbackID = this.generateID();
        this.callbackID2fun[callbackID] = callback;
        return callbackID;
    }
    invokeCallback(callbackID, args) {
        const callback = this.findCallback(callbackID);
        if (callback) {
            return callback(args);
        }
        //
        log_1.MXJSLog.error(`MXJSCallbackMgr::invokeCallback error: callback is undefined :${callback}`);
    }
    findCallback(callbackID) {
        return this.callbackID2fun[callbackID];
    }
    canInvoke(callbackID) {
        return this.callbackID2fun[callbackID];
    }
    removeCallback(callbackID) {
        delete this.callbackID2fun[callbackID];
    }
}
exports.MXJSCallbackMgr = MXJSCallbackMgr;
MXJSCallbackMgr.instance = null;


/***/ }),

/***/ "./node_modules/@tencent/mxflutter/lib/mirror/mirror.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tencent/mxflutter/lib/mirror/mirror.js ***!
  \**************************************************************/
/*! flagged exports */
/*! export FlutterWidgetMirrorMgr [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FlutterWidgetMirrorMgr = void 0;
const callback_1 = __webpack_require__(/*! ./callback */ "./node_modules/@tencent/mxflutter/lib/mirror/callback.js");
// TODO: rename
class FlutterWidgetMirrorMgr {
    constructor() {
        this.mirrorIDFeed = 0;
        this.mirrorObjMap = new Map();
    }
    static getInstance() {
        if (!this.instance) {
            this.instance = new FlutterWidgetMirrorMgr();
        }
        return this.instance;
    }
    addMirrorObject(obj) {
        this.mirrorIDFeed = this.mirrorIDFeed + 1;
        const idString = String(this.mirrorIDFeed);
        obj.mirrorID = idString;
        this.mirrorObjMap[idString] = obj;
        return idString;
    }
    getMirrorObject(mirrorID) {
        return this.mirrorObjMap[mirrorID];
    }
    removeMirrorObject(obj) {
        this.mirrorObjMap.delete(obj.mirrorID);
    }
    removeMirrorObjectWithID(mirrorID) {
        this.mirrorObjMap.delete(mirrorID);
    }
    removeMirrorObjectWithIDList(mirrorIDList) {
        mirrorIDList.forEach((mirrorID) => {
            this.mirrorObjMap.delete(mirrorID);
        });
    }
    invokeJSMirrorObjMethod(mirrorMethodCall) {
        const { callbackID, args } = mirrorMethodCall;
        callback_1.MXJSCallbackMgr.getInstance().invokeCallback(callbackID, args);
    }
}
exports.FlutterWidgetMirrorMgr = FlutterWidgetMirrorMgr;
FlutterWidgetMirrorMgr.instance = null;


/***/ }),

/***/ "./node_modules/@tencent/mxflutter/lib/platform/message-channel.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tencent/mxflutter/lib/platform/message-channel.js ***!
  \*************************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, __webpack_exports__ */
/***/ (function(__unused_webpack_module, exports) {

"use strict";

//  MXFlutterFramework
//  Copyright 2019 The MXFlutter Authors. All rights reserved.
//
//  Use of this source code is governed by a MIT-style license that can be
//  found in the LICENSE file.
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MethodCall = exports.MethodChannel = void 0;
class MethodChannel {
    constructor(name, codec = null, binaryMessenger = null) {
        this.name = name;
        if (!(name !== null)) {
            // assert message
        }
    }
    // 重载
    invokeMethod(method, args) {
        return __awaiter(this, void 0, void 0, function* () {
            const promiseResult = new Promise((resolve, reject) => {
                globalThis.mx_jsbridge_MethodChannel_invokeMethod(this.name, method, args, (value) => {
                    if (value !== null) {
                        resolve(value);
                    }
                    else {
                        reject(null);
                    }
                });
            });
            return promiseResult;
        });
    }
    // TODO:
    // handler:function (MethodCall){}
    setMethodCallHandler(handler) {
        // mx_jsbridge_MethodChannel_setMethodCallHandler(this.name, handler);
    }
}
exports.MethodChannel = MethodChannel;
;
class MethodCall {
    // / Creates a [MethodCall] representing the invocation of [method] with the
    // / specified [arguments].
    constructor(method, args) {
        this.method = method;
        this.arguments = args;
    }
}
exports.MethodCall = MethodCall;
;


/***/ }),

/***/ "./node_modules/@tencent/mxflutter/lib/widget/base-app.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tencent/mxflutter/lib/widget/base-app.js ***!
  \****************************************************************/
/*! flagged exports */
/*! export MXJSFlutterApp [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MXJSFlutterApp = void 0;
const widgets_binding_1 = __webpack_require__(/*! ./widgets-binding */ "./node_modules/@tencent/mxflutter/lib/widget/widgets-binding.js");
/**
 * MXJSFlutterApp 用于开发者的JS代码和Flutter MXUIEngine的交互
 * 开发者需要继承MXJSFlutterApp，重载createJSWidgetWithName函数，根据WidgetName创建框架需要的Widget
 */
class MXJSFlutterApp {
    constructor(name, initialRoute) {
        this.name = name;
        this.initialRoute = initialRoute;
        // 初始化WidgetsBinding
        this.widgetsBinding = widgets_binding_1.WidgetsFlutterBinding.ensureInitialized();
        this.widgetsBinding.jsFlutterApp = this;
    }
    nativeCall(args) {
        widgets_binding_1.WidgetsFlutterBinding.ensureInitialized().nativeCall(args);
    }
}
exports.MXJSFlutterApp = MXJSFlutterApp;


/***/ }),

/***/ "./node_modules/@tencent/mxflutter/lib/widget/base-type.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tencent/mxflutter/lib/widget/base-type.js ***!
  \*****************************************************************/
/*! flagged exports */
/*! export FlutterWidget [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXBaseKey [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXWidgetControllerLifeCycle [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MXWidgetControllerLifeCycle = exports.FlutterWidget = exports.MXBaseKey = void 0;
const base_type_1 = __webpack_require__(/*! ../mirror/base-type */ "./node_modules/@tencent/mxflutter/lib/mirror/base-type.js");
const mirror_1 = __webpack_require__(/*! ../mirror/mirror */ "./node_modules/@tencent/mxflutter/lib/mirror/mirror.js");
class MXBaseKey extends base_type_1.DartClass {
}
exports.MXBaseKey = MXBaseKey;
// 镜像 js flutter Widget继承FlutterWidget
class FlutterWidget extends base_type_1.DartClass {
    constructor() {
        super();
    }
    // 用于WidgetTree的Path定位
    get pathComponent() {
        if (this.key) {
            return this.className + this.key.toString();
        }
        return this.className;
    }
    // sub class override
    preBuild(buildContext) { }
}
exports.FlutterWidget = FlutterWidget;
// 在Widget build体系中，需要保持生命周期的类，通过mirrorID对应js实例和dart实例，函数相互调用
// 一般作为Widget的成员变量，跟随Widget的序列化成json，传到Flutter侧，创建对应对象.
// 例如：Animation，AnimationController，ScrollController 继承自MXWidgetControllerLifeCycle
// 方案是与Widget相同，根据自己的属性，序列化成json在Flutter侧创建对应对象，
// 比Widget多的步骤是，在构造函数中，把自己存到MirrorMgr里保持生命周期，已接受事件，Widget dispose时 release释放
class MXWidgetControllerLifeCycle extends base_type_1.MXDartClassLifeCycleBase {
    constructor() {
        super();
        mirror_1.FlutterWidgetMirrorMgr.getInstance().addMirrorObject(this);
    }
}
exports.MXWidgetControllerLifeCycle = MXWidgetControllerLifeCycle;


/***/ }),

/***/ "./node_modules/@tencent/mxflutter/lib/widget/build-owner.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tencent/mxflutter/lib/widget/build-owner.js ***!
  \*******************************************************************/
/*! flagged exports */
/*! export MXJSBuildOwner [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MXJSBuildOwner = void 0;
const log_1 = __webpack_require__(/*! ../log */ "./node_modules/@tencent/mxflutter/lib/log.js");
const bridge_1 = __webpack_require__(/*! ../bridge */ "./node_modules/@tencent/mxflutter/lib/bridge.js");
// / Manager class for the widgets framework.
// /
// / This class tracks which widgets need rebuilding, and handles other tasks
// / that apply to widget trees as a whole, such as managing the inactive element
// / list for the tree and triggering the "reassemble" command when necessary
// / during hot reload when debugging.
// /
// / The main build owner is typically owned by the [WidgetsBinding], and is
// / driven from the operating state.setState
// /
// / Additional build owners can be built to manage off-screen widget trees.
// /
// / To assign a build owner to a tree, use the
// / [RootMgrElement.owner] method on the root element of the
// / widget tree.
class MXJSBuildOwner {
    constructor() {
        this.dirtyElements = [];
        // 标示正在 build 流程中
        this.scheduledFlushDirtyElements = false;
        this.dirtyElementsNeedsResorting = false;
    }
    // / Adds an element to the dirty elements list so that it will be rebuilt
    // / when [WidgetsBinding.drawFrame] calls [buildScope].
    // /void scheduleBuildFor(Element element)
    scheduleBuildFor(element) {
        if (element.inDirtyList) {
            this.dirtyElementsNeedsResorting = true;
            return;
        }
        this.dirtyElements.push(element);
        element.inDirtyList = true;
        // flutter 是在 WidgetBinding.drawFrame()里触发build drity element， 这里直接调用buildScope
        const builtTree = this.buildScope(element);
        this.callFlutterRebuildWidget(builtTree);
    }
    // /build dirty elements
    // /void buildScope(Element context, [ MapCallback callback ])
    buildScope(context, mountCallback) {
        if (mountCallback === null && this.dirtyElements.length === 0) {
            return null;
        }
        // TODO 支持嵌套element build
        if (this.dirtyElements.length > 1) {
            log_1.MXJSLog.log('MXJSBuildOwner::buildScope _dirtyElements.length > 1 !!!!!!!!!!!!!!!');
        }
        // build 数据
        let builtTree = null;
        try {
            this.scheduledFlushDirtyElements = true;
            if (mountCallback) {
                this.dirtyElementsNeedsResorting = false;
                try {
                    // 会调用到mount，触发用户代码Widget第一次build，调用用户代码的地方，需要加try catch
                    builtTree = mountCallback();
                }
                catch (error) {
                    log_1.MXJSLog.log(`MXJSBuildOwner::buildScope callback() error: ${error}`);
                    throw error;
                }
            }
            // TODO 支持嵌套element build
            // this._dirtyElements.sort(Element._sort);
            this.dirtyElementsNeedsResorting = false;
            if (this.dirtyElements.length > 0) {
                const [dirtyElement] = this.dirtyElements;
                // build
                builtTree = dirtyElement.rebuild();
            }
        }
        catch (error) {
            log_1.MXJSLog.log(`MXJSBuildOwner::buildScope dirtyElement.rebuild() error: ${error}`);
            throw error;
        }
        finally {
            this.dirtyElements.forEach((element) => {
                element.inDirtyList = false;
            });
            // clear
            this.dirtyElements = [];
            this.scheduledFlushDirtyElements = false;
            this.dirtyElementsNeedsResorting = false;
            return builtTree;
        }
    }
    // js->flutter
    callFlutterRebuildWidget(builtTree) {
        // MXJSLog.log("callFlutterRebuild ::" + this.widget.logString());
        // let startEncodeData = (new Date()).valueOf();
        // let widgetData = build;
        // let startTransferData = (new Date()).valueOf();
        // if (this.widget.enableProfile) {
        //   let profileInfo = {};
        //   profileInfo['startEncodeData'] = startEncodeData;
        //   profileInfo['startTransferData'] = startTransferData;
        //   profileInfo['transferDataLen'] = widgetData.length;
        //   this.widget.profileInfo = profileInfo;
        // }
        // //rebuild and confirm 配对
        // this.confirmCurrentWidgetTree();
        const widgetData = this.encodeWidgetTree(builtTree);
        // call flutter setState
        bridge_1.bridgeMXNativeJSFlutterApp.callFlutterWidgetChannel('rebuild', widgetData);
    }
    callFlutterPushWidget(builtTree) {
        const widgetData = this.encodeWidgetTree(builtTree);
        // call flutter navigatorPush
        bridge_1.bridgeMXNativeJSFlutterApp.callFlutterWidgetChannel('navigatorPush', widgetData);
    }
    // /encodeWidgetTree to json
    // /可能会encode成其他数据结构
    encodeWidgetTree(builtTree) {
        const widgetData = JSON.stringify(builtTree);
        return widgetData;
    }
    finalizeTree() {
    }
}
exports.MXJSBuildOwner = MXJSBuildOwner;


/***/ }),

/***/ "./node_modules/@tencent/mxflutter/lib/widget/element.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tencent/mxflutter/lib/widget/element.js ***!
  \***************************************************************/
/*! flagged exports */
/*! export MXJSBuildContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXJSElement [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXJSRootMgrElement [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXJSStatefulElement [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXJSStatelessElement [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXJSWidgetTree [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MXJSRootMgrElement = exports.MXJSStatefulElement = exports.MXJSStatelessElement = exports.MXJSWidgetTree = exports.MXJSElement = exports.MXJSBuildContext = void 0;
const log_1 = __webpack_require__(/*! ../log */ "./node_modules/@tencent/mxflutter/lib/log.js");
const widget_1 = __webpack_require__(/*! ./widget */ "./node_modules/@tencent/mxflutter/lib/widget/widget.js");
const base_type_1 = __webpack_require__(/*! ./base-type */ "./node_modules/@tencent/mxflutter/lib/widget/base-type.js");
const console_1 = __webpack_require__(/*! console */ "console");
const bridge_1 = __webpack_require__(/*! ../bridge */ "./node_modules/@tencent/mxflutter/lib/bridge.js");
class MXJSBuildContext {
    // Element(Widget widget)
    constructor() {
        // MXJSBuildContext 信息
        // TODO:重构
        this.inheritedInfo = {};
        this.mediaQueryData = null;
        this.themeData = null;
        this.iconThemeData = null;
    }
    // MXJSBuildContext 信息
    // TODO:重构
    inheritBuildContext(fromBuildContext) {
        this.inheritedInfo = fromBuildContext.inheritedInfo;
        this.mediaQueryData = fromBuildContext.mediaQueryData;
        this.themeData = fromBuildContext.themeData;
        this.iconThemeData = fromBuildContext.iconThemeData;
    }
    setInheritedInfo(args) {
        this.inheritedInfo = args;
        this.mediaQueryData = args.mediaQueryData;
        this.themeData = args.themeData;
        this.iconThemeData = args.iconThemeData;
    }
}
exports.MXJSBuildContext = MXJSBuildContext;
class MXJSElement extends MXJSBuildContext {
    // Element(Widget widget)
    constructor(widget) {
        super();
        this.buildWidgetDataSeqFeed = 0;
        // JS侧主动创建的widgetElementIDFeed是偶数，Flutter侧主动创建的奇数
        MXJSElement.widgetElementIDFeed = MXJSElement.widgetElementIDFeed + 2;
        this.widgetElementID = String(MXJSElement.widgetElementIDFeed);
        this.widget = widget;
        this.parent = null;
        this.dirty = false;
        this.inDirtyList = false;
        // MX Build 逻辑
        // 构建系列号，每build一次加1
        this.buildWidgetDataSeq = '1';
        this.buildingWidgetTree = null;
        this.currentWidgetTree = null;
        this.preWidgetTree = null;
        this.buildWidgetDataSeqFeed = 0;
        this.buildSeq2WTreeMap = new Map();
        // The Widget Pages that pushed this Widget
        // 把当前widget（this） push 出来的widget
        this.navPushingWidgetElement = null;
        this.navPushingWidgetElementID = null;
        // The widget that was pushed by this widget
        // 由自己this push的widget page
        this.navPushedWidgetElements = new Map();
    }
    logString() {
        const log = `${this.widget.logString()} buildseq: ${this.buildWidgetDataSeq} currentTreeSeq: ${this.getWidgetTreeBuildSeq(this.currentWidgetTree)} buildingseq: ${this.getWidgetTreeBuildSeq(this.buildingWidgetTree)} preTreeSeq: ${this.getWidgetTreeBuildSeq(this.preWidgetTree)}`;
        return log;
    }
    // Set the owner of the element. The owner will be propagated to all the
    // descendants of this element.
    //
    // The owner manages the dirty elements list.
    //
    // The [WidgetsBinding] introduces the primary owner,
    // [WidgetsBinding.buildOwner], and assigns it to the widget tree in the call
    // to [runApp] [navigatorPushWithName]. The binding is responsible for driving the build pipeline by
    // calling the build owner's [BuildOwner.buildScope] method. See
    // void assignOwner(BuildOwner owner)
    assignOwner(owner) {
        this.owner = owner;
    }
    // js->flutter
    // navigator route
    navigatorPush(pushWidget) {
        const startEncodeData = (new Date()).valueOf();
        // 2020 7.24修改为不清空，注释
        // 清空之前push的页面*
        // this._clearPushedWidgetElements();
        // 如果RootWidget不是MXJSXXXXWidget的子类，需要用MXJSStatelessWidget包装一下
        pushWidget = this.wappingPushingWidget(pushWidget);
        const pushElement = pushWidget.createElement();
        // TODO:fix inheritWidget
        pushElement.inheritBuildContext(this);
        // 设置push jsWidget的widget
        pushElement.navPushingWidgetElement = this;
        // Flutter侧 通过navPushingWidgetElementID找到对应Widget来push页面 pushWidget
        pushElement.navPushingWidgetElementID = this.widgetElementID;
        // 把element build完成之后，安装到 root element上
        const builtTree = this.owner.buildScope(this, () => pushElement.mount(this));
        const startTransferData = (new Date()).valueOf();
        //    if (pushWidget.enableProfile) {
        //      let profileInfo = {};
        //      profileInfo['startEncodeData'] = startEncodeData;
        //      profileInfo['startTransferData'] = startTransferData;
        //      profileInfo['transferDataLen'] = widgetData.length;
        //      pushWidget.profileInfo = profileInfo;
        //    }
        this.navPushedWidgetElements.set(pushElement.widgetElementID, pushElement);
        // call flutter navigatorPush
        this.owner.callFlutterPushWidget(builtTree);
    }
    navigatorPop() {
        bridge_1.bridgeMXNativeJSFlutterApp.callFlutterWidgetChannel('navigatorPop', { widgetID: this.widgetElementID });
        // 这里有点绕，如果自己的navPushingWidgetElement不为空，则自己是被push的根节点
        if (this.navPushingWidgetElement) {
            this.popped = true;
        }
        // 从自己向上查找navPushingWidgetElement不为null的节点，把这个节点标记为poped，等待flutter dospose事件到来时释放
        let parentElement = this.parent;
        while (parentElement && !parentElement.navPushingWidgetElement) {
            parentElement = parentElement.parent;
        }
        if (parentElement === null || parentElement === void 0 ? void 0 : parentElement.navPushingWidgetElement) {
            parentElement.popped = true;
        }
    }
    // / Marks the element as dirty and adds it to the global list of widgets to
    // / rebuild in the next frame.
    // /
    // / Since it is inefficient to build an element twice in one frame,
    // / applications and widgets should be structured so as to only mark
    // / widgets dirty during event handlers before the frame begins, not during
    // / the build itself.
    markNeedsBuild() {
        this.dirty = true;
        this.owner.scheduleBuildFor(this);
    }
    // / build mount(Element parent, dynamic newSlot)
    mount(parent, newSlot) {
        this.parent = parent;
        if (this.parent) {
            // TODO：重构 inheritBuildContext
            this.inheritBuildContext(parent);
            this.owner = this.parent.owner;
        }
        // 安装到父Element上时，第一次build
        return this.firstBuild();
    }
    rebuild() {
        const built = this.performRebuild();
        this.confirmCurrentWidgetTree();
        return built;
    }
    invokeCallback(buildWidgetDataSeq, callID, args) {
        var _a;
        log_1.MXJSLog.log(`MXJSElement invokeCallback ::${this.widget.logString()} buildWidgetDataSeq: ${buildWidgetDataSeq} callID: ${callID}`);
        if ((_a = this.currentWidgetTree) === null || _a === void 0 ? void 0 : _a.canInvoke(callID)) {
            return this.currentWidgetTree.invokeCallback(callID, args);
        }
        // 容错处理
        log_1.MXJSLog.error(`MXJSElement:invokeCallback: 容错搜索所有BuildTree，this.buildingWidgetTree.buildWidgetDataSeq(${this.getWidgetTreeBuildSeq(this.buildingWidgetTree)})  == buildWidgetDataSeq(${buildWidgetDataSeq}) `
            + ` callID: ${callID}`);
        this.buildSeq2WTreeMap.forEach((tree) => {
            if (tree.canInvoke(callID)) {
                return tree.invokeCallback(callID, args);
            }
        });
    }
    // flutter -> js
    onEventCallback(args) {
        const { callID } = args; //   widgetID/callID 格式 ： "1313/3434"
        if (callID === null) {
            return;
        }
        const arr = callID.split('/');
        const [widgetID] = arr;
        const buildWidgetDataSeq = args.buildSeq;
        const callArgs = args.args;
        const element = this.findChildElement(widgetID);
        if (element) {
            return element.invokeCallback(buildWidgetDataSeq, callID, callArgs);
        }
        log_1.MXJSLog.error(`onEventCallback error: element == null onEventCallback(args:${args}`);
    }
    onFlutterBuildEnd(args) {
        const { widgetID } = args;
        const buildWidgetDataSeq = args.buildSeq;
        const element = this.findChildElement(widgetID);
        if (element) {
            const { profileInfo } = args;
            element.onBuildEnd(buildWidgetDataSeq, profileInfo);
        }
        else {
            log_1.MXJSLog.error(`onBuildEnd error: element == null widgetID: ${widgetID} buildWidgetDataSeq: ${buildWidgetDataSeq}`);
        }
    }
    onFlutterDispose(args) {
        var _a;
        const { widgetID } = args;
        const element = this.findChildElement(widgetID);
        if (element) {
            element.onDispose();
            // TODO: push widget remove logic
            // if (element.parent) {
            //     //TODO: FIXME listview 滑动，滑出之后再回来，就不响应了，先不删除，依赖顶层Push页面的pop来释放
            //     //jsWidget.parentWidget.helper.removeChildWidget(jsWidget);
            // }
            // 如果element.popped 说明时JS 把页面pop出去，flutter dispose页面
            if (element.popped) {
                (_a = element.navPushingWidgetElement) === null || _a === void 0 ? void 0 : _a.removePushedWidget(element);
            }
        }
        else {
            log_1.MXJSLog.error(`onDispose error: element == null widgetID ${widgetID}`);
        }
    }
    // 子类MXJSStatefulElement 重载的_firstBuild() 里执行initState
    firstBuild() {
        return this.rebuild();
    }
    // /@protected
    // /执行检查之后，调用build
    performRebuild() {
        let built = null;
        try {
            // call sub class
            built = this.build();
        }
        catch (error) {
            log_1.MXJSLog.log(`MXJSElement::performRebuild build() error: ${error}`);
            throw error;
        }
        finally {
            this.dirty = false;
        }
        return this.buildWidgetTree(built);
    }
    // subclass override
    build() { }
    // / Change the widget used to configure this element.
    // /
    // / The framework calls this function when the parent wishes to use a
    // / different widget to configure this element. The new widget is guaranteed
    // / to have the same [runtimeType] as the old widget.
    // /
    // / This function is called only during the "active" lifecycle state.
    // /
    // / subclass override
    update(newStatefulWidget) {
    }
    // built2WidgetData
    buildWidgetTree(built) {
        this.buildWidgetDataSeqFeed += 1;
        this.buildWidgetDataSeq = String(this.buildWidgetDataSeqFeed);
        const tempWidgetTree = new MXJSWidgetTree(this.buildWidgetDataSeq);
        tempWidgetTree.ownerElement = this;
        this.buildingWidgetTree = tempWidgetTree;
        log_1.MXJSLog.log(`MXJSElement: _buildWidgetData ::${this.widget.logString()}`);
        const tempWidgetTreeObjMap = this.inflateWidgetTree(tempWidgetTree, built, this.buildWidgetDataSeq);
        // 加入缓存map
        this.buildSeq2WTreeMap.set(tempWidgetTree.buildWidgetDataSeq, tempWidgetTree);
        // json实际包含的字段
        const jsonMap = {
            // WidgetInfo
            key: this.widget.key,
            name: this.widget.name,
            className: this.widget.className,
            navPushingWidgetElementID: this.navPushingWidgetElementID,
            enableProfile: this.widget.enableProfile,
            // build info
            widgetID: this.widgetElementID,
            buildWidgetDataSeq: this.buildWidgetDataSeq,
            widgetData: tempWidgetTreeObjMap,
        };
        return jsonMap;
    }
    // /递归处理builtValue
    // /elementPath 为此MXJSStatefulWidget build的WidgetTree中嵌套MXJSStatefulWidget的位置
    // /element path : buildWidgetTreeSeq/FlutterWidget ClassName/FlutterWidget ClassName...
    // /MXJSStatefulWidget sub class Name + key
    // /eg. element path : "3/Scaffold_key/AppBar_key/children/1/MXJSWidgetHomePage_key"
    inflateWidgetTree(jsWidgetTree, builtValue, elementPath, propertyName) {
        // MXJSLog.log("preBuildJson:" + dataValue);
        // MXJSLog.debug(elementPath);
        // builtValue是onTap onXXX响应函数转成CallbackID
        if (typeof builtValue === 'function' && propertyName && propertyName.indexOf('on') === 0) {
            // callback 在WidgetTree中的path可以作为唯一标示，匹配前后是否是相同控件的callback，可用于后台直出，或者本地预先保存Build好的UI数据
            const callbackPath = elementPath;
            return jsWidgetTree.createCallbackID(builtValue, callbackPath);
        }
        // builtValue是非对象，直接返回原值
        if (typeof builtValue !== 'object') {
            return builtValue;
        }
        // builtValue的root节点是MXJSStatelessWidget 直接展开，返回build后的值
        if (builtValue instanceof widget_1.MXJSStatelessWidget) {
            builtValue = builtValue.build(this);
            // 处理builtValue.build(this)的返回值，仍然是MXJSStatelessWidget的情况，递归处理
            return this.inflateWidgetTree(jsWidgetTree, builtValue, elementPath);
        }
        if (builtValue instanceof widget_1.MXJSStatefulWidget) {
            builtValue = this.updateStatefulWidget(jsWidgetTree, builtValue, elementPath);
            return this.inflateWidgetTree(jsWidgetTree, builtValue, elementPath);
        }
        // builtValue是FlutterWidget镜像类，做preBuild处理
        // ListView等需要在build前展开children的镜像类， 有preBuild 函数
        if (builtValue instanceof base_type_1.FlutterWidget) {
            this.preBuildFlutterWidget(builtValue);
            elementPath = `${elementPath}/${builtValue.pathComponent}`;
        }
        // builtValue是FlutterWidget镜像类，递归处理builtValue的属性
        // eslint-disable-next-line no-restricted-syntax
        for (const propertyName in builtValue) {
            let value = builtValue[propertyName];
            // if (value != undefined && value != null && value != 0 &&  value != false)
            if (value) {
                const valuePath = `${elementPath}/${propertyName}`;
                value = this.inflateWidgetTree(jsWidgetTree, value, valuePath, String(propertyName));
                builtValue[propertyName] = value;
            }
        }
        // builtValue是mxjsbuilder v0.2.0 ddc编译的JS FlutterWidget镜像类，递归处理builtValue的objectSymbols
        const objectSymbols = Object.getOwnPropertySymbols(builtValue);
        const len = objectSymbols.length;
        for (let i = 0; i < len; ++i) {
            const propertyName = objectSymbols[i].toString();
            let value = builtValue[objectSymbols[i]];
            if (value !== undefined && value !== null) {
                const valuePath = `${elementPath}/${propertyName}`;
                value = this.inflateWidgetTree(jsWidgetTree, value, valuePath, String(propertyName));
                builtValue[propertyName] = value;
            }
        }
        return builtValue;
    }
    // return builtTree
    updateStatefulWidget(jsWidgetTree, statefulWidget, elementPath) {
        elementPath = `${elementPath}/${statefulWidget.pathComponent}`;
        // 使用flutter的更新规则,tree path/ class / key相等，认为是同一位置widget更新
        // TODO:平级节点下，多个statefulWidget children，没有对齐flutter，做同级复用，只实现了相同索引位置的生命周期保持和更新
        let oldElement = null;
        if (this.currentWidgetTree) {
            oldElement = this.currentWidgetTree.findElement(elementPath);
        }
        // mxjsbuilder ddc编译出的继承自MXJSStatefulWidget的 widget，没有被初始化
        statefulWidget.init();
        // 匹配到对应节点
        if (oldElement) {
            jsWidgetTree.addChildElement(elementPath, oldElement);
            const built = oldElement.update(statefulWidget);
            return built;
        }
        const newElement = this.inflateWidget(statefulWidget);
        jsWidgetTree.addChildElement(elementPath, newElement);
        const built = newElement.mount(this);
        return built;
    }
    //  Element inflateWidget(Widget newWidget, dynamic newSlot)
    inflateWidget(newWidget, newSlot) {
        // let key = newWidget.key;
        // TODO:retakeInactiveElement GlobalKey final Element newChild = _retakeInactiveElement(key, newWidget);
        const newElement = newWidget.createElement();
        return newElement;
    }
    // FlutterWidget
    preBuildFlutterWidget(flutterWidget) {
        if (!flutterWidget.className) {
            flutterWidget.className = flutterWidget.constructor.name;
        }
        flutterWidget.preBuild(this);
    }
    // ==========================================================
    // 0.1.0 2020-4-2 修改为不经过dart侧buildend确认，当发送rebuild或等价构建UI调用后
    // 直接确认CurrentTree，目的是可以聚合延迟发送buildend
    confirmCurrentWidgetTree() {
        this.preWidgetTree = this.currentWidgetTree;
        this.currentWidgetTree = this.buildingWidgetTree;
    }
    findChildElement(widgetID) {
        var _a;
        if (this.widgetElementID === widgetID) {
            return this;
        }
        // 先在currentTree里找，一般这里能找到
        let findElement;
        if (this.currentWidgetTree) {
            findElement = this.findElementFromWidgetTree(this.currentWidgetTree, widgetID);
            if (findElement) {
                return findElement;
            }
        }
        // 找不到就遍历treemap，为了去掉 buildend 回调确认WidgetTree的过程
        // eslint-disable-next-line no-restricted-syntax
        for (const seq in this.buildSeq2WTreeMap) {
            if (((_a = this.currentWidgetTree) === null || _a === void 0 ? void 0 : _a.buildWidgetDataSeq) === seq) {
                continue;
            }
            const widgetTree = this.buildSeq2WTreeMap.get(seq);
            if (widgetTree) {
                findElement = this.findElementFromWidgetTree(widgetTree, widgetID);
                if (findElement) {
                    return findElement;
                }
            }
        }
        // 查找被自己push的widgets
        findElement = this.navPushedWidgetElements.get(widgetID);
        if (findElement) {
            return findElement;
        }
        // eslint-disable-next-line no-restricted-syntax
        for (const k in this.navPushedWidgetElements) {
            const element = this.navPushedWidgetElements.get(k);
            findElement = element === null || element === void 0 ? void 0 : element.findChildElement(widgetID);
            if (findElement) {
                return findElement;
            }
        }
    }
    findElementFromWidgetTree(widgetTree, widgetID) {
        if (widgetTree === null) {
            return null;
        }
        const element = widgetTree.widgetID2ChildrenElements[widgetID];
        if (element) {
            return element;
        }
        // eslint-disable-next-line no-restricted-syntax
        for (const k in widgetTree.widgetID2ChildrenElements) {
            const element = widgetTree.widgetID2ChildrenElements[k];
            const findElement = element.findChildElement(widgetID);
            if (findElement) {
                return findElement;
            }
        }
        return null;
    }
    onBuildEnd(buildWidgetDataSeq, profileInfo) {
        const tree = this.buildSeq2WTreeMap.get(buildWidgetDataSeq);
        if (tree) {
            this.preWidgetTree = this.currentWidgetTree;
            this.currentWidgetTree = tree;
            log_1.MXJSLog.log(`MXJSElement::onFlutterBuildEnd success::${this.widget.logString()} buildWidgetDataSeq: ${buildWidgetDataSeq}`);
            this.clearWidgetTree(buildWidgetDataSeq);
        }
        else {
            log_1.MXJSLog.error(`JSWidget onFlutterBuildEnd fail buildSeq2WTreeMap.keys: [${Object.keys(this.buildSeq2WTreeMap).join('|')}]::${this.widget.logString()} buildWidgetDataSeq: ${buildWidgetDataSeq}`);
        }
        this.widget.setProfileInfo(profileInfo);
    }
    // 比buildWidgetDataSeq小的tree 可以清理掉了
    clearWidgetTree(buildWidgetDataSeq) {
        const intCurSeq = parseInt(buildWidgetDataSeq, 10);
        const clearSeqs = [];
        this.buildSeq2WTreeMap.forEach((v, seq) => {
            const intSeq = parseInt(seq, 10);
            // 保留第一次的构建，兼容有些Flutter Widget有不更新Widget内容的bug
            if (intSeq > 1 && intSeq < intCurSeq) {
                clearSeqs.push(seq);
            }
        });
        clearSeqs.forEach((seq) => {
            // MXJSLog.debug("JSWidget clearWidgetTree::" + this.widget.logString() + " delSeq: " + delSeq);
            this.buildSeq2WTreeMap.delete(seq);
        });
    }
    onDispose() {
        var _a;
        log_1.MXJSLog.log(`JSWidget onFlutterDispose ::${this.widget.logString()}`);
        // 调用子widget disposeWidget
        (_a = this.currentWidgetTree) === null || _a === void 0 ? void 0 : _a.widgetID2ChildrenElements.forEach((element, k) => {
            element.onDispose();
        });
    }
    // TODO: 清理push页面要重新梳理，向上找到有navPushedWidgetElements的父节点，然后删除
    clearPushedWidgetElements() {
        // 清空当前widget的navPushedWidgets数据
        this.navPushedWidgetElements.forEach((element, k) => {
            element.onDispose();
            // TODO::fix
            if (element.parent) {
                // element.parent.removeChildWidget(element);
            }
            if (element.navPushingWidgetElement) {
                element.navPushingWidgetElement.removePushedWidget(element);
            }
        });
        this.navPushedWidgetElements = new Map();
    }
    removePushedWidget(element) {
        this.navPushedWidgetElements.delete(element.widgetElementID);
    }
    wappingPushingWidget(pushWidget) {
        // 那种根节点不是statewidget的页面 比如Theme
        let newPushWidget;
        if (pushWidget instanceof base_type_1.FlutterWidget) {
            // 特殊处理，用MXJSStatelessWidget包裹一层
            newPushWidget = new widget_1.MXJSStatelessWapperWidget(pushWidget);
        }
        else {
            newPushWidget = pushWidget;
        }
        return newPushWidget;
    }
    getWidgetTreeBuildSeq(widgetTree) {
        if (widgetTree === null) {
            return '0';
        }
        return widgetTree.buildWidgetDataSeq;
    }
}
exports.MXJSElement = MXJSElement;
MXJSElement.widgetElementIDFeed = 0;
// /保存一次build的数据，缓存element的树，缓存callback函数，方便整体释放过期的build数据
class MXJSWidgetTree {
    constructor(buildWidgetDataSeq) {
        this.callbackIDFeed = 0;
        this.buildWidgetDataSeq = buildWidgetDataSeq;
        this.childrenElements = new Map(); // path 2 widget
        this.widgetID2ChildrenElements = new Map(); // id 2 widget
        this.callbackID2fun = new Map();
    }
    findElement(elementPath) {
        return this.childrenElements[elementPath];
    }
    addChildElement(elementPath, element) {
        this.childrenElements[elementPath] = element;
        this.widgetID2ChildrenElements[element.widgetElementID] = element;
    }
    // TODO:callbackPath应用
    createCallbackID(callback, callbackPath) {
        const cID = this.generateCallbackID();
        const callbackID = `${this.ownerElement.widgetElementID}/${cID}`;
        this.callbackID2fun[callbackID] = callback;
        return callbackID;
    }
    invokeCallback(callbackID, ...args) {
        const callback = this.findCallback(callbackID);
        return callback(...args);
    }
    findCallback(callbackID) {
        return this.callbackID2fun[callbackID];
    }
    canInvoke(callbackID) {
        return this.callbackID2fun[callbackID];
    }
    generateCallbackID() {
        this.callbackIDFeed += 1; // copy 老逻辑
        return `${this.callbackIDFeed}`;
    }
}
exports.MXJSWidgetTree = MXJSWidgetTree;
// / An [Element] that uses a [StatelessWidget] as its configuration.
class MXJSStatelessElement extends MXJSElement {
    constructor(widget) {
        super(widget);
    }
    build() {
        if (!(this.widget instanceof widget_1.MXJSStatelessWidget)) {
            //
            throw console_1.exception('MXJSStatelessElement.widget is not MXJSStatelessWidget! ');
        }
        return this.widget.build(this);
    }
}
exports.MXJSStatelessElement = MXJSStatelessElement;
// / An [Element] that uses a [StatefulWidget] as its configuration.
class MXJSStatefulElement extends MXJSElement {
    constructor(widget) {
        super(widget);
        if (!(this.widget instanceof widget_1.MXJSStatefulWidget)) {
            //
            throw console_1.exception('MXJSStatefulElement.widget is not MXJSStatefulWidget! ');
        }
        this.state = this.widget.createState();
        this.state.element = this;
        this.state.widget = widget;
    }
    // /*initState的时机*
    firstBuild() {
        this.state.initState();
        return super.firstBuild();
    }
    build() {
        return this.state.build(this);
    }
    // / Change the widget used to configure this element.
    // /
    // / The framework calls this function when the parent wishes to use a
    // / different widget to configure this element. The new widget is guaranteed
    // / to have the same [runtimeType] as the old widget.
    // /
    // / This function is called only during the "active" lifecycle state.
    update(newStatefulWidget) {
        if (typeof newStatefulWidget !== typeof this.widget) {
            // same error
            return null;
        }
        this.widget = newStatefulWidget;
        this.state.widget = newStatefulWidget;
        return this.rebuild();
    }
    onBuildEnd(buildWidgetDataSeq, profileInfo) {
        super.onBuildEnd(buildWidgetDataSeq, profileInfo);
        // TODO:重构
        if (this.widget instanceof widget_1.MXJSStatefulWidget && this.state) {
            this.state.onBuildEnd(profileInfo);
        }
    }
    onDispose() {
        super.onDispose();
        if (this.widget instanceof widget_1.MXJSStatefulWidget && this.state) {
            this.state.dispose();
        }
    }
}
exports.MXJSStatefulElement = MXJSStatefulElement;
// / Element 组成树形结构，RootMgrElement为最顶层节点, 负责管理从Flutter Push的根部节点
// / 从Flutter Push的根部节点可能有多个，MXJSRootMgrElement要负责这些RootElement的生命周期
// / *从代码上MXJSRootMgrElement也是继承自MXJSElement，继承递归管理子element的功能。*
class MXJSRootMgrElement extends MXJSElement {
    constructor() {
        // 固定一颗WidgetTree
        const widget = new widget_1.MXJSStatelessWapperWidget(null);
        super(widget);
        this.currentWidgetTree = new MXJSWidgetTree('1');
        this.buildSeq2WTreeMap.set(this.currentWidgetTree.buildWidgetDataSeq, this.currentWidgetTree);
    }
    // /Flutter->JS  push/run widget 为js入口api ，作为根部widget ，可以有多个root widget
    // /TODO:: 重复push一样的widget需要处理
    addRootElement(rootElement) {
        var _a;
        (_a = this.currentWidgetTree) === null || _a === void 0 ? void 0 : _a.addChildElement(rootElement.widget.pathComponent, rootElement);
    }
}
exports.MXJSRootMgrElement = MXJSRootMgrElement;


/***/ }),

/***/ "./node_modules/@tencent/mxflutter/lib/widget/widget.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tencent/mxflutter/lib/widget/widget.js ***!
  \**************************************************************/
/*! flagged exports */
/*! export MXJSBaseWidget [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXJSStatefulWidget [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXJSStatelessWapperWidget [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXJSStatelessWidget [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MXJSWidgetState [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MXJSStatelessWapperWidget = exports.MXJSWidgetState = exports.MXJSStatefulWidget = exports.MXJSStatelessWidget = exports.MXJSBaseWidget = void 0;
const log_1 = __webpack_require__(/*! ../log */ "./node_modules/@tencent/mxflutter/lib/log.js");
const element_1 = __webpack_require__(/*! ./element */ "./node_modules/@tencent/mxflutter/lib/widget/element.js");
class MXJSBaseWidget {
    // TODO: { key } = {}
    // constructor(name, { key } = {}) {
    constructor(name, { key } = {}) {
        this.name = name;
        this.key = key;
        this.initialized = false;
        // 编译出来的JS可能调用不到JS构造函数，手动调用下.init
        this.init();
    }
    init() {
        // /性能分析模式
        // /打开性能分析模式，widget.enableProfile = true
        // /可以重载onBuildEnd，使用getProfileText获得各个阶段耗时
        this.enableProfile = false;
        this.profileInfo = {};
    }
    // subclass override
    onBuildEnd(args) { }
    // 用于WidgetTree的Path定位
    get pathComponent() {
        let component = this.constructor.name;
        if (this.name) {
            component = `${component}-${this.name}`;
        }
        if (this.key) {
            component = `${component}-${this.key.toString()}`;
        }
        return component;
    }
    logString() {
        const log = `WidgetInfo: Name: ${this.name} Class: ${this.className}`;
        return log;
    }
    // /性能分析模式
    // /打开性能分析模式，widget.enableProfile = true
    // /可以重载onBuildEnd，使用getProfileText获得各个阶段耗时
    setProfileInfo(profileInfo) {
        if (this.enableProfile && profileInfo) {
            this.profileInfo.startDecodeData = profileInfo.startDecodeData;
            this.profileInfo.endDecodeData = profileInfo.endDecodeData;
            this.profileInfo.buildEnd = profileInfo.buildEnd;
        }
    }
    getProfileText() {
        const { profileInfo } = this;
        const { startEncodeData } = profileInfo;
        const { startTransferData } = profileInfo;
        const { startDecodeData } = profileInfo;
        const { endDecodeData } = profileInfo;
        const { buildEnd } = profileInfo;
        const { transferDataLen } = profileInfo;
        const buildDataCost = startTransferData - startEncodeData;
        const transferCost = startDecodeData - startTransferData;
        const decodeDataCost = endDecodeData - startDecodeData;
        const paintCost = buildEnd - endDecodeData;
        const mxcost = endDecodeData - startEncodeData;
        const flutterBuild = endDecodeData - startEncodeData;
        const profileText = `总耗时: MXFlutterTotal: ${mxcost}ms FlutterBuild: ${paintCost}ms 详情:\n`
            + `[JS]buildJSWidgetTree2Json: ${buildDataCost}ms \n`
            + `[JS->Native->Dart]transfer(${(transferDataLen * 2.0 / 1024.0).toFixed(2)}Kb): ${transferCost}ms\n`
            + `[Dart]DecodeJson: ${decodeDataCost}ms\n`
            + `[Dart]flutterBuild: ${paintCost}ms`;
        return profileText;
    }
}
exports.MXJSBaseWidget = MXJSBaseWidget;
// 无状态的MXJSStatelessWidget,在JS PreBuild阶段提前build
class MXJSStatelessWidget extends MXJSBaseWidget {
    constructor(name, { key } = {}) {
        super(name, { key });
        this.className = 'MXJSStatelessWidget';
    }
    init() {
        if (this.initialized) {
            return;
        }
        this.initialized = true;
        super.init();
        this.className = 'MXJSStatelessWidget';
    }
    // MXJSStatelessElement createElement();
    createElement() {
        if (!this.initialized) {
            this.init();
        }
        const element = new element_1.MXJSStatelessElement(this);
        if (this.flutterHostWidgetID) {
            element.widgetElementID = this.flutterHostWidgetID;
        }
        return element;
    }
}
exports.MXJSStatelessWidget = MXJSStatelessWidget;
class MXJSStatefulWidget extends MXJSBaseWidget {
    constructor(name, { key } = {}) {
        super(name, { key });
        this.className = 'MXJSStatefulWidget';
    }
    init() {
        if (this.initialized) {
            return;
        }
        this.initialized = true;
        super.init();
        this.className = 'MXJSStatefulWidget';
    }
    // MXJSStatefulElement createElement();
    createElement() {
        if (!this.initialized) {
            this.init();
        }
        const element = new element_1.MXJSStatefulElement(this);
        if (this.flutterHostWidgetID) {
            element.widgetElementID = this.flutterHostWidgetID;
        }
        return element;
    }
}
exports.MXJSStatefulWidget = MXJSStatefulWidget;
class MXJSWidgetState {
    constructor() {
        this.widget = null;
    }
    get context() {
        return this.element;
    }
    get mounted() {
        return this.element !== null;
    }
    // / Called when this object is inserted into the tree.
    // /
    // / The framework will call this method exactly once for each [State] object
    // / it creates.
    // / subclass override
    // / @mustCallSuper
    initState() {
        var _a;
        log_1.MXJSLog.log(`MXJSWidgetState initState ::${(_a = this.widget) === null || _a === void 0 ? void 0 : _a.logString()}`);
    }
    setState(fun) {
        var _a, _b;
        log_1.MXJSLog.log(`MXJSWidgetState setState ::${(_a = this.widget) === null || _a === void 0 ? void 0 : _a.logString()}`);
        if (fun) {
            fun();
        }
        // call-> Flutter
        // this.widget.helper.callFlutterRebuild();
        (_b = this.element) === null || _b === void 0 ? void 0 : _b.markNeedsBuild();
    }
    // subclass overwite
    onBuildEnd(args) { }
    // subclass override
    dispose() { }
}
exports.MXJSWidgetState = MXJSWidgetState;
// 支持 mxjsbuilder v2，widget要有 new 方法
MXJSWidgetState.new = MXJSWidgetState.constructor;
class MXJSStatelessWapperWidget extends MXJSStatelessWidget {
    constructor(child, { key } = {}) {
        super('MXJSStatelessWapperWidget', { key });
        this.child = child;
    }
    build() {
        return this.child;
    }
}
exports.MXJSStatelessWapperWidget = MXJSStatelessWapperWidget;


/***/ }),

/***/ "./node_modules/@tencent/mxflutter/lib/widget/widgets-binding.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tencent/mxflutter/lib/widget/widgets-binding.js ***!
  \***********************************************************************/
/*! flagged exports */
/*! export WidgetsBinding [provided] [no usage info] [missing usage info prevents renaming] */
/*! export WidgetsFlutterBinding [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WidgetsFlutterBinding = exports.WidgetsBinding = void 0;
const build_owner_1 = __webpack_require__(/*! ./build-owner */ "./node_modules/@tencent/mxflutter/lib/widget/build-owner.js");
const element_1 = __webpack_require__(/*! ./element */ "./node_modules/@tencent/mxflutter/lib/widget/element.js");
// copy flutter api
// / The glue between the js widgets and the Flutter MXUIEngine.
class WidgetsBinding {
    constructor() {
        this.buildOwner = new build_owner_1.MXJSBuildOwner();
        // rootMgrElement是个虚拟Element，负责管理push的Widget或runAPP 的Widget
        this.rootMgrElement = new element_1.MXJSRootMgrElement();
        this.rootMgrElement.assignOwner(this.buildOwner);
        this.initInstances();
    }
    initInstances() {
        WidgetsBinding.instance = this;
    }
    // Flutter通过MXJSFlutter.getInstance().navigatorPushWithName("JSWidgetHomePage",...);push页面时,会调用到此函数
    navigatorPushWithName(widgetName, flutterHostWidgetID, args) {
        // 调用到用户代码，根据widgetName创建JSWidget
        // TODO: TS Widget  let widget: MXJSBaseWidget
        const widget = this.jsFlutterApp.createJSWidgetWithName(widgetName);
        if (!widget) {
            // TODO 报告错误，push一个错误提示页面。
            return;
        }
        widget.init();
        widget.flutterHostWidgetID = flutterHostWidgetID;
        // TODO: buildContextInfo 重构
        const buildContextInfo = args;
        this.attachRootWidget(widget, buildContextInfo);
    }
    // /Flutter->JS  push/run widget 为js入口api ，作为根部widget ，可以有多个root widget
    // /void attachRootWidget(Widget rootWidget)
    attachRootWidget(rootWidget, buildContextInfo) {
        const rootElement = rootWidget.createElement();
        //
        rootElement.assignOwner(this.buildOwner);
        // TODO:重构setInheritedInfo
        rootElement.setInheritedInfo(buildContextInfo);
        this.rootMgrElement.addRootElement(rootElement);
        // /把element build完成之后，安装到 root element上
        // element 为rootElement,parent = null，但this.rootMgrElement 的childrenElement有为rootElement
        const builtTree = this.buildOwner.buildScope(rootElement, () => rootElement.mount(null));
        this.buildOwner.callFlutterRebuildWidget(builtTree);
    }
    // flutter -> js channel
    nativeCall(args) {
        console.log('nativeCall', args);
        // TODO mark const
        if (args.method === 'flutterCallOnEventCallback') {
            // {arguments: {widgetID: "5", buildSeq: "1", args: "qweeqwe", callID: "5/9"},
            // method: "flutterCallOnEventCallback"}
            return this.rootMgrElement.onEventCallback(args.arguments);
        }
        if (args.method === 'flutterCallOnBuildEnd') {
            // {method: "flutterCallOnBuildEnd", arguments: {widgetID: "6", buildSeq: "1", rootWidgetID: "5"}}
            this.rootMgrElement.onFlutterBuildEnd(args.arguments);
        }
        else if (args.method === 'flutterCallNavigatorPushWithName') {
            this.flutterCallNavigatorPushWithName.call(this, args.arguments);
        }
        else if (args.method === 'flutterCallFrequencyLimitCallList') {
            // list native call
            this.flutterCallFrequencyLimitCallList(args.arguments);
        }
        else if (args.method === 'flutterCallOnDispose') {
            // 递归子 widget
            this.flutterCallOnDispose(args.arguments);
        }
        else if (args.method === 'flutterCallOnMirrorObjInvoke') {
            // TODO 还没见过
            this.flutterCallOnMirrorObjInvoke(args.arguments);
        }
    }
    flutterCallFrequencyLimitCallList(args) {
        if (args) {
            args.forEach((element) => {
                this.nativeCall(element);
            });
        }
    }
    flutterCallNavigatorPushWithName(args) {
        const { widgetName } = args;
        const flutterHostWidgetID = args.widgetID;
        this.navigatorPushWithName(widgetName, flutterHostWidgetID, args);
    }
    flutterCallOnDispose(args) {
        this.rootMgrElement.onFlutterDispose(args);
        const { mirrorObjIDList } = args;
        // TODO: MirrorMoudle
        // FlutterWidgetMirrorMgr.getInstance().removeMirrorObjects(mirrorObjIDList);
    }
    flutterCallOnMirrorObjInvoke(args) {
        // TODO: MirrorMoudle
        // var mirrorObjID = args["mirrorID"];
        // var functionName = args["functionName"];
        // var args = args["args"];
        // var mirrorObj = FlutterWidgetMirrorMgr.getInstance().getMirrorObj(
        //     mirrorObjID
        // );
        // if (mirrorObj != null) {
        //     mirrorObj[functionName](args);
        // }
    }
}
exports.WidgetsBinding = WidgetsBinding;
WidgetsBinding.instance = null;
// copy flutter api
class WidgetsFlutterBinding extends WidgetsBinding {
    // copy flutter api : WidgetsFlutterBinding.ensureInitialized()
    static ensureInitialized() {
        if (WidgetsBinding.instance === null) {
            return new WidgetsFlutterBinding();
        }
        return WidgetsBinding.instance;
    }
}
exports.WidgetsFlutterBinding = WidgetsFlutterBinding;


/***/ })

};
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,